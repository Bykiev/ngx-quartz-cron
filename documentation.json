{
    "pipes": [],
    "interfaces": [
        {
            "name": "Chainable",
            "id": "interface-Chainable-9160cd25b067cdedce3c753957e0df6f9dd9697c47ca0667f8a91f74ac674a764ce3a5cd7a45c7f6876d51259c8586f63b1ee5bdfa4a1d5bf94457322018bd12",
            "file": "cypress/support/component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import './commands'\n\n// Alternatively you can use CommonJS syntax:\n// require('./commands')\n\nimport { mount } from 'cypress/angular'\n\n// Augment the Cypress namespace to include type definitions for\n// your custom command.\n// Alternatively, can be defined in cypress/support/component.d.ts\n// with a <reference path=\"./component\" /> at the top of your spec.\ndeclare global {\n  namespace Cypress {\n    interface Chainable {\n      mount: typeof mount\n    }\n  }\n}\n\nCypress.Commands.add('mount', mount)\n\n// Example use:\n// cy.mount(MyComponent)",
            "properties": [
                {
                    "name": "mount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [
        {
            "name": "CronHostComponent",
            "id": "directive-CronHostComponent-748a35d80a0dce86558eb8a7133633ec1be66e66b89dd345e6b1deb8b17daf02697016e5b6a3652b69e73235800f1365127055fd2a5b6340d0911402dc3e2709",
            "file": "projects/ng-cron/src/lib/cron-host.abstract.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input, Output, EventEmitter } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { Type, CronUnixUIService, CronQuartzUIService } from '@sbzen/cron-core';\n\nimport { CronLocalization, localization, DeepPartial } from './cron-localization';\n\ntype RawObject = DeepPartial<{\n\t[key: string]: string|RawObject;\n}>;\n\n@Directive()\nexport abstract class CronHostComponent implements ControlValueAccessor {\n  @Output() readonly changed = new EventEmitter<string>();\n  @Output() readonly tabChanged = new EventEmitter<Type>();\n  @Input() cssClassPrefix = '';\n  @Input() activeTab: Type = this.getActiveTab();\n  @Input() tabs: Type[]|null = null;\n  @Input() hideTabs = false;\n  @Input() localization?: CronLocalization;\n  @Input() set disabled(value: string|null|boolean) {\n    const disableFields = value != null && `${value}` !== 'false';\n    this.cronUI.setDisabled(disableFields);\n  }\n\n  protected onChange: ((cronValue: string) => {})|null = null;\n  protected onTouched: (() => {})|null = null;\n\n  readonly type = Type;\n\n  constructor(\n    private readonly cronUI: CronUnixUIService|CronQuartzUIService,\n    private readonly initialTabs: Type[]\n  ) {}\n\n  writeValue(cronValue: string) {\n    this.cronUI.fillFromExpression(cronValue || '');\n  }\n\n  registerOnChange(fn: (cronValue: string) => {}) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => {}) {\n    this.onTouched = fn;\n  }\n\n  applyChanges() {\n    const str = this.cronUI.toString();\n    if (this.onChange) {\n      this.onChange(str);\n    }\n    if (this.onTouched) {\n      this.onTouched();\n    }\n    this.changed.emit(str);\n  }\n\n  getActiveTab() {\n    const tabs = this.getTabs();\n    const [firstTab] = tabs.length ? tabs : [this.initialTabs[0]];\n    return this.activeTab || firstTab;\n  }\n\n  getTabs() {\n    return this.tabs || this.initialTabs;\n  }\n\n  getLocalization() {\n    const args: RawObject[] = [localization];\n    if (this.localization) {\n      args.push(this.localization);\n    }\n    return this.mergeDeep<typeof localization>(...args);\n  }\n\n  private mergeDeep<T extends RawObject>(...objects: RawObject[]) {\n    return objects.reduce((prev, obj) => {\n      Object.keys(obj).forEach(key => {\n        const pVal = prev[key];\n        const oVal = obj[key];\n\n        if (pVal && typeof pVal === 'object' && oVal && typeof oVal === 'object') {\n          prev[key] = this.mergeDeep(pVal, oVal);\n        } else {\n          prev[key] = oVal;\n        }\n      });\n\n      return prev;\n    }, {}) as T;\n  }\n}\n",
            "providers": [],
            "inputsClass": [
                {
                    "name": "activeTab",
                    "defaultValue": "this.getActiveTab()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "Type",
                    "decorators": []
                },
                {
                    "name": "cssClassPrefix",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string | null | boolean",
                    "decorators": []
                },
                {
                    "name": "hideTabs",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "localization",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "CronLocalization",
                    "decorators": []
                },
                {
                    "name": "tabs",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "Type[] | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "changed",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter"
                },
                {
                    "name": "tabChanged",
                    "defaultValue": "new EventEmitter<Type>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "EventEmitter"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "onChange",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "onTouched",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "Type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        144
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "applyChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getActiveTab",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getLocalization",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getTabs",
                    "args": [],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "mergeDeep",
                    "args": [
                        {
                            "name": "objects",
                            "type": "RawObject[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true
                        }
                    ],
                    "optional": false,
                    "returnType": "T",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "objects",
                            "type": "RawObject[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "cronValue",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "cronValue",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "cronValue",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "cronValue",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "implements": [
                "ControlValueAccessor"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cronUI",
                        "type": "CronUnixUIService | CronQuartzUIService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "initialTabs",
                        "type": "Type[]",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "cronUI",
                        "type": "CronUnixUIService | CronQuartzUIService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "initialTabs",
                        "type": "Type[]",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "disabled": {
                    "name": "disabled",
                    "setSignature": {
                        "name": "disabled",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "string | null | boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 20,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string | null | boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            }
        },
        {
            "name": "CronTabComponent",
            "id": "directive-CronTabComponent-448dc52bdec8333e32872d13b78a0bd39b0d241956ea8be41bc9e0abbb5bd5c3e879ccc6c0304f8b501066c9360990357a2469fb967198c28a537fb4caf10a6f",
            "file": "projects/ng-cron/src/lib/cron-tab.abstract.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input, ChangeDetectorRef, Output, EventEmitter, OnInit, OnDestroy } from '@angular/core';\nimport { Mode, Segment, CronUnixUIService, CronQuartzUIService } from '@sbzen/cron-core';\n\nimport { FullCronLocalization } from './cron-localization';\n\n@Directive()\nexport abstract class CronTabComponent implements OnInit, OnDestroy {\n  @Output() readonly changed = new EventEmitter<never>();\n  @Input() localization!: FullCronLocalization;\n  @Input() cssClassPrefix = '';\n\n  private readonly sessionId = Date.now().toString();\n  private unListener: (() => void)|null = null;\n  protected abstract readonly segments: Segment[];\n  protected abstract readonly cd: ChangeDetectorRef;\n\n  abstract readonly cronUI: CronUnixUIService|CronQuartzUIService;\n  readonly mode = Mode;\n\n  ngOnInit() {\n    this.unListener = this.cronUI.listen(this.segments, () => {\n      this.cd.detectChanges();\n      this.applyChanges();\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.unListener) {\n      this.unListener();\n    }\n  }\n\n  genId(mode: Mode, extra?: string) {\n    return `${mode}-${extra || ''}${this.sessionId}`;\n  }\n\n  localizeList(list: { value: string, label: string }[], localizationStore: { [key: string]: string }) {\n    return list.map(v => ({\n      ...v,\n      label: this.localizeLabel(v.label, localizationStore)\n    }));\n  }\n\n  localizeLabel(label: string, localizationStore: { [key: string]: string }) {\n    return localizationStore[label.toLowerCase()]\n  }\n\n  protected applyChanges() {\n    this.changed.emit();\n  }\n}\n",
            "providers": [],
            "inputsClass": [
                {
                    "name": "cssClassPrefix",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "localization",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "FullCronLocalization",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "changed",
                    "defaultValue": "new EventEmitter<never>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "EventEmitter"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "cd",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChangeDetectorRef",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        122,
                        126,
                        144
                    ]
                },
                {
                    "name": "cronUI",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronUnixUIService | CronQuartzUIService",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        126,
                        144
                    ]
                },
                {
                    "name": "mode",
                    "defaultValue": "Mode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "segments",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Segment[]",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        122,
                        126,
                        144
                    ]
                },
                {
                    "name": "sessionId",
                    "defaultValue": "Date.now().toString()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121,
                        144
                    ]
                },
                {
                    "name": "unListener",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "applyChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "genId",
                    "args": [
                        {
                            "name": "mode",
                            "type": "Mode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "extra",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "mode",
                            "type": "Mode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "extra",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "localizeLabel",
                    "args": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "localizeList",
                    "args": [
                        {
                            "name": "list",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "list",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "OnInit",
                "OnDestroy"
            ]
        },
        {
            "name": "CronTabSingleSegmentComponent",
            "id": "directive-CronTabSingleSegmentComponent-038626bf20ad264be11a1260f6c8a89bd009a79a0c80784ed0ba79e31280ecec983c33974f975472b541d2e716a0f17cae85252e471c3d3d7ef353069b391f4d",
            "file": "projects/ng-cron/src/lib/cron-tab-single-segment.abstract.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, ViewChild } from '@angular/core';\nimport { Segment, Type } from '@sbzen/cron-core';\n\nimport { CronAndComponent } from './shared';\nimport { CronTabComponent } from './cron-tab.abstract';\nimport { CronSingleType } from './cron-single-tab.type';\n\n@Directive()\nexport abstract class CronTabSingleSegmentComponent extends CronTabComponent {\n  @ViewChild(CronAndComponent, { static: true }) and: CronAndComponent|null = null;\n  readonly segments: Segment[];\n\n  constructor(tab: CronSingleType) {\n    super();\n    this.segments = this.getSegments(tab);\n  }\n\n  protected override applyChanges() {\n    if (this.and) {\n      this.and.detectChanges();\n    }\n    super.applyChanges();\n  }\n\n  private getSegments(tab: CronSingleType) {\n    const segment = new Map<CronSingleType, Segment>([\n      [Type.HOURS, Segment.hours],\n      [Type.MINUTES, Segment.minutes],\n      [Type.MONTH, Segment.month],\n      [Type.SECONDS, Segment.seconds],\n      [Type.YEAR, Segment.year]\n    ]).get(tab);\n\n    if (!segment) {\n      throw `No segments for tab: ${tab}`;\n    }\n\n    return [segment];\n  }\n}\n",
            "providers": [],
            "inputsClass": [
                {
                    "name": "cssClassPrefix",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localization",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "FullCronLocalization",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "changed",
                    "defaultValue": "new EventEmitter<never>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "and",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronAndComponent | null",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "CronAndComponent, {static: true}"
                        }
                    ]
                },
                {
                    "name": "segments",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Segment[]",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "cd",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChangeDetectorRef",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        122,
                        126,
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "cronUI",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronUnixUIService | CronQuartzUIService",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        126,
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "mode",
                    "defaultValue": "Mode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "sessionId",
                    "defaultValue": "Date.now().toString()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121,
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "unListener",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "applyChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122,
                        158
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "getSegments",
                    "args": [
                        {
                            "name": "tab",
                            "type": "CronSingleType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "tab",
                            "type": "CronSingleType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "genId",
                    "args": [
                        {
                            "name": "mode",
                            "type": "Mode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "extra",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "mode",
                            "type": "Mode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "extra",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localizeLabel",
                    "args": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localizeList",
                    "args": [
                        {
                            "name": "list",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "list",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "extends": "CronTabComponent",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "tab",
                        "type": "CronSingleType",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "tab",
                        "type": "CronSingleType",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-8b02fab72f376ba47c3db7dd5affdbaefb4c638a7fdc72d4752836aae592878915be723ee791ea2ea1022abe99bb31548b91eea41264a2385eea8067d02b9d06",
            "file": "projects/e2e/src/app/app.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<test></test>\n"
        },
        {
            "name": "ContainerComponent",
            "id": "component-ContainerComponent-cccd8623b225f97e62d267d81d80da4790070b7ff9bc8246ed582bbeefa612330ca3749f8fe1f9ad3a7e13a611e421d7cd773ca8de7cc4e383086c9a4dabe454",
            "file": "projects/e2e/src/app/test/container/container.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "container",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./container.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "initialTabs",
                    "defaultValue": "[Tab.SECONDS, Tab.MINUTES, Tab.HOURS, Tab.DAY, Tab.MONTH, Tab.YEAR]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "{}",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "ticked",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "activeTab",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Tab | undefined",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<HTMLDivElement>",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'content'"
                        }
                    ]
                },
                {
                    "name": "cssClassPrefix",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": true,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "hideTabs",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": true,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "localization",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronLocalization | undefined",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "tabs",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Tab[] | undefined",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "updateActiveTab",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "updateValue",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "methodsClass": [
                {
                    "name": "addedTab",
                    "args": [
                        {
                            "name": "tab",
                            "type": "Tab",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 110,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "tab",
                            "type": "Tab",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getLocalization",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getLocalizationPathes",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getLocalizationValue",
                    "args": [
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "loc",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "getLocalization()"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 89,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "loc",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "getLocalization()",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleValueUpdate",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setActiveTab",
                    "args": [
                        {
                            "name": "v",
                            "type": "Tab",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "v",
                            "type": "Tab",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setCssClassPrefix",
                    "args": [
                        {
                            "name": "v",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "v",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabled",
                    "args": [
                        {
                            "name": "v",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "v",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setHideTabs",
                    "args": [
                        {
                            "name": "v",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "v",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setLocalization",
                    "args": [
                        {
                            "name": "v",
                            "type": "CronLocalization",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "v",
                            "type": "CronLocalization",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setTabs",
                    "args": [
                        {
                            "name": "v",
                            "type": "Tab[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "v",
                            "type": "Tab[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setValue",
                    "args": [
                        {
                            "name": "v",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "v",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleTab",
                    "args": [
                        {
                            "name": "tab",
                            "type": "Tab",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 114,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "tab",
                            "type": "Tab",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateLocalizationField",
                    "args": [
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output, Input, ContentChild, TemplateRef, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\n\nimport { Tab, CronLocalization } from '@sbzen/ng-cron';\n\nimport { getLocalizationPathes, getLocalization } from './../localization';\n\n@Component({\n\tselector: 'container',\n\ttemplateUrl: './container.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContainerComponent {\n\t@ContentChild('content') content!: TemplateRef<HTMLDivElement>;\n\t@Output() ticked = new EventEmitter<void>();\n\t@Input() type = '';\n\t@Input() value = '';\n\t@Input() initialTabs = [Tab.SECONDS, Tab.MINUTES, Tab.HOURS, Tab.DAY, Tab.MONTH, Tab.YEAR];\n\n\tdisabled? = false;\n\thideTabs? = false;\n\tcssClassPrefix? = '';\n\tactiveTab: Tab|undefined = undefined;\n\ttabs: Tab[]|undefined = undefined;\n\tlocalization: CronLocalization|undefined = undefined;\n\n\tconstructor(private readonly cd: ChangeDetectorRef) {}\n\n\tupdateValue = (v: string) => this.setValue(v);\n\tupdateActiveTab = (v: Tab) => this.setActiveTab(v);\n\n  handleValueUpdate(e: Event) {\n    const el = e.target as HTMLInputElement;\n    const value = el.value;\n    this.setValue(value);\n  }\n\n\tsetValue(v: string) {\n\t\tthis.value = v;\n\n\t\tthis.cd.detectChanges();\n\t\tthis.ticked.emit();\n\t}\n\n\tsetDisabled(v?: boolean) {\n\t\tthis.disabled = v;\n\n\t\tthis.ticked.emit();\n\t\tthis.cd.detectChanges();\n\t}\n\n\tsetHideTabs(v?: boolean) {\n\t\tthis.hideTabs = v;\n\n\t\tthis.cd.detectChanges();\n\t}\n\n\tsetCssClassPrefix(v?: string) {\n\t\tthis.cssClassPrefix = v;\n\n\t\tthis.cd.detectChanges();\n\t}\n\n\tsetActiveTab(v?: Tab) {\n\t\tthis.activeTab = v;\n\n\t\tthis.cd.detectChanges();\n\t}\n\n\tsetLocalization(v?: CronLocalization) {\n\t\tthis.localization = v;\n\n\t\tthis.cd.detectChanges();\n\t}\n\n\tsetTabs(v?: Tab[]) {\n\t\tthis.tabs = v;\n\n\t\tthis.cd.detectChanges();\n\t}\n\n\tgetLocalization() {\n\t\treturn getLocalization();\n\t}\n\n\tgetLocalizationPathes() {\n\t\treturn getLocalizationPathes();\n\t}\n\n\tgetLocalizationValue(path: string, loc = getLocalization()) {\n\t\tconst paths = path.split('.');\n\t\tconst lastProp = paths[paths.length - 1];\n    // @ts-ignore\n\t\tconst store = paths.slice(0, paths.length - 1).reduce((acc, prop) => acc[prop], loc);\n    // @ts-ignore\n\t\treturn store[lastProp];\n\t}\n\n\tupdateLocalizationField(path: string, e: Event) {\n    const el = e.target as HTMLInputElement;\n    const localizationValue = el.value;\n\t\tconst paths = path.split('.');\n\t\tconst lastProp = paths[paths.length - 1];\n    // @ts-ignore\n\t\tconst store = paths.slice(0, paths.length - 1).reduce((acc, prop) => acc[prop], this.localization);\n    // @ts-ignore\n\t\tstore[lastProp] = localizationValue;\n\t\tthis.setLocalization({ ...this.localization });\n\t}\n\n\taddedTab(tab: Tab) {\n\t\treturn (this.tabs || []).includes(tab);\n\t}\n\n\ttoggleTab(tab: Tab) {\n\t\tconst tabsToUse = this.tabs || [];\n\t\tif (this.addedTab(tab)) {\n\t\t\tthis.setTabs(tabsToUse.filter(t => t !== tab));\n\t\t\treturn;\n\t\t}\n\t\tthis.setTabs([\n\t\t\t...tabsToUse,\n\t\t\ttab\n\t\t]);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div\n\tclass=\"re-cron-test\"\n\t[attr.data-cron-type]=\"type\">\n\n\t<h1>{{type}}</h1>\n\n\t<input\n\t\tdata-cron=\"value\"\n\t\t[value]=\"value\"\n\t\t(change)=\"handleValueUpdate($event)\">\n\n\t<button\n\t\tdata-cron-action=\"localization-reset\"\n\t\tclass=\"ml-1\"\n\t\ttype=\"button\"\n\t\t(click)=\"setLocalization(undefined)\">\n\t\tReset Localization\n\t</button>\n\t<button\n\t\tdata-cron-action=\"localization-use\"\n\t\tclass=\"ml-1\"\n\t\ttype=\"button\"\n\t\t(click)=\"setLocalization(localization || getLocalization())\">\n\t\tUse Localization\n\t</button>\n\t<button\n\t\tdata-cron-action=\"disable\"\n\t\tclass=\"ml-1\"\n\t\ttype=\"button\"\n\t\t(click)=\"setDisabled(!disabled)\">\n\t\tDisable\n\t</button>\n\t<button\n\t\tdata-cron-action=\"hide-tabs\"\n\t\tclass=\"ml-1\"\n\t\ttype=\"button\"\n\t\t(click)=\"setHideTabs(true)\">\n\t\tHide tabs\n\t</button>\n\t<button\n\t\tdata-cron-action=\"show-tabs\"\n\t\tclass=\"ml-1\"\n\t\ttype=\"button\"\n\t\t(click)=\"setHideTabs(false)\">\n\t\tShow tabs\n\t</button>\n\t<button\n\t\tdata-cron-action=\"add-css-class-prefix\"\n\t\tclass=\"ml-1\"\n\t\ttype=\"button\"\n\t\t(click)=\"setCssClassPrefix('my-')\">\n\t\tAdd \"my-\" css prefix\n\t</button>\n\t<button\n\t\tdata-cron-action=\"remove-css-class-prefix\"\n\t\tclass=\"ml-1\"\n\t\ttype=\"button\"\n\t\t(click)=\"setCssClassPrefix(undefined)\">\n\t\tRemove \"my-\" css prefix\n\t</button>\n\n\t<div class=\"mt-1\">\n\t\t<input\n\t\t\t*ngFor=\"let path of getLocalizationPathes()\"\n\t\t\tdata-cron-action=\"localization-field\"\n\t\t\t[attr.data-cron-action-value]=\"path\"\n\t\t\tclass=\"mr-1 mw-fixed-70\"\n\t\t\t[disabled]=\"!localization\"\n\t\t\t[placeholder]=\"path\"\n\t\t\t[value]=\"getLocalizationValue(path, localization)\"\n\t\t\t(change)=\"updateLocalizationField(path, $event)\"/>\n\t</div>\n\n\t<div class=\"mt-1\">\n\t\t<button\n\t\t\tclass=\"mr-1\"\n\t\t\tdata-cron-action=\"reset-tab\"\n\t\t\ttype=\"button\"\n\t\t\t(click)=\"setTabs(undefined)\">\n\t\t\tReset Tabs\n\t\t</button>\n\t\t<button\n\t\t\tclass=\"mr-1\"\n\t\t\ttype=\"button\"\n\t\t\tdata-cron-action=\"hide-tab\"\n\t\t\t(click)=\"setTabs([])\">\n\t\t\tRemove Tabs\n\t\t</button>\n\n\t\t<button\n\t\t\t*ngFor=\"let tab of initialTabs\"\n\t\t\tclass=\"mr-1\"\n\t\t\tdata-cron-action=\"toggle-tab\"\n\t\t\t[attr.data-cron-action-value]=\"tab\"\n\t\t\t(click)=\"toggleTab(tab)\">\n\t\t\t{{tab}}\n\t\t\t{{addedTab(tab) ? '-' : '+'}}\n\t\t</button>\n\t</div>\n\n\t<div class=\"mt-1\">\n\t\t<button\n\t\t\t*ngFor=\"let tab of initialTabs\"\n\t\t\tclass=\"mr-1\"\n\t\t\tdata-cron-action=\"change-tab\"\n\t\t\t[attr.data-cron-action-value]=\"tab\"\n\t\t\t(click)=\"setActiveTab(tab)\">\n\t\t\t{{tab}}\n\t\t</button>\n\t</div>\n\n\t<div [attr.data-cron-active-tab]=\"activeTab\">\n\t\t{{activeTab}}\n\t</div>\n\n\t<ng-container\n\t\t*ngTemplateOutlet=\"content; context: {\n\t\t\tvalue: value,\n\t\t\tcssClassPrefix: cssClassPrefix,\n\t\t\tlocalization: localization,\n\t\t\tactiveTab: activeTab,\n\t\t\ttabs: tabs,\n\t\t\thideTabs: hideTabs,\n\t\t\tdisabled: disabled\n\t\t}\">\n\t</ng-container>\n</div>\n"
        },
        {
            "name": "CronAndComponent",
            "id": "component-CronAndComponent-61e00443f440ca5e1604327d4488acd7b00327aa176a0a3bb8d74cff262e009d4b60436c46b883810c620fc45fb7ba0f069c8c5e0862166190a05a62cda68aa2",
            "file": "projects/ng-cron/src/lib/shared/and/and.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cron-and",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./and.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "cssClassPrefix",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disabledControls",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "gridSize",
                    "defaultValue": "['col-2', 'col-md-1']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "{}",
                    "decorators": []
                },
                {
                    "name": "isValueSelected",
                    "defaultValue": "() => false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "function",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "options",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "literal type[]",
                    "decorators": []
                },
                {
                    "name": "segmentId",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "selectValue",
                    "defaultValue": "() => false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "function",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "selected",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "mode",
                    "defaultValue": "Mode.AND",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        144
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "changeValue",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "detectChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getGridSizes",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { Mode } from '@sbzen/cron-core';\n\n@Component({\n  selector: 'cron-and',\n  templateUrl: './and.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CronAndComponent {\n  @Output() readonly selected = new EventEmitter<void>();\n  @Input() cssClassPrefix = '';\n  @Input() checked = false;\n  @Input() disabled = false;\n  @Input() disabledControls = false;\n  @Input() gridSize = ['col-2', 'col-md-1'];\n  @Input() label = '';\n  @Input() segmentId = '';\n  @Input() options: {\n    label: string|number,\n    value: string\n  }[] = [];\n  @Input() isValueSelected: (value: string) => boolean = () => false;\n  @Input() selectValue: (value: string) => boolean = () => false;\n  readonly mode = Mode.AND;\n\n  constructor(private readonly cd: ChangeDetectorRef) {}\n\n  getGridSizes() {\n    return this.gridSize\n      .map(s => `${this.cssClassPrefix || ''}${s}`)\n      .join(' ');\n  }\n\n  changeValue(e: Event, value: string) {\n    const status = this.selectValue(value);\n    if (!status) {\n      e.preventDefault();\n    }\n  }\n\n  detectChanges() {\n    this.cd.detectChanges();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"{{cssClassPrefix}}form-group c-and c-segment\">\n  <div class=\"{{cssClassPrefix}}form-check c-and-check\">\n    <input\n      class=\"{{cssClassPrefix}}form-check-input c-and-option\"\n      type=\"radio\"\n      [attr.id]=\"segmentId\"\n      [value]=\"mode\"\n      [checked]=\"checked\"\n      [disabled]=\"disabled\"\n      (change)=\"selected.emit()\">\n\n    <label\n      class=\"{{cssClassPrefix}}form-check-label c-and-option-label\"\n      [attr.for]=\"segmentId\">\n      {{label}}\n    </label>\n  </div>\n\n  <div class=\"{{cssClassPrefix}}row {{cssClassPrefix}}pl-3 {{cssClassPrefix}}pt-1 c-and-list\">\n    <div\n      *ngFor=\"let item of options\"\n      class=\"{{getGridSizes()}} c-and-item\"\n      [attr.item-value]=\"item.value\">\n\n      <div class=\"{{cssClassPrefix}}form-check c-and-item-check\">\n        <input\n          class=\"{{cssClassPrefix}}form-check-input c-and-item-field\"\n          type=\"checkbox\"\n          [attr.id]=\"segmentId + '_' + item.value\"\n          [value]=\"item.value\"\n          [disabled]=\"disabledControls\"\n          [checked]=\"isValueSelected(item.value)\"\n          (click)=\"changeValue($event, item.value)\">\n\n        <label\n          class=\"{{cssClassPrefix}}form-check-label c-and-item-label\"\n          [attr.for]=\"segmentId + '_' + item.value\">\n          {{item.label}}\n        </label>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "CronContainerComponent",
            "id": "component-CronContainerComponent-52cdd6485f64caf862ccc2f1a208580f684d3dfd0539cb6754ef32aa79b6e4c1d103eee67479bdcb736ead67395594edde06b5e3d323f36bc0aee3932cf85057",
            "file": "projects/ng-cron/src/lib/container/container.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cron-container",
            "styleUrls": [
                "./container.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./container.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "activeTab",
                    "defaultValue": "Type.MINUTES",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "cssClassPrefix",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "hideTabs",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "hostClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "localization",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "Required<CronLocalization>",
                    "decorators": []
                },
                {
                    "name": "tabs",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "Type[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "tabChanged",
                    "defaultValue": "new EventEmitter<Type>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<HTMLDivElement>",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'content'"
                        }
                    ]
                },
                {
                    "name": "tabEls",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ElementRef> | null",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChildren",
                            "stringifiedArguments": "'tabEl', {read: ElementRef}"
                        }
                    ]
                },
                {
                    "name": "tabsLocalizationKeys",
                    "defaultValue": "{\n    [Type.DAY]: 'day',\n    [Type.HOURS]: 'hours',\n    [Type.MINUTES]: 'minutes',\n    [Type.MONTH]: 'month',\n    [Type.SECONDS]: 'seconds',\n    [Type.YEAR]: 'year'\n  } as const",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        144
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "navigateTab",
                    "args": [
                        {
                            "name": "code",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "tab",
                            "type": "Type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "code",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "tab",
                            "type": "Type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setTab",
                    "args": [
                        {
                            "name": "tab",
                            "type": "Type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "tab",
                            "type": "Type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ContentChild, TemplateRef, ChangeDetectionStrategy, Input, ChangeDetectorRef, Output, EventEmitter, ViewChildren, ElementRef, QueryList } from '@angular/core';\nimport { Type } from '@sbzen/cron-core';\n\nimport { CronLocalization } from './../cron-localization';\n\n@Component({\n  selector: 'cron-container',\n  templateUrl: './container.html',\n  styleUrls: ['./container.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CronContainerComponent {\n  @ContentChild('content') content!: TemplateRef<HTMLDivElement>;\n  @ViewChildren('tabEl', { read: ElementRef }) tabEls: QueryList<ElementRef>|null = null;\n  @Output() readonly tabChanged = new EventEmitter<Type>();\n  @Input() localization!: Required<CronLocalization>;\n  @Input() cssClassPrefix = '';\n  @Input() hostClass = '';\n  @Input() activeTab = Type.MINUTES;\n  @Input() tabs: Type[] = [];\n  @Input() hideTabs = false;\n\n  readonly tabsLocalizationKeys = {\n    [Type.DAY]: 'day',\n    [Type.HOURS]: 'hours',\n    [Type.MINUTES]: 'minutes',\n    [Type.MONTH]: 'month',\n    [Type.SECONDS]: 'seconds',\n    [Type.YEAR]: 'year'\n  } as const;\n\n  constructor(private readonly cd: ChangeDetectorRef) {}\n\n  navigateTab(code: string, tab: Type) {\n    if (!this.tabEls || code !== 'ArrowRight' && code !== 'ArrowLeft') {\n      return;\n    }\n    const tabEls = this.tabEls.toArray().map(er => er.nativeElement);\n    const tabs = this.tabs;\n    const pos = tabs.indexOf(tab);\n    let toPos = 0;\n\n    if (code === 'ArrowRight') {\n      const nextPos = pos + 1;\n      toPos = (nextPos === tabs.length) ? 0 : nextPos;\n    }\n    if (code === 'ArrowLeft') {\n      const prevPos = pos - 1;\n      toPos = (prevPos < 0) ? tabs.length - 1 : prevPos;\n    }\n\n    this.setTab(tabs[toPos]);\n    const tabEl = tabEls[toPos];\n    if (tabEl) {\n      tabEl.focus();\n      this.cd.detectChanges();\n    }\n  }\n\n  setTab(tab: Type) {\n    this.activeTab = tab;\n    this.cd.detectChanges();\n    this.tabChanged.emit(tab);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".c-tab-content {\n  outline: none;\n}\n",
                    "styleUrl": "./container.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 30,
                "jsdoctags": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"c-host {{hostClass}}\">\n  <ul\n    *ngIf=\"!hideTabs && tabs.length\"\n    class=\"{{cssClassPrefix}}nav {{cssClassPrefix}}nav-tabs {{cssClassPrefix}}mb-2 c-tabs\"\n    role=\"tablist\"\n    aria-label=\"Cron Generator Tabs\">\n\n    <button\n      *ngFor=\"let item of tabs\"\n      role=\"tab\"\n      #tabEl\n      type=\"button\"\n      class=\"{{cssClassPrefix}}nav-link {{item}} c-tab\"\n      [class.active]=\"activeTab === item\"\n      [attr.aria-selected]=\"activeTab === item\"\n      [attr.tabindex]=\"activeTab === item ? 0 : -1\"\n      (click)=\"setTab(item)\"\n      (keyup)=\"navigateTab($event.code, activeTab)\">\n\n      {{localization.tabs[tabsLocalizationKeys[item]]}}\n    </button>\n  </ul>\n\n  <div\n    class=\"c-tab-content\"\n    role=\"tabpanel\"\n    tabindex=\"0\"\n    [attr.tab-name]=\"activeTab\">\n\n    <ng-container *ngTemplateOutlet=\"content; context: { $implicit: activeTab }\"></ng-container>\n  </div>\n</div>\n"
        },
        {
            "name": "CronEveryComponent",
            "id": "component-CronEveryComponent-5d39e7455ae32d34f0366ea7b2d44c8d251a27265ca542ee56d1a7ae33c05c13f4c3e16efabca8906f72b3c946a95d6c7bfab5458c86c84b36fcebcb968ce197",
            "file": "projects/ng-cron/src/lib/shared/every/every.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cron-every",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./every.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "cssClassPrefix",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "segmentId",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "selected",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "mode",
                    "defaultValue": "Mode.EVERY",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        144
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\nimport { Mode } from '@sbzen/cron-core';\n\n@Component({\n  selector: 'cron-every',\n  templateUrl: './every.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CronEveryComponent {\n  @Output() readonly selected = new EventEmitter<void>();\n  @Input() cssClassPrefix = '';\n  @Input() checked = false;\n  @Input() disabled = false;\n  @Input() label = '';\n  @Input() segmentId = '';\n  readonly mode = Mode.EVERY;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"{{cssClassPrefix}}form-group c-every c-segment\">\n  <div class=\"{{cssClassPrefix}}form-check c-every-check\">\n    <input\n      class=\"{{cssClassPrefix}}form-check-input c-every-option\"\n      type=\"radio\"\n      [attr.id]=\"segmentId\"\n      [value]=\"mode\"\n      [checked]=\"checked\"\n      [disabled]=\"disabled\"\n      (change)=\"selected.emit()\">\n\n    <label\n      class=\"{{cssClassPrefix}}form-check-label c-every-option-label\"\n      [attr.for]=\"segmentId\">\n      {{label}}\n    </label>\n  </div>\n</div>\n"
        },
        {
            "name": "CronRangeComponent",
            "id": "component-CronRangeComponent-df2ae047bcb6a803afaee6ee7759620149bdd08f096879b9a64422ab66436815e1fc54bafef79c389a18a30df26c3c9fdf8491f3c8d7578110f26b54cc99acec",
            "file": "projects/ng-cron/src/lib/shared/range/range.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cron-range",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./range.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "cssClassPrefix",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disabledControls",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label2",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primaryOptions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "literal type[]",
                    "decorators": []
                },
                {
                    "name": "primaryValue",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "secondaryOptions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "literal type[]",
                    "decorators": []
                },
                {
                    "name": "secondaryValue",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "segmentId",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "primaryValueChanged",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "EventEmitter"
                },
                {
                    "name": "secondaryValueChanged",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "EventEmitter"
                },
                {
                    "name": "selected",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "mode",
                    "defaultValue": "Mode.RANGE",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        144
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "setPrimaryValue",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setSecondaryValue",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\nimport { Mode } from '@sbzen/cron-core';\n\n@Component({\n  selector: 'cron-range',\n  templateUrl: './range.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CronRangeComponent {\n  @Output() readonly selected = new EventEmitter<void>();\n  @Output() readonly primaryValueChanged = new EventEmitter<string>();\n  @Output() readonly secondaryValueChanged = new EventEmitter<string>();\n  @Input() cssClassPrefix = '';\n  @Input() segmentId = '';\n  @Input() checked = false;\n  @Input() disabled = false;\n  @Input() disabledControls = false;\n  @Input() label = '';\n  @Input() label2 = '';\n  @Input() primaryValue = '';\n  @Input() primaryOptions: {\n    label: string|number,\n    value: string\n  }[] = [];\n  @Input() secondaryValue = '';\n  @Input() secondaryOptions: {\n    label: string|number,\n    value: string\n  }[] = [];\n  readonly mode = Mode.RANGE;\n\n  setPrimaryValue(e: Event) {\n    const el = e.target as HTMLSelectElement;\n    this.primaryValueChanged.emit(el.value);\n  }\n\n  setSecondaryValue(e: Event) {\n    const el = e.target as HTMLSelectElement;\n    this.secondaryValueChanged.emit(el.value);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"{{cssClassPrefix}}form-group {{cssClassPrefix}}form-inline c-range c-segment\">\n  <div class=\"{{cssClassPrefix}}form-check c-range-check\">\n    <input\n      class=\"{{cssClassPrefix}}form-check-input c-range-option\"\n      type=\"radio\"\n      [attr.id]=\"segmentId\"\n      [value]=\"mode\"\n      [checked]=\"checked\"\n      [disabled]=\"disabled\"\n      (change)=\"selected.emit()\">\n\n    <label\n      class=\"{{cssClassPrefix}}form-check-label c-range-option-label\"\n      [attr.for]=\"segmentId\">\n      {{label}}\n    </label>\n  </div>\n\n  <select\n    class=\"{{cssClassPrefix}}form-control {{cssClassPrefix}}form-control-sm {{cssClassPrefix}}mx-1 c-range-from\"\n    [disabled]=\"disabledControls\"\n    (change)=\"setPrimaryValue($event)\">\n\n    <option\n      *ngFor=\"let item of primaryOptions\"\n      [value]=\"item.value\"\n      [selected]=\"primaryValue === item.value\">\n      {{item.label}}\n    </option>\n  </select>\n\n  <label\n    class=\"c-range-option-label2\"\n    [attr.for]=\"segmentId\">\n    {{label2}}\n  </label>\n\n  <select\n    class=\"{{cssClassPrefix}}form-control {{cssClassPrefix}}form-control-sm {{cssClassPrefix}}ml-1 c-range-to\"\n    [disabled]=\"disabledControls\"\n    (change)=\"setSecondaryValue($event)\">\n\n    <option\n      *ngFor=\"let item of secondaryOptions\"\n      [value]=\"item.value\"\n      [selected]=\"secondaryValue === item.value\">\n      {{item.label}}\n    </option>\n  </select>\n</div>\n"
        },
        {
            "name": "QuartzCronComponent",
            "id": "component-QuartzCronComponent-b76ce753608eebce88aa74ba2ecdcb9cef72f437c0e40e1bbffbc368b04d7c4278626645c5c4afc2d79bc7b2d22af64031a58e7f666e6c4626329122c514ee4d",
            "file": "stories/quartz-cron.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-quartz-cron",
            "styleUrls": [],
            "styles": [],
            "template": "<input\n  class=\"form-control mb-2\"\n  readonly\n  [value]=\"value\">\n\n<quartz-cron\n  name=\"cron\"\n  [cssClassPrefix]=\"cssClassPrefix\"\n  [activeTab]=\"activeTab\"\n  [tabs]=\"tabs\"\n  [hideTabs]=\"hideTabs\"\n  [localization]=\"localization\"\n  [disabled]=\"disabled\"\n  [(ngModel)]=\"value\"\n  (changed)=\"changed.emit($event)\"\n  (tabChanged)=\"tabChanged.emit($event)\">\n</quartz-cron>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "activeTab",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "Tab",
                    "decorators": []
                },
                {
                    "name": "cssClassPrefix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string | null | boolean",
                    "decorators": []
                },
                {
                    "name": "hideTabs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "localization",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "CronLocalization",
                    "decorators": []
                },
                {
                    "name": "tabs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "Tab[]",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "changed",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "EventEmitter"
                },
                {
                    "name": "tabChanged",
                    "defaultValue": "new EventEmitter<Tab>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Tab, CronLocalization } from './../projects/ng-cron/src/public-api';\n\n@Component({\n  selector: 'storybook-quartz-cron',\n  template: `\n    <input\n      class=\"form-control mb-2\"\n      readonly\n      [value]=\"value\">\n\n    <quartz-cron\n      name=\"cron\"\n      [cssClassPrefix]=\"cssClassPrefix\"\n      [activeTab]=\"activeTab\"\n      [tabs]=\"tabs\"\n      [hideTabs]=\"hideTabs\"\n      [localization]=\"localization\"\n      [disabled]=\"disabled\"\n      [(ngModel)]=\"value\"\n      (changed)=\"changed.emit($event)\"\n      (tabChanged)=\"tabChanged.emit($event)\">\n    </quartz-cron>\n  `,\n})\nexport class QuartzCronComponent {\n  @Output() readonly changed = new EventEmitter<string>();\n  @Output() readonly tabChanged = new EventEmitter<Tab>();\n  @Input() cssClassPrefix?: string;\n  @Input() activeTab?: Tab;\n  @Input() tabs?: Tab[];\n  @Input() hideTabs?: boolean;\n  @Input() localization?: CronLocalization;\n  @Input() value = '';\n  @Input() disabled?: string|null|boolean;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "QuartzCronComponent",
            "id": "component-QuartzCronComponent-184abfb8a7802717b13bdb5a454ac5616aa866569ff770e56f5ff35a02fb75c6ef585197dffd9dbeb12e89ba674e8ac041969b841105857190148a1807ad2a04-1",
            "file": "projects/ng-cron/src/lib/quartz/quartz.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: CronQuartzUIService, useFactory: quartzCronServiceFactory\n}"
                },
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => QuartzCronComponent), multi: true\n}",
                    "type": "component"
                }
            ],
            "selector": "quartz-cron",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./quartz.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "activeTab",
                    "defaultValue": "this.getActiveTab()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "Type",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "cssClassPrefix",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string | null | boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "hideTabs",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "localization",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "CronLocalization",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "tabs",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "Type[] | null",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "changed",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "tabChanged",
                    "defaultValue": "new EventEmitter<Type>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "onChange",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "onTouched",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "type",
                    "defaultValue": "Type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        144
                    ],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "applyChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "getActiveTab",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "getLocalization",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "getTabs",
                    "args": [],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "mergeDeep",
                    "args": [
                        {
                            "name": "objects",
                            "type": "RawObject[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true
                        }
                    ],
                    "optional": false,
                    "returnType": "T",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "objects",
                            "type": "RawObject[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "cronValue",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "cronValue",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "cronValue",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "cronValue",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, forwardRef, ChangeDetectionStrategy } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Type, CronQuartzUIService } from '@sbzen/cron-core';\n\nimport { CronHostComponent } from './../cron-host.abstract';\n\nexport function quartzCronServiceFactory() {\n  return new CronQuartzUIService();\n};\n\n@Component({\n  selector: 'quartz-cron',\n  templateUrl: './quartz.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: CronQuartzUIService,\n      useFactory: quartzCronServiceFactory\n    },\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => QuartzCronComponent),\n      multi: true\n    }\n  ]\n})\nexport class QuartzCronComponent extends CronHostComponent {\n  constructor(cronQuartzUI: CronQuartzUIService) {\n    super(cronQuartzUI, [\n      Type.SECONDS,\n      Type.MINUTES,\n      Type.HOURS,\n      Type.DAY,\n      Type.MONTH,\n      Type.YEAR\n    ]);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cronQuartzUI",
                        "type": "CronQuartzUIService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 27,
                "jsdoctags": [
                    {
                        "name": "cronQuartzUI",
                        "type": "CronQuartzUIService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "CronHostComponent",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "QuartzCronComponent-1",
            "templateData": "<cron-container\n  hostClass=\"c-quartz\"\n  [localization]=\"getLocalization()\"\n  [tabs]=\"getTabs()\"\n  [activeTab]=\"getActiveTab()\"\n  [hideTabs]=\"hideTabs\"\n  [cssClassPrefix]=\"cssClassPrefix\"\n  (tabChanged)=\"tabChanged.emit($event)\">\n\n  <ng-template\n    #content\n    let-activeTab>\n\n    <ng-container [ngSwitch]=\"activeTab\">\n      <quartz-cron-month\n        *ngSwitchCase=\"type.MONTH\"\n        [localization]=\"getLocalization()\"\n        [cssClassPrefix]=\"cssClassPrefix\"\n        (changed)=\"applyChanges()\">\n      </quartz-cron-month>\n\n      <quartz-cron-minute\n        *ngSwitchCase=\"type.MINUTES\"\n        [localization]=\"getLocalization()\"\n        [cssClassPrefix]=\"cssClassPrefix\"\n        (changed)=\"applyChanges()\">\n      </quartz-cron-minute>\n\n      <quartz-cron-hour\n        *ngSwitchCase=\"type.HOURS\"\n        [localization]=\"getLocalization()\"\n        [cssClassPrefix]=\"cssClassPrefix\"\n        (changed)=\"applyChanges()\">\n      </quartz-cron-hour>\n\n      <quartz-cron-second\n        *ngSwitchCase=\"type.SECONDS\"\n        [localization]=\"getLocalization()\"\n        [cssClassPrefix]=\"cssClassPrefix\"\n        (changed)=\"applyChanges()\">\n      </quartz-cron-second>\n\n      <quartz-cron-year\n        *ngSwitchCase=\"type.YEAR\"\n        [localization]=\"getLocalization()\"\n        [cssClassPrefix]=\"cssClassPrefix\"\n        (changed)=\"applyChanges()\">\n      </quartz-cron-year>\n\n      <quartz-cron-day\n        *ngSwitchCase=\"type.DAY\"\n        [localization]=\"getLocalization()\"\n        [cssClassPrefix]=\"cssClassPrefix\"\n        (changed)=\"applyChanges()\">\n      </quartz-cron-day>\n    </ng-container>\n  </ng-template>\n</cron-container>\n"
        },
        {
            "name": "QuartzCronDayComponent",
            "id": "component-QuartzCronDayComponent-c4ce5cb6b9c0fd8f590b86017084ee6443df2d9f110fb415ced7dd6b44eefd8ce9e57985e2e9ddabbec02b8651137439c09a830a5cd8c2160fca32c5e7fc3ac4",
            "file": "projects/ng-cron/src/lib/quartz/tabs/day/day.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "quartz-cron-day",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./day.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "cssClassPrefix",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localization",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "FullCronLocalization",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "changed",
                    "defaultValue": "new EventEmitter<never>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "api",
                    "defaultValue": "this.cronUI.getApi(Type.DAY)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "daysOfMonth",
                    "defaultValue": "getList(Segment.dayOfMonth)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "daysOfMonthEvery",
                    "defaultValue": "getList(Segment.dayOfMonth, true)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "daysOfWeek",
                    "defaultValue": "getList(Segment.dayOfWeek)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "daysOfWeekCodes",
                    "defaultValue": "getDaysOfWeekCodes()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "daysOfWeekEvery",
                    "defaultValue": "getList(Segment.dayOfWeek, true)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "limitedDaysOfMonth",
                    "defaultValue": "this.daysOfMonthEvery.slice(0, 5)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "segment",
                    "defaultValue": "Segment",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "segments",
                    "defaultValue": "[Segment.dayOfMonth, Segment.dayOfWeek]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "cd",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChangeDetectorRef",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        122,
                        126,
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "cronUI",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronUnixUIService | CronQuartzUIService",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        126,
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "mode",
                    "defaultValue": "Mode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "sessionId",
                    "defaultValue": "Date.now().toString()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121,
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "unListener",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "getEventValue",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDayOfMonthDaysBeforeEndMonthValue",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDayOfMonthIncrementPrimary",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDayOfMonthIncrementSecondary",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDayOfMonthNearestWeekDayOfMonthValue",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDayOfWeekIncrementPrimary",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDayOfWeekIncrementSecondary",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDayOfWeekLastNTHDayWeekValue",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDayOfWeekNTHWeekDayOfMonthPrimaryValue",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDayOfWeekNTHWeekDayOfMonthSecondaryValue",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "applyChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "genId",
                    "args": [
                        {
                            "name": "mode",
                            "type": "Mode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "extra",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "mode",
                            "type": "Mode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "extra",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localizeLabel",
                    "args": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localizeList",
                    "args": [
                        {
                            "name": "list",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "list",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { Segment, Type, getDaysOfWeekCodes, getList, CronQuartzUIService } from '@sbzen/cron-core';\n\nimport { CronTabComponent } from './../../../cron-tab.abstract';\n\n@Component({\n  selector: 'quartz-cron-day',\n  templateUrl: './day.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class QuartzCronDayComponent extends CronTabComponent {\n  readonly api = this.cronUI.getApi(Type.DAY);\n  readonly segment = Segment;\n  readonly segments = [Segment.dayOfMonth, Segment.dayOfWeek];\n\n  readonly daysOfWeekEvery = getList(Segment.dayOfWeek, true);\n  readonly daysOfWeek = getList(Segment.dayOfWeek);\n  readonly daysOfWeekCodes = getDaysOfWeekCodes();\n\n  readonly daysOfMonthEvery = getList(Segment.dayOfMonth, true);\n  readonly daysOfMonth = getList(Segment.dayOfMonth);\n  readonly limitedDaysOfMonth = this.daysOfMonthEvery.slice(0, 5);\n\n  constructor(\n    readonly cronUI: CronQuartzUIService,\n    protected readonly cd: ChangeDetectorRef\n  ) {\n    super();\n  }\n\n  setDayOfWeekIncrementPrimary(e: Event) {\n    const value = this.getEventValue(e);\n    this.api.setDayOfWeekIncrementPrimary(value);\n  }\n\n  setDayOfWeekIncrementSecondary(e: Event) {\n    const value = this.getEventValue(e);\n    this.api.setDayOfWeekIncrementSecondary(value);\n  }\n\n  setDayOfMonthIncrementPrimary(e: Event) {\n    const value = this.getEventValue(e);\n    this.api.setDayOfMonthIncrementPrimary(value);\n  }\n\n  setDayOfMonthIncrementSecondary(e: Event) {\n    const value = this.getEventValue(e);\n    this.api.setDayOfMonthIncrementSecondary(value);\n  }\n\n  setDayOfWeekLastNTHDayWeekValue(e: Event) {\n    const value = this.getEventValue(e);\n    this.api.setDayOfWeekLastNTHDayWeekValue(value);\n  }\n\n  setDayOfMonthDaysBeforeEndMonthValue(e: Event) {\n    const value = this.getEventValue(e);\n    this.api.setDayOfMonthDaysBeforeEndMonthValue(value);\n  }\n\n  setDayOfMonthNearestWeekDayOfMonthValue(e: Event) {\n    const value = this.getEventValue(e);\n    this.api.setDayOfMonthNearestWeekDayOfMonthValue(value);\n  }\n\n  setDayOfWeekNTHWeekDayOfMonthPrimaryValue(e: Event) {\n    const value = this.getEventValue(e);\n    this.api.setDayOfWeekNTHWeekDayOfMonthPrimaryValue(value);\n  }\n\n  setDayOfWeekNTHWeekDayOfMonthSecondaryValue(e: Event) {\n    const value = this.getEventValue(e);\n    this.api.setDayOfWeekNTHWeekDayOfMonthSecondaryValue(value);\n  }\n\n  private getEventValue(e: Event) {\n    const el = e.target as HTMLSelectElement;\n    return el.value;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cronUI",
                        "type": "CronQuartzUIService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "cronUI",
                        "type": "CronQuartzUIService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "CronTabComponent",
            "templateData": "<div class=\"{{cssClassPrefix}}form-group c-every-weekday c-segment\">\n  <div class=\"{{cssClassPrefix}}form-check c-every-weekday-check\">\n    <input\n      class=\"{{cssClassPrefix}}form-check-input c-every-weekday-option\"\n      type=\"radio\"\n      [attr.id]=\"genId(mode.EVERY, segment.dayOfWeek)\"\n      [value]=\"mode.EVERY\"\n      [checked]=\"api.isEverySelected()\"\n      [disabled]=\"cronUI.isDisabled()\"\n      (change)=\"api.selectEvery()\">\n\n    <label\n      class=\"{{cssClassPrefix}}form-check-label c-every-weekday-option-label\"\n      [attr.for]=\"genId(mode.EVERY, segment.dayOfWeek)\">\n\n      {{localization.quartz.day.every.label}}\n    </label>\n  </div>\n</div>\n\n<div class=\"{{cssClassPrefix}}form-group {{cssClassPrefix}}form-inline c-increment-weekday c-segment\">\n  <div class=\"{{cssClassPrefix}}form-check c-increment-weekday-check\">\n    <input\n      class=\"{{cssClassPrefix}}form-check-input c-increment-weekday-option\"\n      type=\"radio\"\n      [attr.id]=\"genId(mode.INCREMENT, segment.dayOfWeek)\"\n      [value]=\"mode.INCREMENT\"\n      [checked]=\"api.isDayOfWeekIncrementSelected()\"\n      [disabled]=\"cronUI.isDisabled()\"\n      (change)=\"api.selectDayOfWeekIncrement()\">\n\n    <label\n      class=\"{{cssClassPrefix}}form-check-label c-increment-weekday-option-label\"\n      [attr.for]=\"genId(mode.INCREMENT, segment.dayOfWeek)\">\n\n      {{localization.quartz.day.dayOfWeekIncrement.label1}}\n    </label>\n  </div>\n\n  <select\n    class=\"{{cssClassPrefix}}form-control {{cssClassPrefix}}form-control-sm {{cssClassPrefix}}mx-1 c-increment-weekday-every\"\n    [disabled]=\"api.isDayOfWeekIncrementControlsDisabled()\"\n    (change)=\"setDayOfWeekIncrementPrimary($event)\">\n\n    <option\n      *ngFor=\"let item of daysOfWeekEvery\"\n      [value]=\"item.value\"\n      [selected]=\"api.getDayOfWeekIncrementPrimary() === item.value\">\n      {{item.value}}\n    </option>\n  </select>\n\n  <label\n    class=\"c-increment-weekday-option-label2\"\n    [attr.for]=\"genId(mode.INCREMENT, segment.dayOfWeek)\">\n    {{localization.quartz.day.dayOfWeekIncrement.label2}}\n  </label>\n\n  <select\n    class=\"{{cssClassPrefix}}form-control {{cssClassPrefix}}form-control-sm {{cssClassPrefix}}mx-1 c-increment-weekday-from\"\n    [disabled]=\"api.isDayOfWeekIncrementControlsDisabled()\"\n    (change)=\"setDayOfWeekIncrementSecondary($event)\">\n\n    <option\n      *ngFor=\"let item of daysOfWeek\"\n      [value]=\"item.value\"\n      [selected]=\"api.getDayOfWeekIncrementSecondary() === item.value\">\n\n      {{localizeLabel(item.label, this.localization.common.dayOfWeek)}}\n    </option>\n  </select>\n</div>\n\n<div class=\"{{cssClassPrefix}}form-group {{cssClassPrefix}}form-inline c-increment-monthday c-segment\">\n  <div class=\"{{cssClassPrefix}}form-check c-increment-monthday-check\">\n    <input\n      class=\"{{cssClassPrefix}}form-check-input c-increment-monthday-option\"\n      type=\"radio\"\n      [attr.id]=\"genId(mode.INCREMENT, segment.dayOfMonth)\"\n      [value]=\"mode.INCREMENT\"\n      [checked]=\"api.isDayOfMonthIncrementSelected()\"\n      [disabled]=\"cronUI.isDisabled()\"\n      (change)=\"api.selectDayOfMonthIncrement()\">\n\n    <label\n      class=\"{{cssClassPrefix}}form-check-label c-increment-monthday-option-label\"\n      [attr.for]=\"genId(mode.INCREMENT, segment.dayOfMonth)\">\n\n      {{localization.quartz.day.dayOfMonthIncrement.label1}}\n    </label>\n  </div>\n\n  <select\n    class=\"{{cssClassPrefix}}form-control {{cssClassPrefix}}form-control-sm {{cssClassPrefix}}mx-1 c-increment-monthday-every\"\n    [disabled]=\"api.isDayOfMonthIncrementControlsDisabled()\"\n    (change)=\"setDayOfMonthIncrementPrimary($event)\">\n\n    <option\n      *ngFor=\"let item of daysOfMonth\"\n      [value]=\"item.value\"\n      [selected]=\"api.getDayOfMonthIncrementPrimary() === item.value\">\n      {{item.value}}\n    </option>\n  </select>\n\n  <label\n    class=\"c-increment-monthday-option-label2\"\n    [attr.for]=\"genId(mode.INCREMENT, segment.dayOfMonth)\">\n\n    {{localization.quartz.day.dayOfMonthIncrement.label2}}\n  </label>\n\n  <select\n    class=\"{{cssClassPrefix}}form-control {{cssClassPrefix}}form-control-sm {{cssClassPrefix}}mx-1 c-increment-monthday-from\"\n    [disabled]=\"api.isDayOfMonthIncrementControlsDisabled()\"\n    (change)=\"setDayOfMonthIncrementSecondary($event)\">\n\n    <option\n      *ngFor=\"let item of daysOfMonthEvery\"\n      [value]=\"item.value\"\n      [selected]=\"api.getDayOfMonthIncrementSecondary() === item.value\">\n\n      {{localizeLabel(item.label, localization.common.dayOfMonth)}}\n    </option>\n  </select>\n\n  <label\n    class=\"c-increment-monthday-option-label3\"\n    [attr.for]=\"genId(mode.INCREMENT, segment.dayOfMonth)\">\n\n    {{localization.quartz.day.dayOfMonthIncrement.label3}}\n  </label>\n</div>\n\n<div class=\"{{cssClassPrefix}}form-group c-and-weekday c-segment\">\n  <div class=\"{{cssClassPrefix}}form-check c-and-weekday-check\">\n    <input\n      class=\"{{cssClassPrefix}}form-check-input c-and-weekday-option\"\n      type=\"radio\"\n      [attr.id]=\"genId(mode.AND, segment.dayOfWeek)\"\n      [value]=\"mode.INCREMENT\"\n      [checked]=\"api.isDayOfWeekAndSelected()\"\n      [disabled]=\"cronUI.isDisabled()\"\n      (change)=\"api.selectDayOfWeekAnd()\">\n\n    <label\n      class=\"{{cssClassPrefix}}form-check-label c-and-weekday-option-label\"\n      [attr.for]=\"genId(mode.AND, segment.dayOfWeek)\">\n\n      {{localization.quartz.day.dayOfWeekAnd.label}}\n    </label>\n  </div>\n\n  <div class=\"{{cssClassPrefix}}row {{cssClassPrefix}}pl-3 {{cssClassPrefix}}pt-1 c-and-weekday-list\">\n    <div\n      *ngFor=\"let item of daysOfWeekCodes\"\n      class=\"{{cssClassPrefix}}col-3 {{cssClassPrefix}}col-md-2 c-and-weekday-item\"\n      [attr.item-value]=\"item.value\">\n\n      <div class=\"{{cssClassPrefix}}form-check c-and-weekday-item-check\">\n        <input\n          class=\"{{cssClassPrefix}}form-check-input c-and-weekday-item-field\"\n          type=\"checkbox\"\n          [attr.id]=\"genId(mode.AND, segment.dayOfWeek + item.value)\"\n          [value]=\"item.value\"\n          [disabled]=\"api.isDayOfWeekAndControlsDisabled()\"\n          [checked]=\"api.isSelectedDayOfWeekAndValue(item.value)\"\n          (click)=\"api.selectDayOfWeekAndValue(item.value)\">\n\n        <label\n          class=\"{{cssClassPrefix}}form-check-label c-and-weekday-item-label\"\n          [attr.for]=\"genId(mode.AND, segment.dayOfWeek + item.value)\">\n          {{localizeLabel(item.label, localization.common.dayOfWeek)}}\n        </label>\n      </div>\n    </div>\n  </div>\n</div>\n\n<cron-range\n  [label]=\"localization.quartz.day.dayOfWeekRange.label1\"\n  [label2]=\"localization.quartz.day.dayOfWeekRange.label2\"\n  [cssClassPrefix]=\"cssClassPrefix\"\n  [checked]=\"api.isDayOfWeekRangeSelected()\"\n  [disabled]=\"cronUI.isDisabled()\"\n  [segmentId]=\"genId(mode.RANGE)\"\n  [disabledControls]=\"api.isDayOfWeekRangeControlsDisabled()\"\n  [primaryOptions]=\"daysOfWeekCodes\"\n  [secondaryOptions]=\"daysOfWeekCodes\"\n  [primaryValue]=\"api.getDayOfWeekRangePrimary()\"\n  [secondaryValue]=\"api.getDayOfWeekRangeSecondary()\"\n  (selected)=\"api.selectDayOfWeekRange()\"\n  (primaryValueChanged)=\"api.setDayOfWeekRangePrimary($event)\"\n  (secondaryValueChanged)=\"api.setDayOfWeekRangeSecondary($event)\">\n</cron-range>\n\n<div class=\"{{cssClassPrefix}}form-group c-and-monthday c-segment\">\n  <div class=\"{{cssClassPrefix}}form-check c-and-monthday-check\">\n    <input\n      class=\"{{cssClassPrefix}}form-check-input c-and-monthday-option\"\n      type=\"radio\"\n      [attr.id]=\"genId(mode.AND, segment.dayOfMonth)\"\n      [value]=\"mode.INCREMENT\"\n      [checked]=\"api.isDayOfMonthAndSelected()\"\n      [disabled]=\"cronUI.isDisabled()\"\n      (change)=\"api.selectDayOfMonthAnd()\">\n\n    <label\n      class=\"{{cssClassPrefix}}form-check-label c-and-monthday-option-label\"\n      [attr.for]=\"genId(mode.AND, segment.dayOfMonth)\">\n\n      {{localization.quartz.day.dayOfMonthAnd.label}}\n    </label>\n  </div>\n\n  <div class=\"{{cssClassPrefix}}row {{cssClassPrefix}}pl-3 {{cssClassPrefix}}pt-1 c-and-monthday-list\">\n    <div\n      *ngFor=\"let item of daysOfMonth\"\n      class=\"{{cssClassPrefix}}col-2 {{cssClassPrefix}}col-md-1 c-and-monthday-item\"\n      [attr.item-value]=\"item.value\">\n\n      <div class=\"{{cssClassPrefix}}form-check c-and-monthday-item-check\">\n        <input\n          class=\"{{cssClassPrefix}}form-check-input c-and-monthday-item-field\"\n          type=\"checkbox\"\n          [attr.id]=\"genId(mode.AND, segment.dayOfMonth + item.value)\"\n          [value]=\"item.value\"\n          [disabled]=\"api.isDayOfMonthAndControlsDisabled()\"\n          [checked]=\"api.isSelectedDayOfMonthAndValue(item.value)\"\n          (click)=\"api.selectDayOfMonthAndValue(item.value)\">\n\n        <label\n          class=\"{{cssClassPrefix}}form-check-label c-and-monthday-item-label\"\n          [attr.for]=\"genId(mode.AND, segment.dayOfMonth + item.value)\">\n          {{item.label}}\n        </label>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"{{cssClassPrefix}}form-group c-last-monthday c-segment\">\n  <div class=\"{{cssClassPrefix}}form-check c-last-monthday-check\">\n    <input\n      class=\"{{cssClassPrefix}}form-check-input c-last-monthday-option\"\n      type=\"radio\"\n      [attr.id]=\"genId(mode.LAST_DAY, segment.dayOfMonth)\"\n      [value]=\"mode.LAST_DAY\"\n      [checked]=\"api.isDayOfMonthLastDaySelected()\"\n      [disabled]=\"cronUI.isDisabled()\"\n      (change)=\"api.selectDayOfMonthLastDay()\">\n\n    <label\n      class=\"{{cssClassPrefix}}form-check-label c-last-monthday-option-label\"\n      [attr.for]=\"genId(mode.LAST_DAY, segment.dayOfMonth)\">\n\n      {{localization.quartz.day.dayOfMonthLastDay.label}}\n    </label>\n  </div>\n</div>\n\n<div class=\"{{cssClassPrefix}}form-group c-last-weekday c-segment\">\n  <div class=\"{{cssClassPrefix}}form-check c-last-weekday-check\">\n    <input\n      class=\"{{cssClassPrefix}}form-check-input c-last-weekday-option\"\n      type=\"radio\"\n      [attr.id]=\"genId(mode.LAST_DAY_WEEK, segment.dayOfMonth)\"\n      [value]=\"mode.LAST_DAY_WEEK\"\n      [checked]=\"api.isDayOfMonthLastDayWeekSelected()\"\n      [disabled]=\"cronUI.isDisabled()\"\n      (change)=\"api.selectDayOfMonthLastDayWeek()\">\n\n    <label\n      class=\"{{cssClassPrefix}}form-check-label c-last-weekday-option-label\"\n      [attr.for]=\"genId(mode.LAST_DAY_WEEK, segment.dayOfMonth)\">\n\n      {{localization.quartz.day.dayOfMonthLastDayWeek.label}}\n    </label>\n  </div>\n</div>\n\n<div class=\"{{cssClassPrefix}}form-group {{cssClassPrefix}}form-inline c-last-nth c-segment\">\n  <div class=\"{{cssClassPrefix}}form-check c-last-nth-check\">\n    <input\n      class=\"{{cssClassPrefix}}form-check-input c-last-nth-option\"\n      type=\"radio\"\n      [attr.id]=\"genId(mode.LAST_NTH_DAY_WEEK, segment.dayOfWeek)\"\n      [value]=\"mode.LAST_NTH_DAY_WEEK\"\n      [checked]=\"api.isDayOfWeekLastNTHDayWeekSelected()\"\n      [disabled]=\"cronUI.isDisabled()\"\n      (change)=\"api.selectDayOfWeekLastNTHDayWeek()\">\n\n    <label\n      class=\"{{cssClassPrefix}}form-check-label c-last-nth-option-label\"\n      [attr.for]=\"genId(mode.LAST_NTH_DAY_WEEK, segment.dayOfWeek)\">\n\n      {{localization.quartz.day.dayOfWeekLastNTHDayWeek.label1}}\n    </label>\n  </div>\n\n  <select\n    class=\"{{cssClassPrefix}}form-control {{cssClassPrefix}}form-control-sm {{cssClassPrefix}}mx-1 c-last-nth-weekday\"\n    [disabled]=\"api.isDayOfWeekLastNTHDayWeekControlsDisabled()\"\n    (change)=\"setDayOfWeekLastNTHDayWeekValue($event)\">\n\n    <option\n      *ngFor=\"let item of daysOfWeek\"\n      [value]=\"item.value + 'L'\"\n      [selected]=\"api.getDayOfWeekLastNTHDayWeekValue() === item.value\">\n      {{localizeLabel(item.label, localization.common.dayOfWeek)}}\n    </option>\n  </select>\n\n  <label\n    class=\"c-last-nth-option-label2\"\n    [attr.for]=\"genId(mode.LAST_NTH_DAY_WEEK, segment.dayOfWeek)\">\n    {{localization.quartz.day.dayOfWeekLastNTHDayWeek.label2}}\n  </label>\n</div>\n\n<div class=\"{{cssClassPrefix}}form-group {{cssClassPrefix}}form-inline c-day-before-end c-segment\">\n  <div class=\"{{cssClassPrefix}}form-check c-day-before-end-check\">\n    <input\n      class=\"{{cssClassPrefix}}form-check-input c-day-before-end-option\"\n      type=\"radio\"\n      [attr.id]=\"genId(mode.DAYS_BEFORE_END_MONTH, segment.dayOfMonth)\"\n      [value]=\"mode.DAYS_BEFORE_END_MONTH\"\n      [checked]=\"api.isDayOfMonthDaysBeforeEndMonthSelected()\"\n      [disabled]=\"cronUI.isDisabled()\"\n      (change)=\"api.selectDayOfMonthDaysBeforeEndMonth()\">\n  </div>\n\n  <select\n    class=\"{{cssClassPrefix}}form-control {{cssClassPrefix}}form-control-sm {{cssClassPrefix}}mx-1 c-day-before-end-monthday\"\n    [disabled]=\"api.isDayOfMonthDaysBeforeEndMonthControlsDisabled()\"\n    (change)=\"setDayOfMonthDaysBeforeEndMonthValue($event)\">\n\n    <option\n      *ngFor=\"let item of daysOfMonth\"\n      [value]=\"'L-' + item.value\"\n      [selected]=\"api.getDayOfMonthDaysBeforeEndMonthValue() === item.value\">\n      {{item.label}}\n    </option>\n  </select>\n\n  <label\n    class=\"c-day-before-end-option-label\"\n    [attr.for]=\"genId(mode.DAYS_BEFORE_END_MONTH, segment.dayOfMonth)\">\n    {{localization.quartz.day.dayOfMonthDaysBeforeEndMonth.label}}\n  </label>\n</div>\n\n<div class=\"{{cssClassPrefix}}form-group {{cssClassPrefix}}form-inline c-nearest c-segment\">\n  <div class=\"{{cssClassPrefix}}form-check c-nearest-check\">\n    <input\n      class=\"{{cssClassPrefix}}form-check-input c-nearest-option\"\n      type=\"radio\"\n      [attr.id]=\"genId(mode.NEAREST_WEEKDAY_OF_MONTH, segment.dayOfMonth)\"\n      [value]=\"mode.NEAREST_WEEKDAY_OF_MONTH\"\n      [checked]=\"api.isDayOfMonthNearestWeekDayOfMonthSelected()\"\n      [disabled]=\"cronUI.isDisabled()\"\n      (change)=\"api.selectDayOfMonthNearestWeekDayOfMonth()\">\n\n    <label\n      class=\"{{cssClassPrefix}}form-check-label c-nearest-option-label\"\n      [attr.for]=\"genId(mode.NEAREST_WEEKDAY_OF_MONTH, segment.dayOfMonth)\">\n\n      {{localization.quartz.day.dayOfMonthNearestWeekDayOfMonth.label1}}\n    </label>\n  </div>\n\n  <select\n    class=\"{{cssClassPrefix}}form-control {{cssClassPrefix}}form-control-sm {{cssClassPrefix}}mx-1 c-nearest-monthday\"\n    [disabled]=\"api.isDayOfMonthNearestWeekDayOfMonthControlsDisabled()\"\n    (change)=\"setDayOfMonthNearestWeekDayOfMonthValue($event)\">\n\n    <option\n      *ngFor=\"let item of daysOfMonthEvery\"\n      [value]=\"item.value + 'W'\"\n      [selected]=\"api.getDayOfMonthNearestWeekDayOfMonthValue() === item.value\">\n      {{localizeLabel(item.label, localization.common.dayOfMonth)}}\n    </option>\n  </select>\n\n  <label\n    class=\"c-nearest-option-label2\"\n    [attr.for]=\"genId(mode.NEAREST_WEEKDAY_OF_MONTH, segment.dayOfMonth)\">\n    {{localization.quartz.day.dayOfMonthNearestWeekDayOfMonth.label2}}\n  </label>\n</div>\n\n<div class=\"{{cssClassPrefix}}form-group {{cssClassPrefix}}form-inline c-nth c-segment\">\n  <div class=\"{{cssClassPrefix}}form-check c-nth-check\">\n    <input\n      class=\"{{cssClassPrefix}}form-check-input c-nth-option\"\n      type=\"radio\"\n      [attr.id]=\"genId(mode.NTH_WEEKDAY_OF_MONTH, segment.dayOfWeek)\"\n      [value]=\"mode.NTH_WEEKDAY_OF_MONTH\"\n      [checked]=\"api.isDayOfWeekNTHWeekDayOfMonthSelected()\"\n      [disabled]=\"cronUI.isDisabled()\"\n      (change)=\"api.selectDayOfWeekNTHWeekDayOfMonth()\">\n\n    <label\n      class=\"{{cssClassPrefix}}form-check-label c-nth-option-label\"\n      [attr.for]=\"genId(mode.NTH_WEEKDAY_OF_MONTH, segment.dayOfWeek)\">\n\n      {{localization.quartz.day.dayOfWeekNTHWeekDayOfMonth.label1}}\n    </label>\n  </div>\n\n  <select\n    class=\"{{cssClassPrefix}}form-control {{cssClassPrefix}}form-control-sm {{cssClassPrefix}}mx-1 c-nth-every\"\n    [disabled]=\"api.isDayOfWeekNTHWeekDayOfMonthControlsDisabled()\"\n    (change)=\"setDayOfWeekNTHWeekDayOfMonthPrimaryValue($event)\">\n\n    <option\n      *ngFor=\"let item of limitedDaysOfMonth\"\n      [value]=\"item.value\"\n      [selected]=\"api.getDayOfWeekNTHWeekDayOfMonthPrimaryValue() === item.value\">\n      {{localizeLabel(item.label, localization.common.dayOfMonth)}}\n    </option>\n  </select>\n\n  <select\n    class=\"{{cssClassPrefix}}form-control {{cssClassPrefix}}form-control-sm {{cssClassPrefix}}mx-1 c-nth-every-weekday\"\n    [disabled]=\"api.isDayOfWeekNTHWeekDayOfMonthControlsDisabled()\"\n    (change)=\"setDayOfWeekNTHWeekDayOfMonthSecondaryValue($event)\">\n\n    <option\n      *ngFor=\"let item of daysOfWeek\"\n      [value]=\"item.value\"\n      [selected]=\"api.getDayOfWeekNTHWeekDayOfMonthSecondaryValue() === item.value\">\n      {{localizeLabel(item.label, localization.common.dayOfWeek)}}\n    </option>\n  </select>\n\n  <label\n    class=\"c-nth-option-label2\"\n    [attr.for]=\"genId(mode.NTH_WEEKDAY_OF_MONTH, segment.dayOfWeek)\">\n    {{localization.quartz.day.dayOfWeekNTHWeekDayOfMonth.label2}}\n  </label>\n</div>\n"
        },
        {
            "name": "QuartzCronHourComponent",
            "id": "component-QuartzCronHourComponent-763c7ba00562207b9abfbece240dbddb6fa9ac4b4b90db70b6e9cc2b195c6947067b784ebae65361d88244ec1f401b6395835ca49ea46c3b65fb3e0dc81b9a60",
            "file": "projects/ng-cron/src/lib/quartz/tabs/hour/hour.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "quartz-cron-hour",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./hour.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "cssClassPrefix",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localization",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "FullCronLocalization",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "changed",
                    "defaultValue": "new EventEmitter<never>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "api",
                    "defaultValue": "this.cronUI.getApi(Type.HOURS)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "hourCodes",
                    "defaultValue": "getList(Segment.hours, true)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "hours",
                    "defaultValue": "getList(Segment.hours)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "and",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronAndComponent | null",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "CronAndComponent, {static: true}"
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabSingleSegmentComponent"
                    }
                },
                {
                    "name": "segments",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Segment[]",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "cd",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChangeDetectorRef",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        122,
                        126,
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "cronUI",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronUnixUIService | CronQuartzUIService",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        126,
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "mode",
                    "defaultValue": "Mode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "sessionId",
                    "defaultValue": "Date.now().toString()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121,
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "unListener",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "applyChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122,
                        158
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "getSegments",
                    "args": [
                        {
                            "name": "tab",
                            "type": "CronSingleType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "tab",
                            "type": "CronSingleType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabSingleSegmentComponent"
                    }
                },
                {
                    "name": "genId",
                    "args": [
                        {
                            "name": "mode",
                            "type": "Mode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "extra",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "mode",
                            "type": "Mode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "extra",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localizeLabel",
                    "args": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localizeList",
                    "args": [
                        {
                            "name": "list",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "list",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { Segment, Type, getList, CronQuartzUIService } from '@sbzen/cron-core';\n\nimport { CronTabSingleSegmentComponent } from './../../../cron-tab-single-segment.abstract';\n\n@Component({\n  selector: 'quartz-cron-hour',\n  templateUrl: './hour.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class QuartzCronHourComponent extends CronTabSingleSegmentComponent {\n  readonly hourCodes = getList(Segment.hours, true);\n  readonly hours = getList(Segment.hours);\n  readonly api = this.cronUI.getApi(Type.HOURS);\n\n  constructor(\n    readonly cronUI: CronQuartzUIService,\n    protected readonly cd: ChangeDetectorRef\n  ) {\n    super(Type.HOURS);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cronUI",
                        "type": "CronQuartzUIService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "cronUI",
                        "type": "CronQuartzUIService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "CronTabSingleSegmentComponent",
            "templateData": "<cron-every\n  [label]=\"localization.quartz.hour.every.label\"\n  [cssClassPrefix]=\"cssClassPrefix\"\n  [checked]=\"api.isEverySelected()\"\n  [disabled]=\"cronUI.isDisabled()\"\n  [segmentId]=\"genId(mode.EVERY)\"\n  (selected)=\"api.selectEvery()\">\n</cron-every>\n\n<quartz-cron-increment\n  [label]=\"localization.quartz.hour.increment.label1\"\n  [label2]=\"localization.quartz.hour.increment.label2\"\n  [cssClassPrefix]=\"cssClassPrefix\"\n  [checked]=\"api.isIncrementSelected()\"\n  [disabled]=\"cronUI.isDisabled()\"\n  [segmentId]=\"genId(mode.INCREMENT)\"\n  [disabledControls]=\"api.isIncrementControlsDisabled()\"\n  [primaryOptions]=\"hourCodes\"\n  [secondaryOptions]=\"hours\"\n  [primaryValue]=\"api.getIncrementPrimaryValue()\"\n  [secondaryValue]=\"api.getIncrementSecondaryValue()\"\n  (selected)=\"api.selectIncrement()\"\n  (primaryValueChanged)=\"api.setIncrementPrimaryValue($event)\"\n  (secondaryValueChanged)=\"api.setIncrementSecondaryValue($event)\">\n</quartz-cron-increment>\n\n<cron-and\n  [label]=\"localization.quartz.hour.and.label\"\n  [cssClassPrefix]=\"cssClassPrefix\"\n  [checked]=\"api.isAndSelected()\"\n  [disabled]=\"cronUI.isDisabled()\"\n  [segmentId]=\"genId(mode.AND)\"\n  [options]=\"hours\"\n  [disabledControls]=\"api.isAndControlsDisabled()\"\n  [isValueSelected]=\"api.isSelectedAndValue\"\n  [selectValue]=\"api.selectAndValue\"\n  (selected)=\"api.selectAnd()\">\n</cron-and>\n\n<cron-range\n  [label]=\"localization.quartz.hour.range.label1\"\n  [label2]=\"localization.quartz.hour.range.label2\"\n  [cssClassPrefix]=\"cssClassPrefix\"\n  [checked]=\"api.isRangeSelected()\"\n  [disabled]=\"cronUI.isDisabled()\"\n  [segmentId]=\"genId(mode.RANGE)\"\n  [disabledControls]=\"api.isRangeControlsDisabled()\"\n  [primaryOptions]=\"hours\"\n  [secondaryOptions]=\"hours\"\n  [primaryValue]=\"api.getRangePrimaryValue()\"\n  [secondaryValue]=\"api.getRangeSecondaryValue()\"\n  (selected)=\"api.selectRange()\"\n  (primaryValueChanged)=\"api.setRangePrimaryValue($event)\"\n  (secondaryValueChanged)=\"api.setRangeSecondaryValue($event)\">\n</cron-range>\n"
        },
        {
            "name": "QuartzCronIncrementComponent",
            "id": "component-QuartzCronIncrementComponent-a5a04b6788696d9afb78e8340f6dffbaefc260a835cf4c6f6f4504d53f0f0ffaacf610945709dad607e6c3d6a14a5d6f3695d0e7863ad52721d00132588803c4",
            "file": "projects/ng-cron/src/lib/quartz/tabs/shared/increment/increment.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "quartz-cron-increment",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./increment.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "cssClassPrefix",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disabledControls",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label2",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primaryOptions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "literal type[]",
                    "decorators": []
                },
                {
                    "name": "primaryValue",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "secondaryOptions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "literal type[]",
                    "decorators": []
                },
                {
                    "name": "secondaryValue",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "segmentId",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "primaryValueChanged",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "EventEmitter"
                },
                {
                    "name": "secondaryValueChanged",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter"
                },
                {
                    "name": "selected",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "mode",
                    "defaultValue": "Mode.INCREMENT",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        144
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "setPrimaryValue",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setSecondaryValue",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\n\nimport { Mode } from '@sbzen/cron-core';\n\n@Component({\n  selector: 'quartz-cron-increment',\n  templateUrl: './increment.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class QuartzCronIncrementComponent {\n  @Output() readonly selected = new EventEmitter<void>();\n  @Output() readonly primaryValueChanged = new EventEmitter<string>();\n  @Output() readonly secondaryValueChanged = new EventEmitter<string>();\n  @Input() cssClassPrefix = '';\n  @Input() segmentId = '';\n  @Input() checked = false;\n  @Input() disabled = false;\n  @Input() disabledControls = false;\n  @Input() label = '';\n  @Input() label2 = '';\n  @Input() primaryValue = '';\n  @Input() primaryOptions: {\n    label: string|number,\n    value: string\n  }[] = [];\n  @Input() secondaryValue = '';\n  @Input() secondaryOptions: {\n    label: string|number,\n    value: string\n  }[] = [];\n  readonly mode = Mode.INCREMENT;\n\n  setPrimaryValue(e: Event) {\n    const el = e.target as HTMLSelectElement;\n    this.primaryValueChanged.emit(el.value);\n  }\n\n  setSecondaryValue(e: Event) {\n    const el = e.target as HTMLSelectElement;\n    this.secondaryValueChanged.emit(el.value);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"{{cssClassPrefix}}form-group {{cssClassPrefix}}form-inline c-increment c-segment\">\n  <div class=\"{{cssClassPrefix}}form-check c-increment-check\">\n    <input\n      class=\"{{cssClassPrefix}}form-check-input c-increment-option\"\n      type=\"radio\"\n      [attr.id]=\"segmentId\"\n      [value]=\"mode\"\n      [checked]=\"checked\"\n      [disabled]=\"disabled\"\n      (change)=\"selected.emit()\">\n\n    <label\n      class=\"{{cssClassPrefix}}form-check-label c-increment-option-label\"\n      [attr.for]=\"segmentId\">\n      {{label}}\n    </label>\n  </div>\n\n  <select\n    class=\"{{cssClassPrefix}}form-control {{cssClassPrefix}}form-control-sm {{cssClassPrefix}}mx-1 c-increment-every\"\n    [disabled]=\"disabledControls\"\n    (change)=\"setPrimaryValue($event)\">\n\n    <option\n      *ngFor=\"let item of primaryOptions\"\n      [value]=\"item.value\"\n      [selected]=\"primaryValue === item.value\">\n      {{item.value}}\n    </option>\n  </select>\n\n  <label\n    class=\"c-increment-option-label2\"\n    [attr.for]=\"segmentId\">\n    {{label2}}\n  </label>\n\n  <select\n    class=\"{{cssClassPrefix}}form-control {{cssClassPrefix}}form-control-sm {{cssClassPrefix}}ml-1 c-increment-from\"\n    [disabled]=\"disabledControls\"\n    (change)=\"setSecondaryValue($event)\">\n\n    <option\n      *ngFor=\"let item of secondaryOptions\"\n      [value]=\"item.value\"\n      [selected]=\"secondaryValue === item.value\">\n      {{item.label}}\n    </option>\n  </select>\n</div>\n"
        },
        {
            "name": "QuartzCronMinuteComponent",
            "id": "component-QuartzCronMinuteComponent-2e49bb6f2afb25750455fe76503201d1e1a13e33e525b2b20f0afb3d6d2cf1ae5447566521a5ebbb5d3d6c8f5daddf3bf0a655d07996b514bf5fa9eb3c74eb85",
            "file": "projects/ng-cron/src/lib/quartz/tabs/minute/minute.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "quartz-cron-minute",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./minute.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "cssClassPrefix",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localization",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "FullCronLocalization",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "changed",
                    "defaultValue": "new EventEmitter<never>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "api",
                    "defaultValue": "this.cronUI.getApi(Type.MINUTES)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "minuteCodes",
                    "defaultValue": "getList(Segment.minutes, true)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "minutes",
                    "defaultValue": "getList(Segment.minutes)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "and",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronAndComponent | null",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "CronAndComponent, {static: true}"
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabSingleSegmentComponent"
                    }
                },
                {
                    "name": "segments",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Segment[]",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "cd",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChangeDetectorRef",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        122,
                        126,
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "cronUI",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronUnixUIService | CronQuartzUIService",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        126,
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "mode",
                    "defaultValue": "Mode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "sessionId",
                    "defaultValue": "Date.now().toString()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121,
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "unListener",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "applyChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122,
                        158
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "getSegments",
                    "args": [
                        {
                            "name": "tab",
                            "type": "CronSingleType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "tab",
                            "type": "CronSingleType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabSingleSegmentComponent"
                    }
                },
                {
                    "name": "genId",
                    "args": [
                        {
                            "name": "mode",
                            "type": "Mode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "extra",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "mode",
                            "type": "Mode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "extra",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localizeLabel",
                    "args": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localizeList",
                    "args": [
                        {
                            "name": "list",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "list",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { Segment, Type, getList, CronQuartzUIService } from '@sbzen/cron-core';\n\nimport { CronTabSingleSegmentComponent } from './../../../cron-tab-single-segment.abstract';\n\n@Component({\n  selector: 'quartz-cron-minute',\n  templateUrl: './minute.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class QuartzCronMinuteComponent extends CronTabSingleSegmentComponent {\n  readonly minuteCodes = getList(Segment.minutes, true);\n  readonly minutes = getList(Segment.minutes);\n  readonly api = this.cronUI.getApi(Type.MINUTES);\n\n  constructor(\n    readonly cronUI: CronQuartzUIService,\n    protected readonly cd: ChangeDetectorRef\n  ) {\n    super(Type.MINUTES);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cronUI",
                        "type": "CronQuartzUIService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "cronUI",
                        "type": "CronQuartzUIService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "CronTabSingleSegmentComponent",
            "templateData": "<cron-every\n  [label]=\"localization.quartz.minute.every.label\"\n  [cssClassPrefix]=\"cssClassPrefix\"\n  [checked]=\"api.isEverySelected()\"\n  [disabled]=\"cronUI.isDisabled()\"\n  [segmentId]=\"genId(mode.EVERY)\"\n  (selected)=\"api.selectEvery()\">\n</cron-every>\n\n<quartz-cron-increment\n  [label]=\"localization.quartz.minute.increment.label1\"\n  [label2]=\"localization.quartz.minute.increment.label2\"\n  [cssClassPrefix]=\"cssClassPrefix\"\n  [checked]=\"api.isIncrementSelected()\"\n  [disabled]=\"cronUI.isDisabled()\"\n  [segmentId]=\"genId(mode.INCREMENT)\"\n  [disabledControls]=\"api.isIncrementControlsDisabled()\"\n  [primaryOptions]=\"minuteCodes\"\n  [secondaryOptions]=\"minutes\"\n  [primaryValue]=\"api.getIncrementPrimaryValue()\"\n  [secondaryValue]=\"api.getIncrementSecondaryValue()\"\n  (selected)=\"api.selectIncrement()\"\n  (primaryValueChanged)=\"api.setIncrementPrimaryValue($event)\"\n  (secondaryValueChanged)=\"api.setIncrementSecondaryValue($event)\">\n</quartz-cron-increment>\n\n<cron-and\n  [label]=\"localization.quartz.minute.and.label\"\n  [cssClassPrefix]=\"cssClassPrefix\"\n  [checked]=\"api.isAndSelected()\"\n  [disabled]=\"cronUI.isDisabled()\"\n  [segmentId]=\"genId(mode.AND)\"\n  [options]=\"minutes\"\n  [disabledControls]=\"api.isAndControlsDisabled()\"\n  [isValueSelected]=\"api.isSelectedAndValue\"\n  [selectValue]=\"api.selectAndValue\"\n  (selected)=\"api.selectAnd()\">\n</cron-and>\n\n<cron-range\n  [label]=\"localization.quartz.minute.range.label1\"\n  [label2]=\"localization.quartz.minute.range.label2\"\n  [cssClassPrefix]=\"cssClassPrefix\"\n  [checked]=\"api.isRangeSelected()\"\n  [disabled]=\"cronUI.isDisabled()\"\n  [segmentId]=\"genId(mode.RANGE)\"\n  [disabledControls]=\"api.isRangeControlsDisabled()\"\n  [primaryOptions]=\"minutes\"\n  [secondaryOptions]=\"minutes\"\n  [primaryValue]=\"api.getRangePrimaryValue()\"\n  [secondaryValue]=\"api.getRangeSecondaryValue()\"\n  (selected)=\"api.selectRange()\"\n  (primaryValueChanged)=\"api.setRangePrimaryValue($event)\"\n  (secondaryValueChanged)=\"api.setRangeSecondaryValue($event)\">\n</cron-range>\n"
        },
        {
            "name": "QuartzCronMonthComponent",
            "id": "component-QuartzCronMonthComponent-949c85f19445f9b88f6275cdd0a6037c408d152c4e5e7eb3086513a6712e8330ea5d9da2aba2206707ea5dbec007609d42ca9ca6baf018d75f644271fe1f3229",
            "file": "projects/ng-cron/src/lib/quartz/tabs/month/month.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "quartz-cron-month",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./month.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "cssClassPrefix",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localization",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "FullCronLocalization",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "changed",
                    "defaultValue": "new EventEmitter<never>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "api",
                    "defaultValue": "this.cronUI.getApi(Type.MONTH)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "incrementPrimaryOptions",
                    "defaultValue": "this.monthes.map((v, i) => ({\n    ...v,\n    label: i + 1\n  }))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "monthCodes",
                    "defaultValue": "getMonthCodes()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "monthes",
                    "defaultValue": "getList(Segment.month)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "and",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronAndComponent | null",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "CronAndComponent, {static: true}"
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabSingleSegmentComponent"
                    }
                },
                {
                    "name": "segments",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Segment[]",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "cd",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChangeDetectorRef",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        122,
                        126,
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "cronUI",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronUnixUIService | CronQuartzUIService",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        126,
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "mode",
                    "defaultValue": "Mode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "sessionId",
                    "defaultValue": "Date.now().toString()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121,
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "unListener",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "applyChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122,
                        158
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "getSegments",
                    "args": [
                        {
                            "name": "tab",
                            "type": "CronSingleType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "tab",
                            "type": "CronSingleType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabSingleSegmentComponent"
                    }
                },
                {
                    "name": "genId",
                    "args": [
                        {
                            "name": "mode",
                            "type": "Mode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "extra",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "mode",
                            "type": "Mode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "extra",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localizeLabel",
                    "args": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localizeList",
                    "args": [
                        {
                            "name": "list",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "list",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { Segment, Type, getMonthCodes, getList, CronQuartzUIService } from '@sbzen/cron-core';\n\nimport { CronTabSingleSegmentComponent } from './../../../cron-tab-single-segment.abstract';\n\n@Component({\n  selector: 'quartz-cron-month',\n  templateUrl: './month.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class QuartzCronMonthComponent extends CronTabSingleSegmentComponent {\n  readonly monthCodes = getMonthCodes();\n  readonly monthes = getList(Segment.month);\n  readonly incrementPrimaryOptions = this.monthes.map((v, i) => ({\n    ...v,\n    label: i + 1\n  }));\n  readonly api = this.cronUI.getApi(Type.MONTH);\n\n  constructor(\n    readonly cronUI: CronQuartzUIService,\n    protected readonly cd: ChangeDetectorRef\n  ) {\n    super(Type.MONTH);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cronUI",
                        "type": "CronQuartzUIService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "cronUI",
                        "type": "CronQuartzUIService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "CronTabSingleSegmentComponent",
            "templateData": "<cron-every\n  [label]=\"localization.quartz.month.every.label\"\n  [cssClassPrefix]=\"cssClassPrefix\"\n  [checked]=\"api.isEverySelected()\"\n  [disabled]=\"cronUI.isDisabled()\"\n  [segmentId]=\"genId(mode.EVERY)\"\n  (selected)=\"api.selectEvery()\">\n</cron-every>\n\n<quartz-cron-increment\n  [label]=\"localization.quartz.month.increment.label1\"\n  [label2]=\"localization.quartz.month.increment.label2\"\n  [cssClassPrefix]=\"cssClassPrefix\"\n  [checked]=\"api.isIncrementSelected()\"\n  [disabled]=\"cronUI.isDisabled()\"\n  [segmentId]=\"genId(mode.INCREMENT)\"\n  [disabledControls]=\"api.isIncrementControlsDisabled()\"\n  [primaryOptions]=\"incrementPrimaryOptions\"\n  [secondaryOptions]=\"localizeList(monthes, localization.common.month)\"\n  [primaryValue]=\"api.getIncrementPrimaryValue()\"\n  [secondaryValue]=\"api.getIncrementSecondaryValue()\"\n  (selected)=\"api.selectIncrement()\"\n  (primaryValueChanged)=\"api.setIncrementPrimaryValue($event)\"\n  (secondaryValueChanged)=\"api.setIncrementSecondaryValue($event)\">\n</quartz-cron-increment>\n\n<cron-and\n  [gridSize]=\"['col-3', 'col-md-2']\"\n  [label]=\"localization.quartz.month.and.label\"\n  [cssClassPrefix]=\"cssClassPrefix\"\n  [checked]=\"api.isAndSelected()\"\n  [disabled]=\"cronUI.isDisabled()\"\n  [segmentId]=\"genId(mode.AND)\"\n  [options]=\"localizeList(monthCodes, localization.common.month)\"\n  [disabledControls]=\"api.isAndControlsDisabled()\"\n  [isValueSelected]=\"api.isSelectedAndValue\"\n  [selectValue]=\"api.selectAndValue\"\n  (selected)=\"api.selectAnd()\">\n</cron-and>\n\n<cron-range\n  [label]=\"localization.quartz.month.range.label1\"\n  [label2]=\"localization.quartz.month.range.label2\"\n  [cssClassPrefix]=\"cssClassPrefix\"\n  [checked]=\"api.isRangeSelected()\"\n  [disabled]=\"cronUI.isDisabled()\"\n  [segmentId]=\"genId(mode.RANGE)\"\n  [disabledControls]=\"api.isRangeControlsDisabled()\"\n  [primaryOptions]=\"localizeList(monthes, localization.common.month)\"\n  [secondaryOptions]=\"localizeList(monthes, localization.common.month)\"\n  [primaryValue]=\"api.getRangePrimaryValue()\"\n  [secondaryValue]=\"api.getRangeSecondaryValue()\"\n  (selected)=\"api.selectRange()\"\n  (primaryValueChanged)=\"api.setRangePrimaryValue($event)\"\n  (secondaryValueChanged)=\"api.setRangeSecondaryValue($event)\">\n</cron-range>\n"
        },
        {
            "name": "QuartzCronSecondComponent",
            "id": "component-QuartzCronSecondComponent-35eb42a4e7cdb6dfed93a144bf18b0d5cfa2a1050458460d6f78de2317a24f8a94aed52c0d804881be40a45b808ebd87f630c27d3bdb295c7c0ae28e5f36dad2",
            "file": "projects/ng-cron/src/lib/quartz/tabs/second/second.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "quartz-cron-second",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./second.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "cssClassPrefix",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localization",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "FullCronLocalization",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "changed",
                    "defaultValue": "new EventEmitter<never>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "api",
                    "defaultValue": "this.cronUI.getApi(Type.SECONDS)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "secondCodes",
                    "defaultValue": "getList(Segment.seconds, true)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "seconds",
                    "defaultValue": "getList(Segment.seconds)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "and",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronAndComponent | null",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "CronAndComponent, {static: true}"
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabSingleSegmentComponent"
                    }
                },
                {
                    "name": "segments",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Segment[]",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "cd",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChangeDetectorRef",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        122,
                        126,
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "cronUI",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronUnixUIService | CronQuartzUIService",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        126,
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "mode",
                    "defaultValue": "Mode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "sessionId",
                    "defaultValue": "Date.now().toString()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121,
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "unListener",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "applyChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122,
                        158
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "getSegments",
                    "args": [
                        {
                            "name": "tab",
                            "type": "CronSingleType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "tab",
                            "type": "CronSingleType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabSingleSegmentComponent"
                    }
                },
                {
                    "name": "genId",
                    "args": [
                        {
                            "name": "mode",
                            "type": "Mode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "extra",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "mode",
                            "type": "Mode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "extra",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localizeLabel",
                    "args": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localizeList",
                    "args": [
                        {
                            "name": "list",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "list",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { Segment, Type, getList, CronQuartzUIService } from '@sbzen/cron-core';\n\nimport { CronTabSingleSegmentComponent } from './../../../cron-tab-single-segment.abstract';\n\n@Component({\n  selector: 'quartz-cron-second',\n  templateUrl: './second.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class QuartzCronSecondComponent extends CronTabSingleSegmentComponent {\n  readonly secondCodes = getList(Segment.seconds, true);\n  readonly seconds = getList(Segment.seconds);\n  readonly api = this.cronUI.getApi(Type.SECONDS);\n\n  constructor(\n    readonly cronUI: CronQuartzUIService,\n    protected readonly cd: ChangeDetectorRef\n  ) {\n    super(Type.SECONDS);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cronUI",
                        "type": "CronQuartzUIService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "cronUI",
                        "type": "CronQuartzUIService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "CronTabSingleSegmentComponent",
            "templateData": "<cron-every\n  [label]=\"localization.quartz.second.every.label\"\n  [cssClassPrefix]=\"cssClassPrefix\"\n  [checked]=\"api.isEverySelected()\"\n  [disabled]=\"cronUI.isDisabled()\"\n  [segmentId]=\"genId(mode.EVERY)\"\n  (selected)=\"api.selectEvery()\">\n</cron-every>\n\n<quartz-cron-increment\n  [label]=\"localization.quartz.second.increment.label1\"\n  [label2]=\"localization.quartz.second.increment.label2\"\n  [cssClassPrefix]=\"cssClassPrefix\"\n  [checked]=\"api.isIncrementSelected()\"\n  [disabled]=\"cronUI.isDisabled()\"\n  [segmentId]=\"genId(mode.INCREMENT)\"\n  [disabledControls]=\"api.isIncrementControlsDisabled()\"\n  [primaryOptions]=\"secondCodes\"\n  [secondaryOptions]=\"seconds\"\n  [primaryValue]=\"api.getIncrementPrimaryValue()\"\n  [secondaryValue]=\"api.getIncrementSecondaryValue()\"\n  (selected)=\"api.selectIncrement()\"\n  (primaryValueChanged)=\"api.setIncrementPrimaryValue($event)\"\n  (secondaryValueChanged)=\"api.setIncrementSecondaryValue($event)\">\n</quartz-cron-increment>\n\n<cron-and\n  [label]=\"localization.quartz.second.and.label\"\n  [cssClassPrefix]=\"cssClassPrefix\"\n  [checked]=\"api.isAndSelected()\"\n  [disabled]=\"cronUI.isDisabled()\"\n  [segmentId]=\"genId(mode.AND)\"\n  [options]=\"seconds\"\n  [disabledControls]=\"api.isAndControlsDisabled()\"\n  [isValueSelected]=\"api.isSelectedAndValue\"\n  [selectValue]=\"api.selectAndValue\"\n  (selected)=\"api.selectAnd()\">\n</cron-and>\n\n<cron-range\n  [label]=\"localization.quartz.second.range.label1\"\n  [label2]=\"localization.quartz.second.range.label2\"\n  [cssClassPrefix]=\"cssClassPrefix\"\n  [checked]=\"api.isRangeSelected()\"\n  [disabled]=\"cronUI.isDisabled()\"\n  [segmentId]=\"genId(mode.RANGE)\"\n  [disabledControls]=\"api.isRangeControlsDisabled()\"\n  [primaryOptions]=\"seconds\"\n  [secondaryOptions]=\"seconds\"\n  [primaryValue]=\"api.getRangePrimaryValue()\"\n  [secondaryValue]=\"api.getRangeSecondaryValue()\"\n  (selected)=\"api.selectRange()\"\n  (primaryValueChanged)=\"api.setRangePrimaryValue($event)\"\n  (secondaryValueChanged)=\"api.setRangeSecondaryValue($event)\">\n</cron-range>\n"
        },
        {
            "name": "QuartzCronYearComponent",
            "id": "component-QuartzCronYearComponent-cad992191370286440834185ea8a7852864a7a3a348541b1fc5faa2f6da40e70923101fd34f541573c94f5969054d35ca2a019b422a50b904350e1fbc4a509af",
            "file": "projects/ng-cron/src/lib/quartz/tabs/year/year.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "quartz-cron-year",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./year.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "cssClassPrefix",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localization",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "FullCronLocalization",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "changed",
                    "defaultValue": "new EventEmitter<never>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "api",
                    "defaultValue": "this.cronUI.getApi(Type.YEAR)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "yearCodes",
                    "defaultValue": "getList(Segment.year, true)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "years",
                    "defaultValue": "getList(Segment.year)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "and",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronAndComponent | null",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "CronAndComponent, {static: true}"
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabSingleSegmentComponent"
                    }
                },
                {
                    "name": "segments",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Segment[]",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "cd",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChangeDetectorRef",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        122,
                        126,
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "cronUI",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronUnixUIService | CronQuartzUIService",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        126,
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "mode",
                    "defaultValue": "Mode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "sessionId",
                    "defaultValue": "Date.now().toString()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121,
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "unListener",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "applyChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122,
                        158
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "getSegments",
                    "args": [
                        {
                            "name": "tab",
                            "type": "CronSingleType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "tab",
                            "type": "CronSingleType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabSingleSegmentComponent"
                    }
                },
                {
                    "name": "genId",
                    "args": [
                        {
                            "name": "mode",
                            "type": "Mode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "extra",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "mode",
                            "type": "Mode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "extra",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localizeLabel",
                    "args": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localizeList",
                    "args": [
                        {
                            "name": "list",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "list",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { Segment, getList, Type, CronQuartzUIService } from '@sbzen/cron-core';\n\nimport { CronTabSingleSegmentComponent } from './../../../cron-tab-single-segment.abstract';\n\n@Component({\n  selector: 'quartz-cron-year',\n  templateUrl: './year.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class QuartzCronYearComponent extends CronTabSingleSegmentComponent {\n  readonly yearCodes = getList(Segment.year, true);\n  readonly years = getList(Segment.year);\n  readonly api = this.cronUI.getApi(Type.YEAR);\n\n  constructor(\n    readonly cronUI: CronQuartzUIService,\n    protected readonly cd: ChangeDetectorRef\n  ) {\n    super(Type.YEAR);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cronUI",
                        "type": "CronQuartzUIService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "cronUI",
                        "type": "CronQuartzUIService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "CronTabSingleSegmentComponent",
            "templateData": "<cron-every\n  [label]=\"localization.quartz.year.every.label\"\n  [cssClassPrefix]=\"cssClassPrefix\"\n  [checked]=\"api.isEverySelected()\"\n  [disabled]=\"cronUI.isDisabled()\"\n  [segmentId]=\"genId(mode.EVERY)\"\n  (selected)=\"api.selectEvery()\">\n</cron-every>\n\n<quartz-cron-increment\n  [label]=\"localization.quartz.year.increment.label1\"\n  [label2]=\"localization.quartz.year.increment.label2\"\n  [cssClassPrefix]=\"cssClassPrefix\"\n  [checked]=\"api.isIncrementSelected()\"\n  [disabled]=\"cronUI.isDisabled()\"\n  [segmentId]=\"genId(mode.INCREMENT)\"\n  [disabledControls]=\"api.isIncrementControlsDisabled()\"\n  [primaryOptions]=\"yearCodes\"\n  [secondaryOptions]=\"years\"\n  [primaryValue]=\"api.getIncrementPrimaryValue()\"\n  [secondaryValue]=\"api.getIncrementSecondaryValue()\"\n  (selected)=\"api.selectIncrement()\"\n  (primaryValueChanged)=\"api.setIncrementPrimaryValue($event)\"\n  (secondaryValueChanged)=\"api.setIncrementSecondaryValue($event)\">\n</quartz-cron-increment>\n\n<cron-and\n  [label]=\"localization.quartz.year.and.label\"\n  [cssClassPrefix]=\"cssClassPrefix\"\n  [checked]=\"api.isAndSelected()\"\n  [disabled]=\"cronUI.isDisabled()\"\n  [segmentId]=\"genId(mode.AND)\"\n  [options]=\"years\"\n  [disabledControls]=\"api.isAndControlsDisabled()\"\n  [isValueSelected]=\"api.isSelectedAndValue\"\n  [selectValue]=\"api.selectAndValue\"\n  (selected)=\"api.selectAnd()\">\n</cron-and>\n\n<cron-range\n  [label]=\"localization.quartz.year.range.label1\"\n  [label2]=\"localization.quartz.year.range.label2\"\n  [cssClassPrefix]=\"cssClassPrefix\"\n  [checked]=\"api.isRangeSelected()\"\n  [disabled]=\"cronUI.isDisabled()\"\n  [segmentId]=\"genId(mode.RANGE)\"\n  [disabledControls]=\"api.isRangeControlsDisabled()\"\n  [primaryOptions]=\"years\"\n  [secondaryOptions]=\"years\"\n  [primaryValue]=\"api.getRangePrimaryValue()\"\n  [secondaryValue]=\"api.getRangeSecondaryValue()\"\n  (selected)=\"api.selectRange()\"\n  (primaryValueChanged)=\"api.setRangePrimaryValue($event)\"\n  (secondaryValueChanged)=\"api.setRangeSecondaryValue($event)\">\n</cron-range>\n"
        },
        {
            "name": "TestComponent",
            "id": "component-TestComponent-3392a0e494fa046d8a1bf5b999103e9e6f71296f47dec790f7f5350b7832c54bb8c5eb85aad22ed71828445222c7204d079353b80b4a97ea4c5bd450b6131a8f",
            "file": "projects/e2e/src/app/test/test.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "test",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./test.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "tab",
                    "defaultValue": "Tab",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        144
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy } from '@angular/core';\n\nimport { Tab } from '@sbzen/ng-cron';\n\n@Component({\n\tselector: 'test',\n\ttemplateUrl: './test.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TestComponent {\n  readonly tab = Tab;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<container\n  type=\"ReCron\"\n  value=\"0,1,2 2/4 6/2 ? 2-7 SUN,MON 2019/1\"\n  #reCronContainer>\n\n  <ng-template\n    #content\n    let-value=\"value\"\n    let-cssClassPrefix=\"cssClassPrefix\"\n    let-localization=\"localization\"\n    let-activeTab=\"activeTab\"\n    let-tabs=\"tabs\"\n    let-hideTabs=\"hideTabs\"\n    let-disabled=\"disabled\">\n\n    <quartz-cron\n      [cssClassPrefix]=\"cssClassPrefix\"\n      [localization]=\"localization\"\n      [activeTab]=\"activeTab\"\n      [tabs]=\"tabs\"\n      [hideTabs]=\"hideTabs\"\n      [disabled]=\"disabled\"\n      [ngModel]=\"value\"\n      (changed)=\"reCronContainer.updateValue($event)\"\n      (tabChanged)=\"reCronContainer.updateActiveTab($event)\">\n    </quartz-cron>\n  </ng-template>\n</container>\n\n<container\n  type=\"ReQuartzCron\"\n  value=\"0,1,2 2/4 6/2 ? 2-7 SUN,MON 2019/1\"\n  #quartzContainer>\n\n  <ng-template\n    #content\n    let-value=\"value\"\n    let-cssClassPrefix=\"cssClassPrefix\"\n    let-localization=\"localization\"\n    let-activeTab=\"activeTab\"\n    let-tabs=\"tabs\"\n    let-hideTabs=\"hideTabs\"\n    let-disabled=\"disabled\">\n\n    <quartz-cron\n      [cssClassPrefix]=\"cssClassPrefix\"\n      [localization]=\"localization\"\n      [activeTab]=\"activeTab\"\n      [tabs]=\"tabs\"\n      [hideTabs]=\"hideTabs\"\n      [disabled]=\"disabled\"\n      [ngModel]=\"value\"\n      (changed)=\"quartzContainer.updateValue($event)\"\n      (tabChanged)=\"quartzContainer.updateActiveTab($event)\">\n    </quartz-cron>\n  </ng-template>\n</container>\n\n<container\n  type=\"ReUnixCron\"\n  value=\"0 4 8-14 * *\"\n  [initialTabs]=\"[tab.MINUTES, tab.HOURS, tab.DAY, tab.MONTH]\"\n  #unixContainer>\n\n  <ng-template\n    #content\n    let-value=\"value\"\n    let-cssClassPrefix=\"cssClassPrefix\"\n    let-localization=\"localization\"\n    let-activeTab=\"activeTab\"\n    let-tabs=\"tabs\"\n    let-hideTabs=\"hideTabs\"\n    let-disabled=\"disabled\">\n\n    <unix-cron\n      [cssClassPrefix]=\"cssClassPrefix\"\n      [localization]=\"localization\"\n      [activeTab]=\"activeTab\"\n      [tabs]=\"tabs\"\n      [hideTabs]=\"hideTabs\"\n      [disabled]=\"disabled\"\n      [ngModel]=\"value\"\n      (changed)=\"unixContainer.updateValue($event)\"\n      (tabChanged)=\"unixContainer.updateActiveTab($event)\">\n    </unix-cron>\n  </ng-template>\n</container>\n"
        },
        {
            "name": "UnixCronComponent",
            "id": "component-UnixCronComponent-70a40d441b177baa219e96e20cc5fc27cc849ad2355ee0df0c57b490da705c8507e53bcba30236b8a3f8d36279aa648cee8e024a15e0e314accc4a0029639a3f",
            "file": "stories/unix-cron.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-unix-cron",
            "styleUrls": [],
            "styles": [],
            "template": "<input\n  class=\"form-control mb-2\"\n  readonly\n  [value]=\"value\">\n\n<unix-cron\n  name=\"cron\"\n  [cssClassPrefix]=\"cssClassPrefix\"\n  [activeTab]=\"activeTab\"\n  [tabs]=\"tabs\"\n  [hideTabs]=\"hideTabs\"\n  [localization]=\"localization\"\n  [disabled]=\"disabled\"\n  [(ngModel)]=\"value\"\n  (changed)=\"changed.emit($event)\"\n  (tabChanged)=\"tabChanged.emit($event)\">\n</unix-cron>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "activeTab",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "Tab",
                    "decorators": []
                },
                {
                    "name": "cssClassPrefix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string | null | boolean",
                    "decorators": []
                },
                {
                    "name": "hideTabs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "localization",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "CronLocalization",
                    "decorators": []
                },
                {
                    "name": "tabs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "Tab[]",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "changed",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "EventEmitter"
                },
                {
                    "name": "tabChanged",
                    "defaultValue": "new EventEmitter<Tab>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Tab, CronLocalization } from './../projects/ng-cron/src/public-api';\n\n@Component({\n  selector: 'storybook-unix-cron',\n  template: `\n    <input\n      class=\"form-control mb-2\"\n      readonly\n      [value]=\"value\">\n\n    <unix-cron\n      name=\"cron\"\n      [cssClassPrefix]=\"cssClassPrefix\"\n      [activeTab]=\"activeTab\"\n      [tabs]=\"tabs\"\n      [hideTabs]=\"hideTabs\"\n      [localization]=\"localization\"\n      [disabled]=\"disabled\"\n      [(ngModel)]=\"value\"\n      (changed)=\"changed.emit($event)\"\n      (tabChanged)=\"tabChanged.emit($event)\">\n    </unix-cron>\n  `,\n})\nexport class UnixCronComponent {\n  @Output() readonly changed = new EventEmitter<string>();\n  @Output() readonly tabChanged = new EventEmitter<Tab>();\n  @Input() cssClassPrefix?: string;\n  @Input() activeTab?: Tab;\n  @Input() tabs?: Tab[];\n  @Input() hideTabs?: boolean;\n  @Input() localization?: CronLocalization;\n  @Input() value = '';\n  @Input() disabled?: string|null|boolean;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "UnixCronComponent",
            "id": "component-UnixCronComponent-5271c90f2a740c466662b2a6b757aaeb7536fb7312f434656d711b35a337a56f412aed6b7c5aa3b3da411b807bd4417c13081a4349a19eb3b50b516a025a3b88-1",
            "file": "projects/ng-cron/src/lib/unix/unix.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: CronUnixUIService, useFactory: unixCronServiceFactory\n}"
                },
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => UnixCronComponent), multi: true\n}",
                    "type": "component"
                }
            ],
            "selector": "unix-cron",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./unix.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "activeTab",
                    "defaultValue": "this.getActiveTab()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "Type",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "cssClassPrefix",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string | null | boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "hideTabs",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "localization",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "CronLocalization",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "tabs",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "Type[] | null",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "changed",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "tabChanged",
                    "defaultValue": "new EventEmitter<Type>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "onChange",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "onTouched",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "type",
                    "defaultValue": "Type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        144
                    ],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "applyChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "getActiveTab",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "getLocalization",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "getTabs",
                    "args": [],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "mergeDeep",
                    "args": [
                        {
                            "name": "objects",
                            "type": "RawObject[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true
                        }
                    ],
                    "optional": false,
                    "returnType": "T",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "objects",
                            "type": "RawObject[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "cronValue",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "cronValue",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "cronValue",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "cronValue",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, forwardRef, ChangeDetectionStrategy } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Type, CronUnixUIService } from '@sbzen/cron-core';\n\nimport { CronHostComponent } from './../cron-host.abstract';\n\nexport function unixCronServiceFactory() {\n  return new CronUnixUIService()\n};\n\n@Component({\n  selector: 'unix-cron',\n  templateUrl: './unix.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: CronUnixUIService,\n      useFactory: unixCronServiceFactory\n    },\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => UnixCronComponent),\n      multi: true\n    }\n  ]\n})\nexport class UnixCronComponent extends CronHostComponent {\n  constructor(cronUnixUI: CronUnixUIService) {\n    super(cronUnixUI, [Type.MINUTES, Type.HOURS, Type.DAY, Type.MONTH]);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cronUnixUI",
                        "type": "CronUnixUIService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 27,
                "jsdoctags": [
                    {
                        "name": "cronUnixUI",
                        "type": "CronUnixUIService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "CronHostComponent",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "UnixCronComponent-1",
            "templateData": "<cron-container\n  hostClass=\"c-unix\"\n  [localization]=\"getLocalization()\"\n  [tabs]=\"getTabs()\"\n  [activeTab]=\"getActiveTab()\"\n  [hideTabs]=\"hideTabs\"\n  [cssClassPrefix]=\"cssClassPrefix\"\n  (tabChanged)=\"tabChanged.emit($event)\">\n\n  <ng-template\n    #content\n    let-activeTab>\n\n    <ng-container [ngSwitch]=\"activeTab\">\n      <unix-cron-month\n        *ngSwitchCase=\"type.MONTH\"\n        [localization]=\"getLocalization()\"\n        [cssClassPrefix]=\"cssClassPrefix\"\n        (changed)=\"applyChanges()\">\n      </unix-cron-month>\n\n      <unix-cron-minute\n        *ngSwitchCase=\"type.MINUTES\"\n        [localization]=\"getLocalization()\"\n        [cssClassPrefix]=\"cssClassPrefix\"\n        (changed)=\"applyChanges()\">\n      </unix-cron-minute>\n\n      <unix-cron-hour\n        *ngSwitchCase=\"type.HOURS\"\n        [localization]=\"getLocalization()\"\n        [cssClassPrefix]=\"cssClassPrefix\"\n        (changed)=\"applyChanges()\">\n      </unix-cron-hour>\n\n      <unix-cron-day\n        *ngSwitchCase=\"type.DAY\"\n        [localization]=\"getLocalization()\"\n        [cssClassPrefix]=\"cssClassPrefix\"\n        (changed)=\"applyChanges()\">\n      </unix-cron-day>\n    </ng-container>\n  </ng-template>\n</cron-container>\n"
        },
        {
            "name": "UnixCronDayComponent",
            "id": "component-UnixCronDayComponent-19baf281f71556033cdd3f9ae0de1b86a4126585b101a6f32924670f3f4bbbdb243f090411fed5299b36f2cdf62784c5073fee84eceff72bf4ceaeb80e7039e1",
            "file": "projects/ng-cron/src/lib/unix/tabs/day/day.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "unix-cron-day",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./day.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "cssClassPrefix",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localization",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "FullCronLocalization",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "changed",
                    "defaultValue": "new EventEmitter<never>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "api",
                    "defaultValue": "this.cronUI.getApi<Type.DAY>(Type.DAY)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "daysOfMonth",
                    "defaultValue": "getList(Segment.dayOfMonth)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "daysOfMonthEvery",
                    "defaultValue": "getList(Segment.dayOfMonth, true)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "daysOfWeek",
                    "defaultValue": "getList(Segment.dayOfWeek)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "daysOfWeekCodes",
                    "defaultValue": "getDaysOfWeekCodes()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "daysOfWeekEvery",
                    "defaultValue": "getList(Segment.dayOfWeek, true)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "segment",
                    "defaultValue": "Segment",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "segments",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Segment[]",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        122,
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "cd",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChangeDetectorRef",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        122,
                        126,
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "cronUI",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronUnixUIService | CronQuartzUIService",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        126,
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "mode",
                    "defaultValue": "Mode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "sessionId",
                    "defaultValue": "Date.now().toString()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121,
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "unListener",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "getEventValue",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDayOfMonthIncrementPrimary",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDayOfMonthIncrementSecondary",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDayOfWeekIncrementPrimary",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDayOfWeekIncrementSecondary",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "applyChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "genId",
                    "args": [
                        {
                            "name": "mode",
                            "type": "Mode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "extra",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "mode",
                            "type": "Mode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "extra",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localizeLabel",
                    "args": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localizeList",
                    "args": [
                        {
                            "name": "list",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "list",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { Segment, Type, getList, getDaysOfWeekCodes, CronUnixUIService } from '@sbzen/cron-core';\n\nimport { CronTabComponent } from './../../../cron-tab.abstract';\n\n@Component({\n  selector: 'unix-cron-day',\n  templateUrl: './day.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UnixCronDayComponent extends CronTabComponent {\n  protected readonly segments: Segment[];\n\n  readonly api = this.cronUI.getApi<Type.DAY>(Type.DAY);\n  readonly segment = Segment;\n\n  readonly daysOfWeekEvery = getList(Segment.dayOfWeek, true);\n  readonly daysOfWeek = getList(Segment.dayOfWeek);\n  readonly daysOfWeekCodes = getDaysOfWeekCodes();\n\n  readonly daysOfMonthEvery = getList(Segment.dayOfMonth, true);\n  readonly daysOfMonth = getList(Segment.dayOfMonth);\n\n  constructor(\n    readonly cronUI: CronUnixUIService,\n    protected readonly cd: ChangeDetectorRef\n  ) {\n    super();\n    this.segments = [Segment.dayOfMonth, Segment.dayOfWeek];\n  }\n\n  setDayOfWeekIncrementPrimary(e: Event) {\n    const value = this.getEventValue(e);\n    this.api.setDayOfWeekIncrementPrimary(value);\n  }\n\n  setDayOfWeekIncrementSecondary(e: Event) {\n    const value = this.getEventValue(e);\n    this.api.setDayOfWeekIncrementSecondary(value);\n  }\n\n  setDayOfMonthIncrementPrimary(e: Event) {\n    const value = this.getEventValue(e);\n    this.api.setDayOfMonthIncrementPrimary(value);\n  }\n\n  setDayOfMonthIncrementSecondary(e: Event) {\n    const value = this.getEventValue(e);\n    this.api.setDayOfMonthIncrementSecondary(value);\n  }\n\n  private getEventValue(e: Event) {\n    const el = e.target as HTMLSelectElement;\n    return el.value;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cronUI",
                        "type": "CronUnixUIService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "cronUI",
                        "type": "CronUnixUIService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "CronTabComponent",
            "templateData": "<div class=\"{{cssClassPrefix}}form-group c-every-weekday c-segment\">\n  <div class=\"{{cssClassPrefix}}form-check c-every-weekday-check\">\n    <input\n      class=\"{{cssClassPrefix}}form-check-input c-every-weekday-option\"\n      type=\"radio\"\n      [attr.id]=\"genId(mode.EVERY, segment.dayOfWeek)\"\n      [value]=\"mode.EVERY\"\n      [checked]=\"api.isEverySelected()\"\n      [disabled]=\"cronUI.isDisabled()\"\n      (change)=\"api.selectEvery()\">\n\n    <label\n      class=\"{{cssClassPrefix}}form-check-label c-every-weekday-option-label\"\n      [attr.for]=\"genId(mode.EVERY, segment.dayOfWeek)\">\n\n      {{localization.unix.day.every.label}}\n    </label>\n  </div>\n</div>\n\n<div class=\"{{cssClassPrefix}}form-group {{cssClassPrefix}}form-inline c-increment-weekday c-segment\">\n  <div class=\"{{cssClassPrefix}}form-check c-increment-weekday-check\">\n    <input\n      class=\"{{cssClassPrefix}}form-check-input c-increment-weekday-option\"\n      type=\"radio\"\n      [attr.id]=\"genId(mode.INCREMENT, segment.dayOfWeek)\"\n      [value]=\"mode.INCREMENT\"\n      [checked]=\"api.isDayOfWeekIncrementSelected()\"\n      [disabled]=\"cronUI.isDisabled()\"\n      (change)=\"api.selectDayOfWeekIncrement()\">\n\n    <label\n      class=\"{{cssClassPrefix}}form-check-label c-increment-weekday-option-label\"\n      [attr.for]=\"genId(mode.INCREMENT, segment.dayOfWeek)\">\n\n      {{localization.unix.day.dayOfWeekIncrement.label1}}\n    </label>\n  </div>\n\n  <select\n    class=\"{{cssClassPrefix}}form-control {{cssClassPrefix}}form-control-sm {{cssClassPrefix}}mx-1 c-increment-weekday-every\"\n    [disabled]=\"api.isDayOfWeekIncrementControlsDisabled()\"\n    (change)=\"setDayOfWeekIncrementPrimary($event)\">\n\n    <option\n      *ngFor=\"let item of daysOfWeekEvery\"\n      [value]=\"item.value\"\n      [selected]=\"api.getDayOfWeekIncrementPrimary() === item.value\">\n      {{item.value}}\n    </option>\n  </select>\n\n  <label\n    class=\"c-increment-weekday-option-label2\"\n    [attr.for]=\"genId(mode.INCREMENT, segment.dayOfWeek)\">\n    {{localization.unix.day.dayOfWeekIncrement.label2}}\n  </label>\n\n  <select\n    class=\"{{cssClassPrefix}}form-control {{cssClassPrefix}}form-control-sm {{cssClassPrefix}}mx-1 c-increment-weekday-from\"\n    [disabled]=\"api.isDayOfWeekIncrementControlsDisabled()\"\n    (change)=\"setDayOfWeekIncrementSecondary($event)\">\n\n    <option\n      *ngFor=\"let item of daysOfWeek\"\n      [value]=\"item.value\"\n      [selected]=\"api.getDayOfWeekIncrementSecondary() === item.value\">\n      {{localizeLabel(item.label, this.localization.common.dayOfWeek)}}\n    </option>\n  </select>\n</div>\n\n<div class=\"{{cssClassPrefix}}form-group {{cssClassPrefix}}form-inline c-increment-monthday c-segment\">\n  <div class=\"{{cssClassPrefix}}form-check c-increment-monthday-check\">\n    <input\n      class=\"{{cssClassPrefix}}form-check-input c-increment-monthday-option\"\n      type=\"radio\"\n      [attr.id]=\"genId(mode.INCREMENT, segment.dayOfMonth)\"\n      [value]=\"mode.INCREMENT\"\n      [checked]=\"api.isDayOfMonthIncrementSelected()\"\n      [disabled]=\"cronUI.isDisabled()\"\n      (change)=\"api.selectDayOfMonthIncrement()\">\n\n    <label\n      class=\"{{cssClassPrefix}}form-check-label c-increment-monthday-option-label\"\n      [attr.for]=\"genId(mode.INCREMENT, segment.dayOfMonth)\">\n\n      {{localization.unix.day.dayOfMonthIncrement.label1}}\n    </label>\n  </div>\n\n  <select\n    class=\"{{cssClassPrefix}}form-control {{cssClassPrefix}}form-control-sm {{cssClassPrefix}}mx-1 c-increment-monthday-every\"\n    [disabled]=\"api.isDayOfMonthIncrementControlsDisabled()\"\n    (change)=\"setDayOfMonthIncrementPrimary($event)\">\n\n    <option\n      *ngFor=\"let item of daysOfMonth\"\n      [value]=\"item.value\"\n      [selected]=\"api.getDayOfMonthIncrementPrimary() === item.value\">\n      {{item.value}}\n    </option>\n  </select>\n\n  <label\n    class=\"c-increment-monthday-option-label2\"\n    [attr.for]=\"genId(mode.INCREMENT, segment.dayOfMonth)\">\n    {{localization.unix.day.dayOfMonthIncrement.label2}}\n  </label>\n\n  <select\n    class=\"{{cssClassPrefix}}form-control {{cssClassPrefix}}form-control-sm {{cssClassPrefix}}mx-1 c-increment-monthday-from\"\n    [disabled]=\"api.isDayOfMonthIncrementControlsDisabled()\"\n    (change)=\"setDayOfMonthIncrementSecondary($event)\">\n\n    <option\n      *ngFor=\"let item of daysOfMonthEvery\"\n      [value]=\"item.value\"\n      [selected]=\"api.getDayOfMonthIncrementSecondary() === item.value\">\n\n      {{localizeLabel(item.label, localization.common.dayOfMonth)}}\n    </option>\n  </select>\n\n  <label\n    class=\"c-increment-monthday-option-label3\"\n    [attr.for]=\"genId(mode.INCREMENT, segment.dayOfMonth)\">\n    {{localization.unix.day.dayOfMonthIncrement.label2}}\n  </label>\n</div>\n\n<div class=\"{{cssClassPrefix}}form-group c-and-weekday c-segment\">\n  <div class=\"{{cssClassPrefix}}form-check c-and-weekday-check\">\n    <input\n      class=\"{{cssClassPrefix}}form-check-input c-and-weekday-option\"\n      type=\"radio\"\n      [attr.id]=\"genId(mode.AND, segment.dayOfWeek)\"\n      [value]=\"mode.INCREMENT\"\n      [checked]=\"api.isDayOfWeekAndSelected()\"\n      [disabled]=\"cronUI.isDisabled()\"\n      (change)=\"api.selectDayOfWeekAnd()\">\n\n    <label\n      class=\"{{cssClassPrefix}}form-check-label c-and-weekday-option-label\"\n      [attr.for]=\"genId(mode.AND, segment.dayOfWeek)\">\n\n      {{localization.unix.day.dayOfWeekAnd.label}}\n    </label>\n  </div>\n\n  <div class=\"{{cssClassPrefix}}row {{cssClassPrefix}}pl-3 {{cssClassPrefix}}pt-1 c-and-weekday-list\">\n    <div\n      *ngFor=\"let item of daysOfWeekCodes\"\n      class=\"{{cssClassPrefix}}col-3 {{cssClassPrefix}}col-md-2 c-and-weekday-item\"\n      [attr.item-value]=\"item.value\">\n\n      <div class=\"{{cssClassPrefix}}form-check c-and-weekday-item-check\">\n        <input\n          class=\"{{cssClassPrefix}}form-check-input c-and-weekday-item-field\"\n          type=\"checkbox\"\n          [attr.id]=\"genId(mode.AND, segment.dayOfWeek + item.value)\"\n          [value]=\"item.value\"\n          [disabled]=\"api.isDayOfWeekAndControlsDisabled()\"\n          [checked]=\"api.isSelectedDayOfWeekAndValue(item.value)\"\n          (click)=\"api.selectDayOfWeekAndValue(item.value)\">\n\n        <label\n          class=\"{{cssClassPrefix}}form-check-label c-and-weekday-item-label\"\n          [attr.for]=\"genId(mode.AND, segment.dayOfWeek + item.value)\">\n          {{localizeLabel(item.label, localization.common.dayOfWeek)}}\n        </label>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"{{cssClassPrefix}}form-group c-and-monthday c-segment\">\n  <div class=\"{{cssClassPrefix}}form-check c-and-monthday-check\">\n    <input\n      class=\"{{cssClassPrefix}}form-check-input c-and-monthday-option\"\n      type=\"radio\"\n      [attr.id]=\"genId(mode.AND, segment.dayOfMonth)\"\n      [value]=\"mode.INCREMENT\"\n      [checked]=\"api.isDayOfMonthAndSelected()\"\n      [disabled]=\"cronUI.isDisabled()\"\n      (change)=\"api.selectDayOfMonthAnd()\">\n\n    <label\n      class=\"{{cssClassPrefix}}form-check-label c-and-monthday-option-label\"\n      [attr.for]=\"genId(mode.AND, segment.dayOfMonth)\">\n\n      {{localization.unix.day.dayOfMonthAnd.label}}\n    </label>\n  </div>\n\n  <div class=\"{{cssClassPrefix}}row {{cssClassPrefix}}pl-3 {{cssClassPrefix}}pt-1 c-and-monthday-list\">\n    <div\n      *ngFor=\"let item of daysOfMonth\"\n      class=\"{{cssClassPrefix}}col-2 {{cssClassPrefix}}col-md-1 c-and-monthday-item\"\n      [attr.item-value]=\"item.value\">\n\n      <div class=\"{{cssClassPrefix}}form-check c-and-monthday-item-check\">\n        <input\n          class=\"{{cssClassPrefix}}form-check-input c-and-monthday-item-field\"\n          type=\"checkbox\"\n          [attr.id]=\"genId(mode.AND, segment.dayOfMonth + item.value)\"\n          [value]=\"item.value\"\n          [disabled]=\"api.isDayOfMonthAndControlsDisabled()\"\n          [checked]=\"api.isSelectedDayOfMonthAndValue(item.value)\"\n          (click)=\"api.selectDayOfMonthAndValue(item.value)\">\n\n        <label\n          class=\"{{cssClassPrefix}}form-check-label c-and-monthday-item-label\"\n          [attr.for]=\"genId(mode.AND, segment.dayOfMonth + item.value)\">\n          {{item.label}}\n        </label>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "UnixCronHourComponent",
            "id": "component-UnixCronHourComponent-461c8a367309a9d328a3ec8b40583412dd641aa40ee611fa3f057e0d42e769e79884db3ef8331bb75ed8d5c8f84af20449869f82fd5dab9bb1dc07fec52ed570",
            "file": "projects/ng-cron/src/lib/unix/tabs/hour/hour.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "unix-cron-hour",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./hour.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "cssClassPrefix",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localization",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "FullCronLocalization",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "changed",
                    "defaultValue": "new EventEmitter<never>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "api",
                    "defaultValue": "this.cronUI.getApi(Type.HOURS)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "hourCodes",
                    "defaultValue": "getList(Segment.hours, true)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "hours",
                    "defaultValue": "getList(Segment.hours)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "and",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronAndComponent | null",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "CronAndComponent, {static: true}"
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabSingleSegmentComponent"
                    }
                },
                {
                    "name": "segments",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Segment[]",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "cd",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChangeDetectorRef",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        122,
                        126,
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "cronUI",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronUnixUIService | CronQuartzUIService",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        126,
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "mode",
                    "defaultValue": "Mode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "sessionId",
                    "defaultValue": "Date.now().toString()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121,
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "unListener",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "applyChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122,
                        158
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "getSegments",
                    "args": [
                        {
                            "name": "tab",
                            "type": "CronSingleType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "tab",
                            "type": "CronSingleType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabSingleSegmentComponent"
                    }
                },
                {
                    "name": "genId",
                    "args": [
                        {
                            "name": "mode",
                            "type": "Mode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "extra",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "mode",
                            "type": "Mode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "extra",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localizeLabel",
                    "args": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localizeList",
                    "args": [
                        {
                            "name": "list",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "list",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { Segment, Type, getList, CronUnixUIService } from '@sbzen/cron-core';\n\nimport { CronTabSingleSegmentComponent } from './../../../cron-tab-single-segment.abstract';\n\n@Component({\n  selector: 'unix-cron-hour',\n  templateUrl: './hour.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UnixCronHourComponent extends CronTabSingleSegmentComponent {\n  readonly hourCodes = getList(Segment.hours, true);\n  readonly hours = getList(Segment.hours);\n  readonly api = this.cronUI.getApi(Type.HOURS);\n\n  constructor(\n    readonly cronUI: CronUnixUIService,\n    protected readonly cd: ChangeDetectorRef\n  ) {\n    super(Type.HOURS);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cronUI",
                        "type": "CronUnixUIService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "cronUI",
                        "type": "CronUnixUIService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "CronTabSingleSegmentComponent",
            "templateData": "<cron-every\n  [label]=\"localization.unix.hour.every.label\"\n  [cssClassPrefix]=\"cssClassPrefix\"\n  [checked]=\"api.isEverySelected()\"\n  [disabled]=\"cronUI.isDisabled()\"\n  [segmentId]=\"genId(mode.EVERY)\"\n  (selected)=\"api.selectEvery()\">\n</cron-every>\n\n<unix-cron-increment\n  [label]=\"localization.unix.hour.increment.label1\"\n  [label2]=\"localization.unix.hour.increment.label2\"\n  [cssClassPrefix]=\"cssClassPrefix\"\n  [checked]=\"api.isIncrementSelected()\"\n  [disabled]=\"cronUI.isDisabled()\"\n  [segmentId]=\"genId(mode.INCREMENT)\"\n  [disabledControls]=\"api.isIncrementControlsDisabled()\"\n  [primaryOptions]=\"hourCodes\"\n  [primaryValue]=\"api.getIncrementPrimaryValue()\"\n  (selected)=\"api.selectIncrement()\"\n  (primaryValueChanged)=\"api.setIncrementPrimaryValue($event)\">\n</unix-cron-increment>\n\n<cron-and\n  [label]=\"localization.unix.hour.and.label\"\n  [cssClassPrefix]=\"cssClassPrefix\"\n  [checked]=\"api.isAndSelected()\"\n  [disabled]=\"cronUI.isDisabled()\"\n  [segmentId]=\"genId(mode.AND)\"\n  [options]=\"hours\"\n  [disabledControls]=\"api.isAndControlsDisabled()\"\n  [isValueSelected]=\"api.isSelectedAndValue\"\n  [selectValue]=\"api.selectAndValue\"\n  (selected)=\"api.selectAnd()\">\n</cron-and>\n\n<cron-range\n  [label]=\"localization.unix.hour.range.label1\"\n  [label2]=\"localization.unix.hour.range.label2\"\n  [cssClassPrefix]=\"cssClassPrefix\"\n  [checked]=\"api.isRangeSelected()\"\n  [disabled]=\"cronUI.isDisabled()\"\n  [segmentId]=\"genId(mode.RANGE)\"\n  [disabledControls]=\"api.isRangeControlsDisabled()\"\n  [primaryOptions]=\"hours\"\n  [secondaryOptions]=\"hours\"\n  [primaryValue]=\"api.getRangePrimaryValue()\"\n  [secondaryValue]=\"api.getRangeSecondaryValue()\"\n  (selected)=\"api.selectRange()\"\n  (primaryValueChanged)=\"api.setRangePrimaryValue($event)\"\n  (secondaryValueChanged)=\"api.setRangeSecondaryValue($event)\">\n</cron-range>\n"
        },
        {
            "name": "UnixCronIncrementComponent",
            "id": "component-UnixCronIncrementComponent-b30434049d007fe0404988799a77e8276bf85c4d137e56b9d3c219582694c255a2f4dec52ac8bfce2e0e1d3fb74721913da12bfeddfd5165e8e67f7b39598386",
            "file": "projects/ng-cron/src/lib/unix/tabs/shared/increment/increment.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "unix-cron-increment",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./increment.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "cssClassPrefix",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disabledControls",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label2",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primaryOptions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "literal type[]",
                    "decorators": []
                },
                {
                    "name": "primaryValue",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "segmentId",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "primaryValueChanged",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "EventEmitter"
                },
                {
                    "name": "selected",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "mode",
                    "defaultValue": "Mode.INCREMENT",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        144
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "setPrimaryValue",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\n\nimport { Mode } from '@sbzen/cron-core';\n\n@Component({\n  selector: 'unix-cron-increment',\n  templateUrl: './increment.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UnixCronIncrementComponent {\n  @Output() readonly selected = new EventEmitter<void>();\n  @Output() readonly primaryValueChanged = new EventEmitter<string>();\n  @Input() cssClassPrefix = '';\n  @Input() segmentId = '';\n  @Input() checked = false;\n  @Input() disabled = false;\n  @Input() disabledControls = false;\n  @Input() label = '';\n  @Input() label2 = '';\n  @Input() primaryValue = '';\n  @Input() primaryOptions: {\n    label: string|number,\n    value: string\n  }[] = [];\n  readonly mode = Mode.INCREMENT;\n\n  setPrimaryValue(e: Event) {\n    const el = e.target as HTMLSelectElement;\n    this.primaryValueChanged.emit(el.value);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"{{cssClassPrefix}}form-group {{cssClassPrefix}}form-inline c-increment c-segment\">\n  <div class=\"{{cssClassPrefix}}form-check c-increment-check\">\n    <input\n      class=\"{{cssClassPrefix}}form-check-input c-increment-option\"\n      type=\"radio\"\n      [attr.id]=\"segmentId\"\n      [value]=\"mode\"\n      [checked]=\"checked\"\n      [disabled]=\"disabled\"\n      (change)=\"selected.emit()\">\n\n    <label\n      class=\"{{cssClassPrefix}}form-check-label c-increment-option-label\"\n      [attr.for]=\"segmentId\">\n      {{label}}\n    </label>\n  </div>\n\n  <select\n    class=\"{{cssClassPrefix}}form-control {{cssClassPrefix}}form-control-sm {{cssClassPrefix}}mx-1 c-increment-every\"\n    [disabled]=\"disabledControls\"\n    (change)=\"setPrimaryValue($event)\">\n\n    <option\n      *ngFor=\"let item of primaryOptions\"\n      [value]=\"item.value\"\n      [selected]=\"primaryValue === item.value\">\n      {{item.value}}\n    </option>\n  </select>\n\n  <label\n    class=\"c-increment-option-label2\"\n    [attr.for]=\"segmentId\">\n    {{label2}}\n  </label>\n</div>\n"
        },
        {
            "name": "UnixCronMinuteComponent",
            "id": "component-UnixCronMinuteComponent-0146c1870cadea3e1ec4e14b9e3819c98f6edf9fbb469da6860e59dce43005bb885b264102dbcf0b62ecb18f71e1749de1635f5cf519862ff44d5ce074b23cdb",
            "file": "projects/ng-cron/src/lib/unix/tabs/minute/minute.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "unix-cron-minute",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./minute.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "cssClassPrefix",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localization",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "FullCronLocalization",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "changed",
                    "defaultValue": "new EventEmitter<never>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "api",
                    "defaultValue": "this.cronUI.getApi(Type.MINUTES)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "minuteCodes",
                    "defaultValue": "getList(Segment.minutes, true)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "minutes",
                    "defaultValue": "getList(Segment.minutes)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "and",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronAndComponent | null",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "CronAndComponent, {static: true}"
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabSingleSegmentComponent"
                    }
                },
                {
                    "name": "segments",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Segment[]",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "cd",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChangeDetectorRef",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        122,
                        126,
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "cronUI",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronUnixUIService | CronQuartzUIService",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        126,
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "mode",
                    "defaultValue": "Mode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "sessionId",
                    "defaultValue": "Date.now().toString()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121,
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "unListener",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "applyChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122,
                        158
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "getSegments",
                    "args": [
                        {
                            "name": "tab",
                            "type": "CronSingleType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "tab",
                            "type": "CronSingleType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabSingleSegmentComponent"
                    }
                },
                {
                    "name": "genId",
                    "args": [
                        {
                            "name": "mode",
                            "type": "Mode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "extra",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "mode",
                            "type": "Mode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "extra",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localizeLabel",
                    "args": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localizeList",
                    "args": [
                        {
                            "name": "list",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "list",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { Segment, Type, getList, CronUnixUIService } from '@sbzen/cron-core';\n\nimport { CronTabSingleSegmentComponent } from './../../../cron-tab-single-segment.abstract';\n\n@Component({\n  selector: 'unix-cron-minute',\n  templateUrl: './minute.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UnixCronMinuteComponent extends CronTabSingleSegmentComponent {\n  readonly minuteCodes = getList(Segment.minutes, true);\n  readonly minutes = getList(Segment.minutes);\n  readonly api = this.cronUI.getApi(Type.MINUTES);\n\n  constructor(\n    readonly cronUI: CronUnixUIService,\n    protected readonly cd: ChangeDetectorRef\n  ) {\n    super(Type.MINUTES);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cronUI",
                        "type": "CronUnixUIService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "cronUI",
                        "type": "CronUnixUIService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "CronTabSingleSegmentComponent",
            "templateData": "<cron-every\n  [label]=\"localization.unix.minute.every.label\"\n  [cssClassPrefix]=\"cssClassPrefix\"\n  [checked]=\"api.isEverySelected()\"\n  [disabled]=\"cronUI.isDisabled()\"\n  [segmentId]=\"genId(mode.EVERY)\"\n  (selected)=\"api.selectEvery()\">\n</cron-every>\n\n<unix-cron-increment\n  [label]=\"localization.unix.minute.increment.label1\"\n  [label2]=\"localization.unix.minute.increment.label2\"\n  [cssClassPrefix]=\"cssClassPrefix\"\n  [checked]=\"api.isIncrementSelected()\"\n  [disabled]=\"cronUI.isDisabled()\"\n  [segmentId]=\"genId(mode.INCREMENT)\"\n  [disabledControls]=\"api.isIncrementControlsDisabled()\"\n  [primaryOptions]=\"minuteCodes\"\n  [primaryValue]=\"api.getIncrementPrimaryValue()\"\n  (selected)=\"api.selectIncrement()\"\n  (primaryValueChanged)=\"api.setIncrementPrimaryValue($event)\">\n</unix-cron-increment>\n\n<cron-and\n  [label]=\"localization.unix.minute.and.label\"\n  [cssClassPrefix]=\"cssClassPrefix\"\n  [checked]=\"api.isAndSelected()\"\n  [disabled]=\"cronUI.isDisabled()\"\n  [segmentId]=\"genId(mode.AND)\"\n  [options]=\"minutes\"\n  [disabledControls]=\"api.isAndControlsDisabled()\"\n  [isValueSelected]=\"api.isSelectedAndValue\"\n  [selectValue]=\"api.selectAndValue\"\n  (selected)=\"api.selectAnd()\">\n</cron-and>\n\n<cron-range\n  [label]=\"localization.unix.minute.range.label1\"\n  [label2]=\"localization.unix.minute.range.label2\"\n  [cssClassPrefix]=\"cssClassPrefix\"\n  [checked]=\"api.isRangeSelected()\"\n  [disabled]=\"cronUI.isDisabled()\"\n  [segmentId]=\"genId(mode.RANGE)\"\n  [disabledControls]=\"api.isRangeControlsDisabled()\"\n  [primaryOptions]=\"minutes\"\n  [secondaryOptions]=\"minutes\"\n  [primaryValue]=\"api.getRangePrimaryValue()\"\n  [secondaryValue]=\"api.getRangeSecondaryValue()\"\n  (selected)=\"api.selectRange()\"\n  (primaryValueChanged)=\"api.setRangePrimaryValue($event)\"\n  (secondaryValueChanged)=\"api.setRangeSecondaryValue($event)\">\n</cron-range>\n"
        },
        {
            "name": "UnixCronMonthComponent",
            "id": "component-UnixCronMonthComponent-f633449f8d850a761888eee3428a5009c1c1747424bfe828401661a3df6d3d6c8b6ad41496db2766014877f113a1e7261e4f0b3c7bbdd83d62b4d9d05ebec019",
            "file": "projects/ng-cron/src/lib/unix/tabs/month/month.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "unix-cron-month",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./month.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "cssClassPrefix",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localization",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "FullCronLocalization",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "changed",
                    "defaultValue": "new EventEmitter<never>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "api",
                    "defaultValue": "this.cronUI.getApi(Type.MONTH)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "incrementPrimaryOptions",
                    "defaultValue": "this.monthes.map((v, i) => ({\n    ...v,\n    label: i + 1\n  }))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "monthCodes",
                    "defaultValue": "getMonthCodes()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "monthes",
                    "defaultValue": "getList(Segment.month)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "and",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronAndComponent | null",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "CronAndComponent, {static: true}"
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabSingleSegmentComponent"
                    }
                },
                {
                    "name": "segments",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Segment[]",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "cd",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChangeDetectorRef",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        122,
                        126,
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "cronUI",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronUnixUIService | CronQuartzUIService",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        126,
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "mode",
                    "defaultValue": "Mode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "sessionId",
                    "defaultValue": "Date.now().toString()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121,
                        144
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "unListener",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "applyChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122,
                        158
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "getSegments",
                    "args": [
                        {
                            "name": "tab",
                            "type": "CronSingleType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "tab",
                            "type": "CronSingleType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabSingleSegmentComponent"
                    }
                },
                {
                    "name": "genId",
                    "args": [
                        {
                            "name": "mode",
                            "type": "Mode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "extra",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "mode",
                            "type": "Mode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "extra",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localizeLabel",
                    "args": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localizeList",
                    "args": [
                        {
                            "name": "list",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "list",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { Segment, Type, getMonthCodes, getList, CronUnixUIService } from '@sbzen/cron-core';\n\nimport { CronTabSingleSegmentComponent } from './../../../cron-tab-single-segment.abstract';\n\n@Component({\n  selector: 'unix-cron-month',\n  templateUrl: './month.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UnixCronMonthComponent extends CronTabSingleSegmentComponent {\n  readonly monthCodes = getMonthCodes();\n  readonly monthes = getList(Segment.month);\n  readonly incrementPrimaryOptions = this.monthes.map((v, i) => ({\n    ...v,\n    label: i + 1\n  }));\n  readonly api = this.cronUI.getApi(Type.MONTH);\n\n  constructor(\n    readonly cronUI: CronUnixUIService,\n    protected readonly cd: ChangeDetectorRef\n  ) {\n    super(Type.MONTH);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cronUI",
                        "type": "CronUnixUIService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "cronUI",
                        "type": "CronUnixUIService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "CronTabSingleSegmentComponent",
            "templateData": "<cron-every\n  [label]=\"localization.unix.month.every.label\"\n  [cssClassPrefix]=\"cssClassPrefix\"\n  [checked]=\"api.isEverySelected()\"\n  [disabled]=\"cronUI.isDisabled()\"\n  [segmentId]=\"genId(mode.EVERY)\"\n  (selected)=\"api.selectEvery()\">\n</cron-every>\n\n<unix-cron-increment\n  [label]=\"localization.unix.month.increment.label1\"\n  [label2]=\"localization.unix.month.increment.label2\"\n  [cssClassPrefix]=\"cssClassPrefix\"\n  [checked]=\"api.isIncrementSelected()\"\n  [disabled]=\"cronUI.isDisabled()\"\n  [segmentId]=\"genId(mode.INCREMENT)\"\n  [disabledControls]=\"api.isIncrementControlsDisabled()\"\n  [primaryOptions]=\"incrementPrimaryOptions\"\n  [primaryValue]=\"api.getIncrementPrimaryValue()\"\n  (selected)=\"api.selectIncrement()\"\n  (primaryValueChanged)=\"api.setIncrementPrimaryValue($event)\">\n</unix-cron-increment>\n\n<cron-and\n  [gridSize]=\"['col-3', 'col-md-2']\"\n  [label]=\"localization.unix.month.and.label\"\n  [cssClassPrefix]=\"cssClassPrefix\"\n  [checked]=\"api.isAndSelected()\"\n  [disabled]=\"cronUI.isDisabled()\"\n  [segmentId]=\"genId(mode.AND)\"\n  [options]=\"localizeList(monthCodes, localization.common.month)\"\n  [disabledControls]=\"api.isAndControlsDisabled()\"\n  [isValueSelected]=\"api.isSelectedAndValue\"\n  [selectValue]=\"api.selectAndValue\"\n  (selected)=\"api.selectAnd()\">\n</cron-and>\n\n<cron-range\n  [label]=\"localization.unix.month.range.label1\"\n  [label2]=\"localization.unix.month.range.label2\"\n  [cssClassPrefix]=\"cssClassPrefix\"\n  [checked]=\"api.isRangeSelected()\"\n  [disabled]=\"cronUI.isDisabled()\"\n  [segmentId]=\"genId(mode.RANGE)\"\n  [disabledControls]=\"api.isRangeControlsDisabled()\"\n  [primaryOptions]=\"localizeList(monthes, localization.common.month)\"\n  [secondaryOptions]=\"localizeList(monthes, localization.common.month)\"\n  [primaryValue]=\"api.getRangePrimaryValue()\"\n  [secondaryValue]=\"api.getRangeSecondaryValue()\"\n  (selected)=\"api.selectRange()\"\n  (primaryValueChanged)=\"api.setRangePrimaryValue($event)\"\n  (secondaryValueChanged)=\"api.setRangeSecondaryValue($event)\">\n</cron-range>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-af3ac3cf38e55db71ffe55dae96e881fa1150f85baff7c03fbcae4fc65abce1eed9f58e22563090f672d967f342edc22c6ed897142d6964bff97f326b2446c74",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/e2e/src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { TestModule } from './test/test.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    TestModule\n  ],\n  declarations: [AppComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "TestModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CronAndModule",
            "id": "module-CronAndModule-fa1d5e0bde8d35817625db1d648830a7fdd6fc80fc9e749d579ce2368ba5f4468eff7991d7f05abe6b7fa3092f19eac17acb15fae6e8f99c17583dbe95b98fd9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ng-cron/src/lib/shared/and/and.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CronAndComponent } from './and.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CronAndComponent],\n  exports: [CronAndComponent]\n})\nexport class CronAndModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CronAndComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CronAndComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CronContainerModule",
            "id": "module-CronContainerModule-6c1df98143e97f0ee75416cd536f1c320e622703350722dd4d9afc5530f4e48e2cdf86ed9abb2c69a8a7cfd034b6cd8f339df42f60b3524223bb03123d65ad7c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ng-cron/src/lib/container/container.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CronContainerComponent } from './container.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CronContainerComponent],\n  exports: [CronContainerComponent]\n})\nexport class CronContainerModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CronContainerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CronContainerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CronEveryModule",
            "id": "module-CronEveryModule-f48947ae7397fb96ff16e84e67b6804f3bd38be1ae07924abdb23d51244eb566f86a20b8d39dd1922ab15c3043970976d4c822e8eb74e21f94310e97a952f3a1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ng-cron/src/lib/shared/every/every.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CronEveryComponent } from './every.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CronEveryComponent],\n  exports: [CronEveryComponent]\n})\nexport class CronEveryModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CronEveryComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CronEveryComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CronRangeModule",
            "id": "module-CronRangeModule-91f70ae9b132943ccc2026f791de336143e218a1ee9c5942bda76c6114e1e0f9cc3631ea3ffba4c194406890a0674cdd1942c92eac29987e7ba0267369afa93d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ng-cron/src/lib/shared/range/range.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CronRangeComponent } from './range.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CronRangeComponent],\n  exports: [CronRangeComponent]\n})\nexport class CronRangeModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CronRangeComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CronRangeComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "QuartzCronDayModule",
            "id": "module-QuartzCronDayModule-30ac55d11335cf86d3654f7f1b98d75e058bd48a26d1e32654c7c9f3dfa2dcc4c89055bedc6a980eb6badb6441563b99f43e68d09e7eb40dbc3f0df3911dad6b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ng-cron/src/lib/quartz/tabs/day/day.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CronRangeModule } from './../../../shared';\nimport { QuartzCronDayComponent } from './day.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CronRangeModule\n  ],\n  declarations: [QuartzCronDayComponent],\n  exports: [QuartzCronDayComponent]\n})\nexport class QuartzCronDayModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "QuartzCronDayComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CronRangeModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "QuartzCronDayComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "QuartzCronHourModule",
            "id": "module-QuartzCronHourModule-5411b0d491c4c7c1b80dc75ec4becbdf3eead8daede3eda87d41560f9a9bb76ca2b7953314f89ae46052b49783483cb178f410a92326a798268c153773c4a987",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ng-cron/src/lib/quartz/tabs/hour/hour.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CronAndModule, CronRangeModule, CronEveryModule } from './../../../shared';\nimport { QuartzCronIncrementModule } from './../shared/increment';\nimport { QuartzCronHourComponent } from './hour.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CronEveryModule,\n    CronRangeModule,\n    CronAndModule,\n    QuartzCronIncrementModule\n  ],\n  declarations: [QuartzCronHourComponent],\n  exports: [QuartzCronHourComponent]\n})\nexport class QuartzCronHourModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "QuartzCronHourComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CronAndModule"
                        },
                        {
                            "name": "CronEveryModule"
                        },
                        {
                            "name": "CronRangeModule"
                        },
                        {
                            "name": "QuartzCronIncrementModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "QuartzCronHourComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "QuartzCronIncrementModule",
            "id": "module-QuartzCronIncrementModule-76668232490ea3e1ea124912a11d6dc769f0e2e934bbacefb074a2ad017982e91f06d0bb084d5de6e705b702abbe42bde74df709e646ac679f569d2e1aa25c55",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ng-cron/src/lib/quartz/tabs/shared/increment/increment.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { QuartzCronIncrementComponent } from './increment.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [QuartzCronIncrementComponent],\n  exports: [QuartzCronIncrementComponent]\n})\nexport class QuartzCronIncrementModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "QuartzCronIncrementComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "QuartzCronIncrementComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "QuartzCronMinuteModule",
            "id": "module-QuartzCronMinuteModule-787021889e6ffb35774890b5b754b8796e4513e0c2a4baac935265c6be704732c0923e88a519467929619ba7927a83c94850c3370903d5a7b3bfbad36c468798",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ng-cron/src/lib/quartz/tabs/minute/minute.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CronAndModule, CronRangeModule, CronEveryModule } from './../../../shared';\nimport { QuartzCronIncrementModule } from './../shared/increment';\nimport { QuartzCronMinuteComponent } from './minute.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CronEveryModule,\n    CronRangeModule,\n    CronAndModule,\n    QuartzCronIncrementModule\n  ],\n  declarations: [QuartzCronMinuteComponent],\n  exports: [QuartzCronMinuteComponent]\n})\nexport class QuartzCronMinuteModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "QuartzCronMinuteComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CronAndModule"
                        },
                        {
                            "name": "CronEveryModule"
                        },
                        {
                            "name": "CronRangeModule"
                        },
                        {
                            "name": "QuartzCronIncrementModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "QuartzCronMinuteComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "QuartzCronModule",
            "id": "module-QuartzCronModule-8b2dbc41e5d58e072be227f382c62047b8aa9d00efd5a39521a7597fc6ae554eba8e6b16b11eefda61d3af1ac70e2c0260743f69b85dad925a90a8851ee93c63",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ng-cron/src/lib/quartz/quartz.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CronContainerModule } from './../container';\nimport { QuartzCronMinuteModule } from './tabs/minute';\nimport { QuartzCronMonthModule } from './tabs/month';\nimport { QuartzCronHourModule } from './tabs/hour';\nimport { QuartzCronSecondModule } from './tabs/second';\nimport { QuartzCronYearModule } from './tabs/year';\nimport { QuartzCronDayModule } from './tabs/day';\n\nimport { QuartzCronComponent } from './quartz.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    QuartzCronMonthModule,\n    QuartzCronMinuteModule,\n    QuartzCronHourModule,\n    QuartzCronSecondModule,\n    QuartzCronYearModule,\n    QuartzCronDayModule,\n    CronContainerModule\n  ],\n  declarations: [QuartzCronComponent],\n  exports: [QuartzCronComponent]\n})\nexport class QuartzCronModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "QuartzCronComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CronContainerModule"
                        },
                        {
                            "name": "QuartzCronDayModule"
                        },
                        {
                            "name": "QuartzCronHourModule"
                        },
                        {
                            "name": "QuartzCronMinuteModule"
                        },
                        {
                            "name": "QuartzCronMonthModule"
                        },
                        {
                            "name": "QuartzCronSecondModule"
                        },
                        {
                            "name": "QuartzCronYearModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "QuartzCronMonthModule",
            "id": "module-QuartzCronMonthModule-e9d4583d851c27d4f4755e9584e06434a7c39a7abb68c9b908c5ecd93a12c5a25d02c906a6a6b9bfc3dbe3a6b4ca1ff287ec5e674e19e34cc23e9088302098c1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ng-cron/src/lib/quartz/tabs/month/month.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CronAndModule, CronRangeModule, CronEveryModule } from './../../../shared';\nimport { QuartzCronIncrementModule } from './../shared/increment';\nimport { QuartzCronMonthComponent } from './month.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CronEveryModule,\n    CronRangeModule,\n    CronAndModule,\n    QuartzCronIncrementModule\n  ],\n  declarations: [QuartzCronMonthComponent],\n  exports: [QuartzCronMonthComponent]\n})\nexport class QuartzCronMonthModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "QuartzCronMonthComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CronAndModule"
                        },
                        {
                            "name": "CronEveryModule"
                        },
                        {
                            "name": "CronRangeModule"
                        },
                        {
                            "name": "QuartzCronIncrementModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "QuartzCronMonthComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "QuartzCronSecondModule",
            "id": "module-QuartzCronSecondModule-52ddafc18a7c9fde1d1948b99e47be8057ae76d3efa2b1764f46686c7e72654210aa687c3e732407822b5b624f7af5bcb3abda8262f23a296c90a7b25dbc78a4",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ng-cron/src/lib/quartz/tabs/second/second.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CronAndModule, CronRangeModule, CronEveryModule } from './../../../shared';\nimport { QuartzCronIncrementModule } from './../shared/increment';\nimport { QuartzCronSecondComponent } from './second.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CronEveryModule,\n    CronRangeModule,\n    CronAndModule,\n    QuartzCronIncrementModule\n  ],\n  declarations: [QuartzCronSecondComponent],\n  exports: [QuartzCronSecondComponent]\n})\nexport class QuartzCronSecondModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "QuartzCronSecondComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CronAndModule"
                        },
                        {
                            "name": "CronEveryModule"
                        },
                        {
                            "name": "CronRangeModule"
                        },
                        {
                            "name": "QuartzCronIncrementModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "QuartzCronSecondComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "QuartzCronYearModule",
            "id": "module-QuartzCronYearModule-213360f72bd4464d116ec4be4e93871ca1cb3ba6fd025d136409f1607ae4b925a65e2356beb11d058e88736fb4e911b66ed1e2ec24d6b92622efd40e3bcc03d5",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ng-cron/src/lib/quartz/tabs/year/year.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CronAndModule, CronRangeModule, CronEveryModule } from './../../../shared';\nimport { QuartzCronIncrementModule } from './../shared/increment';\nimport { QuartzCronYearComponent } from './year.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CronEveryModule,\n    CronRangeModule,\n    CronAndModule,\n    QuartzCronIncrementModule\n  ],\n  declarations: [QuartzCronYearComponent],\n  exports: [QuartzCronYearComponent]\n})\nexport class QuartzCronYearModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "QuartzCronYearComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CronAndModule"
                        },
                        {
                            "name": "CronEveryModule"
                        },
                        {
                            "name": "CronRangeModule"
                        },
                        {
                            "name": "QuartzCronIncrementModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "QuartzCronYearComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TestModule",
            "id": "module-TestModule-8d62dcf80c17e5f9a596637a84214d73de7f541862a3631d0d64e98e4cd8bc3b8c8b90394cc93cf9fd21aae663a80af5fe549453491e7664cdd02320825fb6f3",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/e2e/src/app/test/test.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { UnixCronModule, QuartzCronModule } from '@sbzen/ng-cron';\n\nimport { ContainerComponent } from './container/container.component';\nimport { TestComponent } from './test.component';\n\n@NgModule({\n\timports: [\n\t\tBrowserModule,\n\t\tFormsModule,\n\t\tUnixCronModule,\n\t\tQuartzCronModule\n\t],\n\tdeclarations: [\n    ContainerComponent,\n\t\tTestComponent\n\t],\n\texports: [TestComponent]\n})\nexport class TestModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ContainerComponent"
                        },
                        {
                            "name": "TestComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "QuartzCronModule"
                        },
                        {
                            "name": "UnixCronModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "TestComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UnixCronDayModule",
            "id": "module-UnixCronDayModule-f9e5bf7cee91d99326b87549dd7875cc668e26a9ec0b402d09196a1f19ebe535d8db7df575b0f0f2d6c5e323f50ac65c3fd7ff9e785a4d20fede300d59c7c87e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ng-cron/src/lib/unix/tabs/day/day.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UnixCronDayComponent } from './day.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [UnixCronDayComponent],\n  exports: [UnixCronDayComponent]\n})\nexport class UnixCronDayModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "UnixCronDayComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "UnixCronDayComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UnixCronHourModule",
            "id": "module-UnixCronHourModule-9115c2d04a8a2fa5a2a27150f24ea023cafd3b716f6e64164ef8efeb2e288893a523c1fe70e11e501ef89f86010243af54e0d56e46ebfb5d62da5ca0640d112e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ng-cron/src/lib/unix/tabs/hour/hour.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CronAndModule, CronRangeModule, CronEveryModule } from './../../../shared';\nimport { UnixCronIncrementModule } from './../shared/increment';\nimport { UnixCronHourComponent } from './hour.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CronEveryModule,\n    CronRangeModule,\n    CronAndModule,\n    UnixCronIncrementModule\n  ],\n  declarations: [UnixCronHourComponent],\n  exports: [UnixCronHourComponent]\n})\nexport class UnixCronHourModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "UnixCronHourComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CronAndModule"
                        },
                        {
                            "name": "CronEveryModule"
                        },
                        {
                            "name": "CronRangeModule"
                        },
                        {
                            "name": "UnixCronIncrementModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "UnixCronHourComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UnixCronIncrementModule",
            "id": "module-UnixCronIncrementModule-557e0f006cfc7805e0a0d0d5b5951311497c4ab89cd5166993c87511c24e836b5c83fd4895c9d97df11d8bcf2ed8aa8ad1cb39e3d8eaa6ade4c1c663bfda6ea9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ng-cron/src/lib/unix/tabs/shared/increment/increment.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UnixCronIncrementComponent } from './increment.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [UnixCronIncrementComponent],\n  exports: [UnixCronIncrementComponent]\n})\nexport class UnixCronIncrementModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "UnixCronIncrementComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "UnixCronIncrementComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UnixCronMinuteModule",
            "id": "module-UnixCronMinuteModule-105b02dc34483c9574acc31d5f0d9561b3bcd33ffbcb7b6a133fe099788d69db4d2103195313a27aa653fce2b34d2292062c4729620c813bcdc54c417d740d01",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ng-cron/src/lib/unix/tabs/minute/minute.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CronAndModule, CronRangeModule, CronEveryModule } from './../../../shared';\nimport { UnixCronIncrementModule } from './../shared/increment';\nimport { UnixCronMinuteComponent } from './minute.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CronEveryModule,\n    CronRangeModule,\n    CronAndModule,\n    UnixCronIncrementModule\n  ],\n  declarations: [UnixCronMinuteComponent],\n  exports: [UnixCronMinuteComponent]\n})\nexport class UnixCronMinuteModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "UnixCronMinuteComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CronAndModule"
                        },
                        {
                            "name": "CronEveryModule"
                        },
                        {
                            "name": "CronRangeModule"
                        },
                        {
                            "name": "UnixCronIncrementModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "UnixCronMinuteComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UnixCronModule",
            "id": "module-UnixCronModule-c847f980601ad86b3bf880c5f0e4e10f6997e4960ed24331da0c612e73fe0ff02aa677d5f5d48c8133d51cbb403df1a4229b08dc1050426e0be7c9efc25f549e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ng-cron/src/lib/unix/unix.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CronContainerModule } from './../container';\nimport { UnixCronMinuteModule } from './tabs/minute';\nimport { UnixCronMonthModule } from './tabs/month';\nimport { UnixCronHourModule } from './tabs/hour';\nimport { UnixCronDayModule } from './tabs/day';\n\nimport { UnixCronComponent } from './unix.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    UnixCronMinuteModule,\n    UnixCronMonthModule,\n    UnixCronHourModule,\n    UnixCronDayModule,\n    CronContainerModule\n  ],\n  declarations: [UnixCronComponent],\n  exports: [UnixCronComponent]\n})\nexport class UnixCronModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "UnixCronComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CronContainerModule"
                        },
                        {
                            "name": "UnixCronDayModule"
                        },
                        {
                            "name": "UnixCronHourModule"
                        },
                        {
                            "name": "UnixCronMinuteModule"
                        },
                        {
                            "name": "UnixCronMonthModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UnixCronMonthModule",
            "id": "module-UnixCronMonthModule-63be9eb601fb14fdc5f2064ff92de384d0c9d0817d776250938fbe225498ca8c9dbe64a547bd66b7711830a75cd612b5fae59ea529797dd298003ed3d690a71f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ng-cron/src/lib/unix/tabs/month/month.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CronAndModule, CronRangeModule, CronEveryModule } from './../../../shared';\nimport { UnixCronIncrementModule } from './../shared/increment';\nimport { UnixCronMonthComponent } from './month.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CronEveryModule,\n    CronRangeModule,\n    CronAndModule,\n    UnixCronIncrementModule\n  ],\n  declarations: [UnixCronMonthComponent],\n  exports: [UnixCronMonthComponent]\n})\nexport class UnixCronMonthModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "UnixCronMonthComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CronAndModule"
                        },
                        {
                            "name": "CronEveryModule"
                        },
                        {
                            "name": "CronRangeModule"
                        },
                        {
                            "name": "UnixCronIncrementModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "UnixCronMonthComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/e2e/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-cron/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/quartz-cron.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/unix-cron.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/e2e/src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/e2e/src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "getLocalization",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/e2e/src/app/test/localization.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(): CronLocalization => ({\n\tcommon: {\n\t\tmonth: {\n\t\t\tjanuary: 'January',\n\t\t\tfebruary: 'February',\n\t\t\tmarch: 'March',\n\t\t\tapril: 'April',\n\t\t\tmay: 'May',\n\t\t\tjune: 'June',\n\t\t\tjuly: 'July',\n\t\t\taugust: 'August',\n\t\t\tseptember: 'September',\n\t\t\toctober: 'October',\n\t\t\tnovember: 'November',\n\t\t\tdecember: 'December'\n\t\t},\n\t\tdayOfWeek: {\n\t\t\tsunday: 'Sunday',\n\t\t\tmonday: 'Monday',\n\t\t\ttuesday: 'Tuesday',\n\t\t\twednesday: 'Wednesday',\n\t\t\tthursday: 'Thursday',\n\t\t\tfriday: 'Friday',\n\t\t\tsaturday: 'Saturday'\n\t\t},\n\t\tdayOfMonth: {\n\t\t\t'1st': '1st',\n\t\t\t'2nd': '2nd',\n\t\t\t'3rd': '3rd',\n\t\t\t'4th': '4th',\n\t\t\t'5th': '5th',\n\t\t\t'6th': '6th',\n\t\t\t'7th': '7th',\n\t\t\t'8th': '8th',\n\t\t\t'9th': '9th',\n\t\t\t'10th': '10th',\n\t\t\t'11th': '11th',\n\t\t\t'12th': '12th',\n\t\t\t'13th': '13th',\n\t\t\t'14th': '14th',\n\t\t\t'15th': '15th',\n\t\t\t'16th': '16th',\n\t\t\t'17th': '17th',\n\t\t\t'18th': '18th',\n\t\t\t'19th': '19th',\n\t\t\t'20th': '20th',\n\t\t\t'21st': '21st',\n\t\t\t'22nd': '22nd',\n\t\t\t'23rd': '23rd',\n\t\t\t'24th': '24th',\n\t\t\t'25th': '25th',\n\t\t\t'26th': '26th',\n\t\t\t'27th': '27th',\n\t\t\t'28th': '28th',\n\t\t\t'29th': '29th',\n\t\t\t'30th': '30th',\n\t\t\t'31st': '31st'\n\t\t}\n\t},\n\ttabs: {\n\t\tseconds: 'Seconds',\n\t\tminutes: 'Minutes',\n\t\thours: 'Hours',\n\t\tday: 'Day',\n\t\tmonth: 'Month',\n\t\tyear: 'Year'\n\t},\n\tquartz: {\n\t\tday: {\n\t\t\tevery: {\n\t\t\t\tlabel: 'Every day'\n\t\t\t},\n\t\t\tdayOfWeekIncrement: {\n\t\t\t\tlabel1: 'Every',\n\t\t\t\tlabel2: 'day(s) starting on'\n\t\t\t},\n\t\t\tdayOfMonthIncrement: {\n\t\t\t\tlabel1: 'Every',\n\t\t\t\tlabel2: 'day(s) starting on the',\n\t\t\t\tlabel3: 'of the month'\n\t\t\t},\n\t\t\tdayOfWeekAnd: {\n\t\t\t\tlabel: 'Specific day of week (choose one or many)'\n\t\t\t},\n\t\t\tdayOfMonthAnd: {\n\t\t\t\tlabel: 'Specific day of month (choose one or many)'\n\t\t\t},\n\t\t\tdayOfMonthLastDay: {\n\t\t\t\tlabel: 'On the last day of the month'\n\t\t\t},\n\t\t\tdayOfMonthLastDayWeek: {\n\t\t\t\tlabel: 'On the last weekday of the month'\n\t\t\t},\n\t\t\tdayOfWeekLastNTHDayWeek: {\n\t\t\t\tlabel1: 'On the last',\n\t\t\t\tlabel2: 'of the month'\n\t\t\t},\n\t\t\tdayOfMonthDaysBeforeEndMonth: {\n\t\t\t\tlabel: 'day(s) before the end of the month'\n\t\t\t},\n\t\t\tdayOfMonthNearestWeekDayOfMonth: {\n\t\t\t\tlabel1: 'Nearest weekday (Monday to Friday) to the',\n\t\t\t\tlabel2: 'of the month'\n\t\t\t},\n\t\t\tdayOfWeekNTHWeekDayOfMonth: {\n\t\t\t\tlabel1: 'On the',\n\t\t\t\tlabel2: 'of the month'\n\t\t\t}\n\t\t},\n\t\tmonth: {\n\t\t\tevery: {\n\t\t\t\tlabel: 'Every month'\n\t\t\t},\n\t\t\tincrement: {\n\t\t\t\tlabel1: 'Every',\n\t\t\t\tlabel2: 'month(s) starting at month',\n\t\t\t},\n\t\t\tand: {\n\t\t\t\tlabel: 'Specific month (choose one or many)'\n\t\t\t},\n\t\t\trange: {\n\t\t\t\tlabel1: 'Every month between month',\n\t\t\t\tlabel2: 'and month'\n\t\t\t}\n\t\t},\n\t\tsecond: {\n\t\t\tevery: {\n\t\t\t\tlabel: 'Every second'\n\t\t\t},\n\t\t\tincrement: {\n\t\t\t\tlabel1: 'Every',\n\t\t\t\tlabel2: 'second(s) starting at second',\n\t\t\t},\n\t\t\tand: {\n\t\t\t\tlabel: 'Specific second (choose one or many)'\n\t\t\t},\n\t\t\trange: {\n\t\t\t\tlabel1: 'Every second between second',\n\t\t\t\tlabel2: 'and second'\n\t\t\t}\n\t\t},\n\t\tminute: {\n\t\t\tevery: {\n\t\t\t\tlabel: 'Every minute'\n\t\t\t},\n\t\t\tincrement: {\n\t\t\t\tlabel1: 'Every',\n\t\t\t\tlabel2: 'minute(s) starting at minute',\n\t\t\t},\n\t\t\tand: {\n\t\t\t\tlabel: 'Specific minute (choose one or many)'\n\t\t\t},\n\t\t\trange: {\n\t\t\t\tlabel1: 'Every minute between minute',\n\t\t\t\tlabel2: 'and minute'\n\t\t\t}\n\t\t},\n\t\thour: {\n\t\t\tevery: {\n\t\t\t\tlabel: 'Every hour'\n\t\t\t},\n\t\t\tincrement: {\n\t\t\t\tlabel1: 'Every',\n\t\t\t\tlabel2: 'hour(s) starting at hour',\n\t\t\t},\n\t\t\tand: {\n\t\t\t\tlabel: 'Specific hour (choose one or many)'\n\t\t\t},\n\t\t\trange: {\n\t\t\t\tlabel1: 'Every hour between hour',\n\t\t\t\tlabel2: 'and hour'\n\t\t\t}\n\t\t},\n\t\tyear: {\n\t\t\tevery: {\n\t\t\t\tlabel: 'Any year'\n\t\t\t},\n\t\t\tincrement: {\n\t\t\t\tlabel1: 'Every',\n\t\t\t\tlabel2: 'year(s) starting at year',\n\t\t\t},\n\t\t\tand: {\n\t\t\t\tlabel: 'Specific year (choose one or many)'\n\t\t\t},\n\t\t\trange: {\n\t\t\t\tlabel1: 'Every year between year',\n\t\t\t\tlabel2: 'and year'\n\t\t\t}\n\t\t}\n\t},\n\tunix: {\n\t\tday: {\n\t\t\tevery: {\n\t\t\t\tlabel: 'Every day'\n\t\t\t},\n\t\t\tdayOfWeekIncrement: {\n\t\t\t\tlabel1: 'Every',\n\t\t\t\tlabel2: 'day(s) of week'\n\t\t\t},\n\t\t\tdayOfMonthIncrement: {\n\t\t\t\tlabel1: 'Every',\n\t\t\t\tlabel2: 'day(s) of month'\n\t\t\t},\n\t\t\tdayOfWeekAnd: {\n\t\t\t\tlabel: 'Specific day of week (choose one or many)'\n\t\t\t},\n\t\t\tdayOfMonthAnd: {\n\t\t\t\tlabel: 'Specific day of month (choose one or many)'\n\t\t\t}\n\t\t},\n\t\tmonth: {\n\t\t\tevery: {\n\t\t\t\tlabel: 'Every month'\n\t\t\t},\n\t\t\tincrement: {\n\t\t\t\tlabel1: 'Every',\n\t\t\t\tlabel2: 'month(s)',\n\t\t\t},\n\t\t\tand: {\n\t\t\t\tlabel: 'Specific month (choose one or many)'\n\t\t\t},\n\t\t\trange: {\n\t\t\t\tlabel1: 'Every month between month',\n\t\t\t\tlabel2: 'and month'\n\t\t\t}\n\t\t},\n\t\tminute: {\n\t\t\tevery: {\n\t\t\t\tlabel: 'Every minute'\n\t\t\t},\n\t\t\tincrement: {\n\t\t\t\tlabel1: 'Every',\n\t\t\t\tlabel2: 'minute(s)',\n\t\t\t},\n\t\t\tand: {\n\t\t\t\tlabel: 'Specific minute (choose one or many)'\n\t\t\t},\n\t\t\trange: {\n\t\t\t\tlabel1: 'Every minute between minute',\n\t\t\t\tlabel2: 'and minute'\n\t\t\t}\n\t\t},\n\t\thour: {\n\t\t\tevery: {\n\t\t\t\tlabel: 'Every hour'\n\t\t\t},\n\t\t\tincrement: {\n\t\t\t\tlabel1: 'Every',\n\t\t\t\tlabel2: 'hour(s)',\n\t\t\t},\n\t\t\tand: {\n\t\t\t\tlabel: 'Specific hour (choose one or many)'\n\t\t\t},\n\t\t\trange: {\n\t\t\t\tlabel1: 'Every hour between hour',\n\t\t\t\tlabel2: 'and hour'\n\t\t\t}\n\t\t}\n\t}\n})"
            },
            {
                "name": "getLocalizationPathes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/e2e/src/app/test/localization.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(obj: CronLocalization = getLocalization(), parentProp = '') => {\n  return Object.keys(obj).reduce((acc, prop) => {\n    const propsLine = [parentProp, prop].filter(a => !!a).join('.');\n\n    // @ts-ignore\n    const value = obj[prop];\n    let values: string[] = [];\n\n    if (typeof value !== 'string') {\n      values = getLocalizationPathes(value, propsLine);\n    } else {\n      values = [propsLine];\n    }\n\n    return [\n      ...acc,\n      ...values\n    ];\n  }, [] as string[]);\n}"
            },
            {
                "name": "localization",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-cron/src/lib/cron-localization.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n\tcommon: {\n\t\tmonth: {\n\t\t\tjanuary: 'January',\n\t\t\tfebruary: 'February',\n\t\t\tmarch: 'March',\n\t\t\tapril: 'April',\n\t\t\tmay: 'May',\n\t\t\tjune: 'June',\n\t\t\tjuly: 'July',\n\t\t\taugust: 'August',\n\t\t\tseptember: 'September',\n\t\t\toctober: 'October',\n\t\t\tnovember: 'November',\n\t\t\tdecember: 'December'\n\t\t},\n\t\tdayOfWeek: {\n\t\t\tsunday: 'Sunday',\n\t\t\tmonday: 'Monday',\n\t\t\ttuesday: 'Tuesday',\n\t\t\twednesday: 'Wednesday',\n\t\t\tthursday: 'Thursday',\n\t\t\tfriday: 'Friday',\n\t\t\tsaturday: 'Saturday'\n\t\t},\n\t\tdayOfMonth: {\n\t\t\t'1st': '1st',\n\t\t\t'2nd': '2nd',\n\t\t\t'3rd': '3rd',\n\t\t\t'4th': '4th',\n\t\t\t'5th': '5th',\n\t\t\t'6th': '6th',\n\t\t\t'7th': '7th',\n\t\t\t'8th': '8th',\n\t\t\t'9th': '9th',\n\t\t\t'10th': '10th',\n\t\t\t'11th': '11th',\n\t\t\t'12th': '12th',\n\t\t\t'13th': '13th',\n\t\t\t'14th': '14th',\n\t\t\t'15th': '15th',\n\t\t\t'16th': '16th',\n\t\t\t'17th': '17th',\n\t\t\t'18th': '18th',\n\t\t\t'19th': '19th',\n\t\t\t'20th': '20th',\n\t\t\t'21st': '21st',\n\t\t\t'22nd': '22nd',\n\t\t\t'23rd': '23rd',\n\t\t\t'24th': '24th',\n\t\t\t'25th': '25th',\n\t\t\t'26th': '26th',\n\t\t\t'27th': '27th',\n\t\t\t'28th': '28th',\n\t\t\t'29th': '29th',\n\t\t\t'30th': '30th',\n\t\t\t'31st': '31st'\n\t\t}\n\t},\n\ttabs: {\n\t\tseconds: 'Seconds',\n\t\tminutes: 'Minutes',\n\t\thours: 'Hours',\n\t\tday: 'Day',\n\t\tmonth: 'Month',\n\t\tyear: 'Year'\n\t},\n\tquartz: {\n\t\tday: {\n\t\t\tevery: {\n\t\t\t\tlabel: 'Every day'\n\t\t\t},\n\t\t\tdayOfWeekIncrement: {\n\t\t\t\tlabel1: 'Every',\n\t\t\t\tlabel2: 'day(s) starting on'\n\t\t\t},\n\t\t\tdayOfMonthIncrement: {\n\t\t\t\tlabel1: 'Every',\n\t\t\t\tlabel2: 'day(s) starting on the',\n\t\t\t\tlabel3: 'of the month'\n\t\t\t},\n\t\t\tdayOfWeekAnd: {\n\t\t\t\tlabel: 'Specific day of week (choose one or many)'\n\t\t\t},\n\t\t\tdayOfWeekRange: {\n\t\t\t\tlabel1: 'Every day between',\n\t\t\t\tlabel2: 'and'\n\t\t\t},\n\t\t\tdayOfMonthAnd: {\n\t\t\t\tlabel: 'Specific day of month (choose one or many)'\n\t\t\t},\n\t\t\tdayOfMonthLastDay: {\n\t\t\t\tlabel: 'On the last day of the month'\n\t\t\t},\n\t\t\tdayOfMonthLastDayWeek: {\n\t\t\t\tlabel: 'On the last weekday of the month'\n\t\t\t},\n\t\t\tdayOfWeekLastNTHDayWeek: {\n\t\t\t\tlabel1: 'On the last',\n\t\t\t\tlabel2: 'of the month'\n\t\t\t},\n\t\t\tdayOfMonthDaysBeforeEndMonth: {\n\t\t\t\tlabel: 'day(s) before the end of the month'\n\t\t\t},\n\t\t\tdayOfMonthNearestWeekDayOfMonth: {\n\t\t\t\tlabel1: 'Nearest weekday (Monday to Friday) to the',\n\t\t\t\tlabel2: 'of the month'\n\t\t\t},\n\t\t\tdayOfWeekNTHWeekDayOfMonth: {\n\t\t\t\tlabel1: 'On the',\n\t\t\t\tlabel2: 'of the month'\n\t\t\t}\n\t\t},\n\t\tmonth: {\n\t\t\tevery: {\n\t\t\t\tlabel: 'Every month'\n\t\t\t},\n\t\t\tincrement: {\n\t\t\t\tlabel1: 'Every',\n\t\t\t\tlabel2: 'month(s) starting at month',\n\t\t\t},\n\t\t\tand: {\n\t\t\t\tlabel: 'Specific month (choose one or many)'\n\t\t\t},\n\t\t\trange: {\n\t\t\t\tlabel1: 'Every month between month',\n\t\t\t\tlabel2: 'and month'\n\t\t\t}\n\t\t},\n\t\tsecond: {\n\t\t\tevery: {\n\t\t\t\tlabel: 'Every second'\n\t\t\t},\n\t\t\tincrement: {\n\t\t\t\tlabel1: 'Every',\n\t\t\t\tlabel2: 'second(s) starting at second',\n\t\t\t},\n\t\t\tand: {\n\t\t\t\tlabel: 'Specific second (choose one or many)'\n\t\t\t},\n\t\t\trange: {\n\t\t\t\tlabel1: 'Every second between second',\n\t\t\t\tlabel2: 'and second'\n\t\t\t}\n\t\t},\n\t\tminute: {\n\t\t\tevery: {\n\t\t\t\tlabel: 'Every minute'\n\t\t\t},\n\t\t\tincrement: {\n\t\t\t\tlabel1: 'Every',\n\t\t\t\tlabel2: 'minute(s) starting at minute',\n\t\t\t},\n\t\t\tand: {\n\t\t\t\tlabel: 'Specific minute (choose one or many)'\n\t\t\t},\n\t\t\trange: {\n\t\t\t\tlabel1: 'Every minute between minute',\n\t\t\t\tlabel2: 'and minute'\n\t\t\t}\n\t\t},\n\t\thour: {\n\t\t\tevery: {\n\t\t\t\tlabel: 'Every hour'\n\t\t\t},\n\t\t\tincrement: {\n\t\t\t\tlabel1: 'Every',\n\t\t\t\tlabel2: 'hour(s) starting at hour',\n\t\t\t},\n\t\t\tand: {\n\t\t\t\tlabel: 'Specific hour (choose one or many)'\n\t\t\t},\n\t\t\trange: {\n\t\t\t\tlabel1: 'Every hour between hour',\n\t\t\t\tlabel2: 'and hour'\n\t\t\t}\n\t\t},\n\t\tyear: {\n\t\t\tevery: {\n\t\t\t\tlabel: 'Any year'\n\t\t\t},\n\t\t\tincrement: {\n\t\t\t\tlabel1: 'Every',\n\t\t\t\tlabel2: 'year(s) starting at year',\n\t\t\t},\n\t\t\tand: {\n\t\t\t\tlabel: 'Specific year (choose one or many)'\n\t\t\t},\n\t\t\trange: {\n\t\t\t\tlabel1: 'Every year between year',\n\t\t\t\tlabel2: 'and year'\n\t\t\t}\n\t\t}\n\t},\n\tunix: {\n\t\tday: {\n\t\t\tevery: {\n\t\t\t\tlabel: 'Every day'\n\t\t\t},\n\t\t\tdayOfWeekIncrement: {\n\t\t\t\tlabel1: 'Every',\n\t\t\t\tlabel2: 'day(s) of week'\n\t\t\t},\n\t\t\tdayOfMonthIncrement: {\n\t\t\t\tlabel1: 'Every',\n\t\t\t\tlabel2: 'day(s) of month'\n\t\t\t},\n\t\t\tdayOfWeekAnd: {\n\t\t\t\tlabel: 'Specific day of week (choose one or many)'\n\t\t\t},\n\t\t\tdayOfMonthAnd: {\n\t\t\t\tlabel: 'Specific day of month (choose one or many)'\n\t\t\t}\n\t\t},\n\t\tmonth: {\n\t\t\tevery: {\n\t\t\t\tlabel: 'Every month'\n\t\t\t},\n\t\t\tincrement: {\n\t\t\t\tlabel1: 'Every',\n\t\t\t\tlabel2: 'month(s)',\n\t\t\t},\n\t\t\tand: {\n\t\t\t\tlabel: 'Specific month (choose one or many)'\n\t\t\t},\n\t\t\trange: {\n\t\t\t\tlabel1: 'Every month between month',\n\t\t\t\tlabel2: 'and month'\n\t\t\t}\n\t\t},\n\t\tminute: {\n\t\t\tevery: {\n\t\t\t\tlabel: 'Every minute'\n\t\t\t},\n\t\t\tincrement: {\n\t\t\t\tlabel1: 'Every',\n\t\t\t\tlabel2: 'minute(s)',\n\t\t\t},\n\t\t\tand: {\n\t\t\t\tlabel: 'Specific minute (choose one or many)'\n\t\t\t},\n\t\t\trange: {\n\t\t\t\tlabel1: 'Every minute between minute',\n\t\t\t\tlabel2: 'and minute'\n\t\t\t}\n\t\t},\n\t\thour: {\n\t\t\tevery: {\n\t\t\t\tlabel: 'Every hour'\n\t\t\t},\n\t\t\tincrement: {\n\t\t\t\tlabel1: 'Every',\n\t\t\t\tlabel2: 'hour(s)',\n\t\t\t},\n\t\t\tand: {\n\t\t\t\tlabel: 'Specific hour (choose one or many)'\n\t\t\t},\n\t\t\trange: {\n\t\t\t\tlabel1: 'Every hour between hour',\n\t\t\t\tlabel2: 'and hour'\n\t\t\t}\n\t\t}\n\t}\n}"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/e2e/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-cron/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/quartz-cron.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<QuartzCronComponent>",
                "defaultValue": "(args: QuartzCronComponent) => ({\n  props: {\n    ...args,\n    changed: action('changed'),\n    tabChanged: action('tabChanged')\n  }\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/unix-cron.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<UnixCronComponent>",
                "defaultValue": "(args: UnixCronComponent) => ({\n  props: {\n    ...args,\n    changed: action('changed'),\n    tabChanged: action('tabChanged')\n  }\n})"
            }
        ],
        "functions": [
            {
                "name": "quartzCronServiceFactory",
                "file": "projects/ng-cron/src/lib/quartz/quartz.component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "unixCronServiceFactory",
                "file": "projects/ng-cron/src/lib/unix/unix.component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            }
        ],
        "typealiases": [
            {
                "name": "CronLocalization",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "DeepPartial<>",
                "file": "projects/ng-cron/src/lib/cron-localization.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "CronSingleType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Type.HOURS | Type.MINUTES | Type.MONTH | Type.SECONDS | Type.YEAR",
                "file": "projects/ng-cron/src/lib/cron-single-tab.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "DeepPartial",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "projects/ng-cron/src/lib/cron-localization.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 194
            },
            {
                "name": "FullCronLocalization",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "projects/ng-cron/src/lib/cron-localization.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "RawObject",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "DeepPartial<literal type>",
                "file": "projects/ng-cron/src/lib/cron-host.abstract.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "projects/e2e/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/e2e/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/e2e/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "projects/ng-cron/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-cron/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-cron/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "stories/quartz-cron.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/quartz-cron.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/quartz-cron.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<QuartzCronComponent>",
                    "defaultValue": "(args: QuartzCronComponent) => ({\n  props: {\n    ...args,\n    changed: action('changed'),\n    tabChanged: action('tabChanged')\n  }\n})"
                }
            ],
            "stories/unix-cron.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/unix-cron.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/unix-cron.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<UnixCronComponent>",
                    "defaultValue": "(args: UnixCronComponent) => ({\n  props: {\n    ...args,\n    changed: action('changed'),\n    tabChanged: action('tabChanged')\n  }\n})"
                }
            ],
            "projects/e2e/src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/e2e/src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "projects/e2e/src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/e2e/src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "projects/e2e/src/app/test/localization.ts": [
                {
                    "name": "getLocalization",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/e2e/src/app/test/localization.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(): CronLocalization => ({\n\tcommon: {\n\t\tmonth: {\n\t\t\tjanuary: 'January',\n\t\t\tfebruary: 'February',\n\t\t\tmarch: 'March',\n\t\t\tapril: 'April',\n\t\t\tmay: 'May',\n\t\t\tjune: 'June',\n\t\t\tjuly: 'July',\n\t\t\taugust: 'August',\n\t\t\tseptember: 'September',\n\t\t\toctober: 'October',\n\t\t\tnovember: 'November',\n\t\t\tdecember: 'December'\n\t\t},\n\t\tdayOfWeek: {\n\t\t\tsunday: 'Sunday',\n\t\t\tmonday: 'Monday',\n\t\t\ttuesday: 'Tuesday',\n\t\t\twednesday: 'Wednesday',\n\t\t\tthursday: 'Thursday',\n\t\t\tfriday: 'Friday',\n\t\t\tsaturday: 'Saturday'\n\t\t},\n\t\tdayOfMonth: {\n\t\t\t'1st': '1st',\n\t\t\t'2nd': '2nd',\n\t\t\t'3rd': '3rd',\n\t\t\t'4th': '4th',\n\t\t\t'5th': '5th',\n\t\t\t'6th': '6th',\n\t\t\t'7th': '7th',\n\t\t\t'8th': '8th',\n\t\t\t'9th': '9th',\n\t\t\t'10th': '10th',\n\t\t\t'11th': '11th',\n\t\t\t'12th': '12th',\n\t\t\t'13th': '13th',\n\t\t\t'14th': '14th',\n\t\t\t'15th': '15th',\n\t\t\t'16th': '16th',\n\t\t\t'17th': '17th',\n\t\t\t'18th': '18th',\n\t\t\t'19th': '19th',\n\t\t\t'20th': '20th',\n\t\t\t'21st': '21st',\n\t\t\t'22nd': '22nd',\n\t\t\t'23rd': '23rd',\n\t\t\t'24th': '24th',\n\t\t\t'25th': '25th',\n\t\t\t'26th': '26th',\n\t\t\t'27th': '27th',\n\t\t\t'28th': '28th',\n\t\t\t'29th': '29th',\n\t\t\t'30th': '30th',\n\t\t\t'31st': '31st'\n\t\t}\n\t},\n\ttabs: {\n\t\tseconds: 'Seconds',\n\t\tminutes: 'Minutes',\n\t\thours: 'Hours',\n\t\tday: 'Day',\n\t\tmonth: 'Month',\n\t\tyear: 'Year'\n\t},\n\tquartz: {\n\t\tday: {\n\t\t\tevery: {\n\t\t\t\tlabel: 'Every day'\n\t\t\t},\n\t\t\tdayOfWeekIncrement: {\n\t\t\t\tlabel1: 'Every',\n\t\t\t\tlabel2: 'day(s) starting on'\n\t\t\t},\n\t\t\tdayOfMonthIncrement: {\n\t\t\t\tlabel1: 'Every',\n\t\t\t\tlabel2: 'day(s) starting on the',\n\t\t\t\tlabel3: 'of the month'\n\t\t\t},\n\t\t\tdayOfWeekAnd: {\n\t\t\t\tlabel: 'Specific day of week (choose one or many)'\n\t\t\t},\n\t\t\tdayOfMonthAnd: {\n\t\t\t\tlabel: 'Specific day of month (choose one or many)'\n\t\t\t},\n\t\t\tdayOfMonthLastDay: {\n\t\t\t\tlabel: 'On the last day of the month'\n\t\t\t},\n\t\t\tdayOfMonthLastDayWeek: {\n\t\t\t\tlabel: 'On the last weekday of the month'\n\t\t\t},\n\t\t\tdayOfWeekLastNTHDayWeek: {\n\t\t\t\tlabel1: 'On the last',\n\t\t\t\tlabel2: 'of the month'\n\t\t\t},\n\t\t\tdayOfMonthDaysBeforeEndMonth: {\n\t\t\t\tlabel: 'day(s) before the end of the month'\n\t\t\t},\n\t\t\tdayOfMonthNearestWeekDayOfMonth: {\n\t\t\t\tlabel1: 'Nearest weekday (Monday to Friday) to the',\n\t\t\t\tlabel2: 'of the month'\n\t\t\t},\n\t\t\tdayOfWeekNTHWeekDayOfMonth: {\n\t\t\t\tlabel1: 'On the',\n\t\t\t\tlabel2: 'of the month'\n\t\t\t}\n\t\t},\n\t\tmonth: {\n\t\t\tevery: {\n\t\t\t\tlabel: 'Every month'\n\t\t\t},\n\t\t\tincrement: {\n\t\t\t\tlabel1: 'Every',\n\t\t\t\tlabel2: 'month(s) starting at month',\n\t\t\t},\n\t\t\tand: {\n\t\t\t\tlabel: 'Specific month (choose one or many)'\n\t\t\t},\n\t\t\trange: {\n\t\t\t\tlabel1: 'Every month between month',\n\t\t\t\tlabel2: 'and month'\n\t\t\t}\n\t\t},\n\t\tsecond: {\n\t\t\tevery: {\n\t\t\t\tlabel: 'Every second'\n\t\t\t},\n\t\t\tincrement: {\n\t\t\t\tlabel1: 'Every',\n\t\t\t\tlabel2: 'second(s) starting at second',\n\t\t\t},\n\t\t\tand: {\n\t\t\t\tlabel: 'Specific second (choose one or many)'\n\t\t\t},\n\t\t\trange: {\n\t\t\t\tlabel1: 'Every second between second',\n\t\t\t\tlabel2: 'and second'\n\t\t\t}\n\t\t},\n\t\tminute: {\n\t\t\tevery: {\n\t\t\t\tlabel: 'Every minute'\n\t\t\t},\n\t\t\tincrement: {\n\t\t\t\tlabel1: 'Every',\n\t\t\t\tlabel2: 'minute(s) starting at minute',\n\t\t\t},\n\t\t\tand: {\n\t\t\t\tlabel: 'Specific minute (choose one or many)'\n\t\t\t},\n\t\t\trange: {\n\t\t\t\tlabel1: 'Every minute between minute',\n\t\t\t\tlabel2: 'and minute'\n\t\t\t}\n\t\t},\n\t\thour: {\n\t\t\tevery: {\n\t\t\t\tlabel: 'Every hour'\n\t\t\t},\n\t\t\tincrement: {\n\t\t\t\tlabel1: 'Every',\n\t\t\t\tlabel2: 'hour(s) starting at hour',\n\t\t\t},\n\t\t\tand: {\n\t\t\t\tlabel: 'Specific hour (choose one or many)'\n\t\t\t},\n\t\t\trange: {\n\t\t\t\tlabel1: 'Every hour between hour',\n\t\t\t\tlabel2: 'and hour'\n\t\t\t}\n\t\t},\n\t\tyear: {\n\t\t\tevery: {\n\t\t\t\tlabel: 'Any year'\n\t\t\t},\n\t\t\tincrement: {\n\t\t\t\tlabel1: 'Every',\n\t\t\t\tlabel2: 'year(s) starting at year',\n\t\t\t},\n\t\t\tand: {\n\t\t\t\tlabel: 'Specific year (choose one or many)'\n\t\t\t},\n\t\t\trange: {\n\t\t\t\tlabel1: 'Every year between year',\n\t\t\t\tlabel2: 'and year'\n\t\t\t}\n\t\t}\n\t},\n\tunix: {\n\t\tday: {\n\t\t\tevery: {\n\t\t\t\tlabel: 'Every day'\n\t\t\t},\n\t\t\tdayOfWeekIncrement: {\n\t\t\t\tlabel1: 'Every',\n\t\t\t\tlabel2: 'day(s) of week'\n\t\t\t},\n\t\t\tdayOfMonthIncrement: {\n\t\t\t\tlabel1: 'Every',\n\t\t\t\tlabel2: 'day(s) of month'\n\t\t\t},\n\t\t\tdayOfWeekAnd: {\n\t\t\t\tlabel: 'Specific day of week (choose one or many)'\n\t\t\t},\n\t\t\tdayOfMonthAnd: {\n\t\t\t\tlabel: 'Specific day of month (choose one or many)'\n\t\t\t}\n\t\t},\n\t\tmonth: {\n\t\t\tevery: {\n\t\t\t\tlabel: 'Every month'\n\t\t\t},\n\t\t\tincrement: {\n\t\t\t\tlabel1: 'Every',\n\t\t\t\tlabel2: 'month(s)',\n\t\t\t},\n\t\t\tand: {\n\t\t\t\tlabel: 'Specific month (choose one or many)'\n\t\t\t},\n\t\t\trange: {\n\t\t\t\tlabel1: 'Every month between month',\n\t\t\t\tlabel2: 'and month'\n\t\t\t}\n\t\t},\n\t\tminute: {\n\t\t\tevery: {\n\t\t\t\tlabel: 'Every minute'\n\t\t\t},\n\t\t\tincrement: {\n\t\t\t\tlabel1: 'Every',\n\t\t\t\tlabel2: 'minute(s)',\n\t\t\t},\n\t\t\tand: {\n\t\t\t\tlabel: 'Specific minute (choose one or many)'\n\t\t\t},\n\t\t\trange: {\n\t\t\t\tlabel1: 'Every minute between minute',\n\t\t\t\tlabel2: 'and minute'\n\t\t\t}\n\t\t},\n\t\thour: {\n\t\t\tevery: {\n\t\t\t\tlabel: 'Every hour'\n\t\t\t},\n\t\t\tincrement: {\n\t\t\t\tlabel1: 'Every',\n\t\t\t\tlabel2: 'hour(s)',\n\t\t\t},\n\t\t\tand: {\n\t\t\t\tlabel: 'Specific hour (choose one or many)'\n\t\t\t},\n\t\t\trange: {\n\t\t\t\tlabel1: 'Every hour between hour',\n\t\t\t\tlabel2: 'and hour'\n\t\t\t}\n\t\t}\n\t}\n})"
                },
                {
                    "name": "getLocalizationPathes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/e2e/src/app/test/localization.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(obj: CronLocalization = getLocalization(), parentProp = '') => {\n  return Object.keys(obj).reduce((acc, prop) => {\n    const propsLine = [parentProp, prop].filter(a => !!a).join('.');\n\n    // @ts-ignore\n    const value = obj[prop];\n    let values: string[] = [];\n\n    if (typeof value !== 'string') {\n      values = getLocalizationPathes(value, propsLine);\n    } else {\n      values = [propsLine];\n    }\n\n    return [\n      ...acc,\n      ...values\n    ];\n  }, [] as string[]);\n}"
                }
            ],
            "projects/ng-cron/src/lib/cron-localization.ts": [
                {
                    "name": "localization",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-cron/src/lib/cron-localization.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n\tcommon: {\n\t\tmonth: {\n\t\t\tjanuary: 'January',\n\t\t\tfebruary: 'February',\n\t\t\tmarch: 'March',\n\t\t\tapril: 'April',\n\t\t\tmay: 'May',\n\t\t\tjune: 'June',\n\t\t\tjuly: 'July',\n\t\t\taugust: 'August',\n\t\t\tseptember: 'September',\n\t\t\toctober: 'October',\n\t\t\tnovember: 'November',\n\t\t\tdecember: 'December'\n\t\t},\n\t\tdayOfWeek: {\n\t\t\tsunday: 'Sunday',\n\t\t\tmonday: 'Monday',\n\t\t\ttuesday: 'Tuesday',\n\t\t\twednesday: 'Wednesday',\n\t\t\tthursday: 'Thursday',\n\t\t\tfriday: 'Friday',\n\t\t\tsaturday: 'Saturday'\n\t\t},\n\t\tdayOfMonth: {\n\t\t\t'1st': '1st',\n\t\t\t'2nd': '2nd',\n\t\t\t'3rd': '3rd',\n\t\t\t'4th': '4th',\n\t\t\t'5th': '5th',\n\t\t\t'6th': '6th',\n\t\t\t'7th': '7th',\n\t\t\t'8th': '8th',\n\t\t\t'9th': '9th',\n\t\t\t'10th': '10th',\n\t\t\t'11th': '11th',\n\t\t\t'12th': '12th',\n\t\t\t'13th': '13th',\n\t\t\t'14th': '14th',\n\t\t\t'15th': '15th',\n\t\t\t'16th': '16th',\n\t\t\t'17th': '17th',\n\t\t\t'18th': '18th',\n\t\t\t'19th': '19th',\n\t\t\t'20th': '20th',\n\t\t\t'21st': '21st',\n\t\t\t'22nd': '22nd',\n\t\t\t'23rd': '23rd',\n\t\t\t'24th': '24th',\n\t\t\t'25th': '25th',\n\t\t\t'26th': '26th',\n\t\t\t'27th': '27th',\n\t\t\t'28th': '28th',\n\t\t\t'29th': '29th',\n\t\t\t'30th': '30th',\n\t\t\t'31st': '31st'\n\t\t}\n\t},\n\ttabs: {\n\t\tseconds: 'Seconds',\n\t\tminutes: 'Minutes',\n\t\thours: 'Hours',\n\t\tday: 'Day',\n\t\tmonth: 'Month',\n\t\tyear: 'Year'\n\t},\n\tquartz: {\n\t\tday: {\n\t\t\tevery: {\n\t\t\t\tlabel: 'Every day'\n\t\t\t},\n\t\t\tdayOfWeekIncrement: {\n\t\t\t\tlabel1: 'Every',\n\t\t\t\tlabel2: 'day(s) starting on'\n\t\t\t},\n\t\t\tdayOfMonthIncrement: {\n\t\t\t\tlabel1: 'Every',\n\t\t\t\tlabel2: 'day(s) starting on the',\n\t\t\t\tlabel3: 'of the month'\n\t\t\t},\n\t\t\tdayOfWeekAnd: {\n\t\t\t\tlabel: 'Specific day of week (choose one or many)'\n\t\t\t},\n\t\t\tdayOfWeekRange: {\n\t\t\t\tlabel1: 'Every day between',\n\t\t\t\tlabel2: 'and'\n\t\t\t},\n\t\t\tdayOfMonthAnd: {\n\t\t\t\tlabel: 'Specific day of month (choose one or many)'\n\t\t\t},\n\t\t\tdayOfMonthLastDay: {\n\t\t\t\tlabel: 'On the last day of the month'\n\t\t\t},\n\t\t\tdayOfMonthLastDayWeek: {\n\t\t\t\tlabel: 'On the last weekday of the month'\n\t\t\t},\n\t\t\tdayOfWeekLastNTHDayWeek: {\n\t\t\t\tlabel1: 'On the last',\n\t\t\t\tlabel2: 'of the month'\n\t\t\t},\n\t\t\tdayOfMonthDaysBeforeEndMonth: {\n\t\t\t\tlabel: 'day(s) before the end of the month'\n\t\t\t},\n\t\t\tdayOfMonthNearestWeekDayOfMonth: {\n\t\t\t\tlabel1: 'Nearest weekday (Monday to Friday) to the',\n\t\t\t\tlabel2: 'of the month'\n\t\t\t},\n\t\t\tdayOfWeekNTHWeekDayOfMonth: {\n\t\t\t\tlabel1: 'On the',\n\t\t\t\tlabel2: 'of the month'\n\t\t\t}\n\t\t},\n\t\tmonth: {\n\t\t\tevery: {\n\t\t\t\tlabel: 'Every month'\n\t\t\t},\n\t\t\tincrement: {\n\t\t\t\tlabel1: 'Every',\n\t\t\t\tlabel2: 'month(s) starting at month',\n\t\t\t},\n\t\t\tand: {\n\t\t\t\tlabel: 'Specific month (choose one or many)'\n\t\t\t},\n\t\t\trange: {\n\t\t\t\tlabel1: 'Every month between month',\n\t\t\t\tlabel2: 'and month'\n\t\t\t}\n\t\t},\n\t\tsecond: {\n\t\t\tevery: {\n\t\t\t\tlabel: 'Every second'\n\t\t\t},\n\t\t\tincrement: {\n\t\t\t\tlabel1: 'Every',\n\t\t\t\tlabel2: 'second(s) starting at second',\n\t\t\t},\n\t\t\tand: {\n\t\t\t\tlabel: 'Specific second (choose one or many)'\n\t\t\t},\n\t\t\trange: {\n\t\t\t\tlabel1: 'Every second between second',\n\t\t\t\tlabel2: 'and second'\n\t\t\t}\n\t\t},\n\t\tminute: {\n\t\t\tevery: {\n\t\t\t\tlabel: 'Every minute'\n\t\t\t},\n\t\t\tincrement: {\n\t\t\t\tlabel1: 'Every',\n\t\t\t\tlabel2: 'minute(s) starting at minute',\n\t\t\t},\n\t\t\tand: {\n\t\t\t\tlabel: 'Specific minute (choose one or many)'\n\t\t\t},\n\t\t\trange: {\n\t\t\t\tlabel1: 'Every minute between minute',\n\t\t\t\tlabel2: 'and minute'\n\t\t\t}\n\t\t},\n\t\thour: {\n\t\t\tevery: {\n\t\t\t\tlabel: 'Every hour'\n\t\t\t},\n\t\t\tincrement: {\n\t\t\t\tlabel1: 'Every',\n\t\t\t\tlabel2: 'hour(s) starting at hour',\n\t\t\t},\n\t\t\tand: {\n\t\t\t\tlabel: 'Specific hour (choose one or many)'\n\t\t\t},\n\t\t\trange: {\n\t\t\t\tlabel1: 'Every hour between hour',\n\t\t\t\tlabel2: 'and hour'\n\t\t\t}\n\t\t},\n\t\tyear: {\n\t\t\tevery: {\n\t\t\t\tlabel: 'Any year'\n\t\t\t},\n\t\t\tincrement: {\n\t\t\t\tlabel1: 'Every',\n\t\t\t\tlabel2: 'year(s) starting at year',\n\t\t\t},\n\t\t\tand: {\n\t\t\t\tlabel: 'Specific year (choose one or many)'\n\t\t\t},\n\t\t\trange: {\n\t\t\t\tlabel1: 'Every year between year',\n\t\t\t\tlabel2: 'and year'\n\t\t\t}\n\t\t}\n\t},\n\tunix: {\n\t\tday: {\n\t\t\tevery: {\n\t\t\t\tlabel: 'Every day'\n\t\t\t},\n\t\t\tdayOfWeekIncrement: {\n\t\t\t\tlabel1: 'Every',\n\t\t\t\tlabel2: 'day(s) of week'\n\t\t\t},\n\t\t\tdayOfMonthIncrement: {\n\t\t\t\tlabel1: 'Every',\n\t\t\t\tlabel2: 'day(s) of month'\n\t\t\t},\n\t\t\tdayOfWeekAnd: {\n\t\t\t\tlabel: 'Specific day of week (choose one or many)'\n\t\t\t},\n\t\t\tdayOfMonthAnd: {\n\t\t\t\tlabel: 'Specific day of month (choose one or many)'\n\t\t\t}\n\t\t},\n\t\tmonth: {\n\t\t\tevery: {\n\t\t\t\tlabel: 'Every month'\n\t\t\t},\n\t\t\tincrement: {\n\t\t\t\tlabel1: 'Every',\n\t\t\t\tlabel2: 'month(s)',\n\t\t\t},\n\t\t\tand: {\n\t\t\t\tlabel: 'Specific month (choose one or many)'\n\t\t\t},\n\t\t\trange: {\n\t\t\t\tlabel1: 'Every month between month',\n\t\t\t\tlabel2: 'and month'\n\t\t\t}\n\t\t},\n\t\tminute: {\n\t\t\tevery: {\n\t\t\t\tlabel: 'Every minute'\n\t\t\t},\n\t\t\tincrement: {\n\t\t\t\tlabel1: 'Every',\n\t\t\t\tlabel2: 'minute(s)',\n\t\t\t},\n\t\t\tand: {\n\t\t\t\tlabel: 'Specific minute (choose one or many)'\n\t\t\t},\n\t\t\trange: {\n\t\t\t\tlabel1: 'Every minute between minute',\n\t\t\t\tlabel2: 'and minute'\n\t\t\t}\n\t\t},\n\t\thour: {\n\t\t\tevery: {\n\t\t\t\tlabel: 'Every hour'\n\t\t\t},\n\t\t\tincrement: {\n\t\t\t\tlabel1: 'Every',\n\t\t\t\tlabel2: 'hour(s)',\n\t\t\t},\n\t\t\tand: {\n\t\t\t\tlabel: 'Specific hour (choose one or many)'\n\t\t\t},\n\t\t\trange: {\n\t\t\t\tlabel1: 'Every hour between hour',\n\t\t\t\tlabel2: 'and hour'\n\t\t\t}\n\t\t}\n\t}\n}"
                }
            ]
        },
        "groupedFunctions": {
            "projects/ng-cron/src/lib/quartz/quartz.component.ts": [
                {
                    "name": "quartzCronServiceFactory",
                    "file": "projects/ng-cron/src/lib/quartz/quartz.component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ],
            "projects/ng-cron/src/lib/unix/unix.component.ts": [
                {
                    "name": "unixCronServiceFactory",
                    "file": "projects/ng-cron/src/lib/unix/unix.component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/ng-cron/src/lib/cron-localization.ts": [
                {
                    "name": "CronLocalization",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "DeepPartial<>",
                    "file": "projects/ng-cron/src/lib/cron-localization.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                },
                {
                    "name": "DeepPartial",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "projects/ng-cron/src/lib/cron-localization.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 194
                },
                {
                    "name": "FullCronLocalization",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "projects/ng-cron/src/lib/cron-localization.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "projects/ng-cron/src/lib/cron-single-tab.type.ts": [
                {
                    "name": "CronSingleType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Type.HOURS | Type.MINUTES | Type.MONTH | Type.SECONDS | Type.YEAR",
                    "file": "projects/ng-cron/src/lib/cron-single-tab.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "projects/ng-cron/src/lib/cron-host.abstract.ts": [
                {
                    "name": "RawObject",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "DeepPartial<literal type>",
                    "file": "projects/ng-cron/src/lib/cron-host.abstract.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "cypress/support/component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Chainable",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/e2e/src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/e2e/src/app/test/container/container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/29",
                "status": "low"
            },
            {
                "filePath": "projects/e2e/src/app/test/localization.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getLocalization",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/e2e/src/app/test/localization.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getLocalizationPathes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/e2e/src/app/test/test.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TestComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/e2e/src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/e2e/src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/e2e/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/e2e/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/container/container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CronContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/cron-host.abstract.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "CronHostComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/cron-localization.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "localization",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/cron-tab-single-segment.abstract.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "CronTabSingleSegmentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/cron-tab.abstract.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "CronTabComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/quartz/quartz.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "QuartzCronComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/quartz/quartz.component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "quartzCronServiceFactory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/quartz/tabs/day/day.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "QuartzCronDayComponent",
                "coveragePercent": 0,
                "coverageCount": "0/35",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/quartz/tabs/hour/hour.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "QuartzCronHourComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/quartz/tabs/minute/minute.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "QuartzCronMinuteComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/quartz/tabs/month/month.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "QuartzCronMonthComponent",
                "coveragePercent": 0,
                "coverageCount": "0/23",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/quartz/tabs/second/second.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "QuartzCronSecondComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/quartz/tabs/shared/increment/increment.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "QuartzCronIncrementComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/quartz/tabs/year/year.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "QuartzCronYearComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/shared/and/and.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CronAndComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/shared/every/every.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CronEveryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/shared/range/range.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CronRangeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/unix/tabs/day/day.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UnixCronDayComponent",
                "coveragePercent": 0,
                "coverageCount": "0/29",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/unix/tabs/hour/hour.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UnixCronHourComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/unix/tabs/minute/minute.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UnixCronMinuteComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/unix/tabs/month/month.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UnixCronMonthComponent",
                "coveragePercent": 0,
                "coverageCount": "0/23",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/unix/tabs/shared/increment/increment.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UnixCronIncrementComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/unix/unix.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UnixCronComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/unix/unix.component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "unixCronServiceFactory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/quartz-cron.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "QuartzCronComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "stories/quartz-cron.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/quartz-cron.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/unix-cron.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UnixCronComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "stories/unix-cron.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/unix-cron.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}